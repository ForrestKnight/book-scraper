{"version":3,"file":"mapperTab.js","sources":["../../node_modules/zod/lib/helpers/util.js","../../node_modules/zod/lib/ZodError.js","../../node_modules/zod/lib/locales/en.js","../../node_modules/zod/lib/errors.js","../../node_modules/zod/lib/helpers/parseUtil.js","../../node_modules/zod/lib/helpers/typeAliases.js","../../node_modules/zod/lib/helpers/errorUtil.js","../../node_modules/zod/lib/types.js","../../node_modules/zod/lib/external.js","../../node_modules/zod/lib/index.js","../cjs/protocol/protocol.js","../cjs/protocol-parser/protocol-parser.js","../cjs/utils/EventEmitter.js","../../node_modules/mitt/dist/mitt.js","../cjs/utils/log.js","../cjs/utils/processingQueue.js","../cjs/utils/unitConversions.js","../cjs/utils/deferred.js","../cjs/bidiMapper/domains/script/scriptEvaluator.js","../cjs/bidiMapper/domains/script/realm.js","../cjs/bidiMapper/domains/context/browsingContextImpl.js","../cjs/bidiMapper/domains/log/logHelper.js","../cjs/bidiMapper/domains/log/logManager.js","../cjs/utils/DefaultMap.js","../cjs/bidiMapper/domains/network/networkRequest.js","../cjs/bidiMapper/domains/network/networkProcessor.js","../cjs/bidiMapper/domains/context/cdpTarget.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v1.js","../../node_modules/uuid/dist/esm-browser/parse.js","../../node_modules/uuid/dist/esm-browser/v35.js","../../node_modules/uuid/dist/esm-browser/md5.js","../../node_modules/uuid/dist/esm-browser/v3.js","../../node_modules/uuid/dist/esm-browser/sha1.js","../../node_modules/uuid/dist/esm-browser/v5.js","../../node_modules/uuid/dist/esm-browser/nil.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/uuid/dist/esm-browser/version.js","../cjs/bidiMapper/domains/context/PreloadScriptStorage.js","../cjs/bidiMapper/domains/context/browsingContextProcessor.js","../cjs/bidiMapper/OutgoingBidiMessage.js","../cjs/bidiMapper/CommandProcessor.js","../cjs/bidiMapper/domains/context/browsingContextStorage.js","../cjs/utils/buffer.js","../cjs/utils/idWrapper.js","../cjs/bidiMapper/domains/events/SubscriptionManager.js","../cjs/bidiMapper/domains/events/EventManager.js","../cjs/bidiMapper/domains/script/realmStorage.js","../cjs/bidiMapper/BidiServer.js","../cjs/cdp/cdpClient.js","../cjs/cdp/cdpConnection.js","../cjs/utils/websocketTransport.js","../cjs/cdp/index.js","../cjs/bidiTab/mapperTabPage.js","../cjs/bidiTab/bidiTab.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\"\n        ? (obj) => Object.keys(obj)\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val)\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            (0, errors_1.getErrorMap)(),\n            en_1.default,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        this.nonstrict = this.passthrough;\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    static create(discriminator, options, params) {\n        const optionsMap = new Map();\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x);\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return (0, parseUtil_1.OK)(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return (0, parseUtil_1.OK)((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => (0, exports.custom)((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CDP = exports.Network = exports.Log = exports.BrowsingContext = exports.Script = exports.Message = void 0;\nvar Message;\n(function (Message) {\n    // keep-sorted end;\n    let ErrorCode;\n    (function (ErrorCode) {\n        // keep-sorted start\n        ErrorCode[\"InvalidArgument\"] = \"invalid argument\";\n        ErrorCode[\"InvalidSessionId\"] = \"invalid session id\";\n        ErrorCode[\"NoSuchAlert\"] = \"no such alert\";\n        ErrorCode[\"NoSuchFrame\"] = \"no such frame\";\n        ErrorCode[\"NoSuchHandle\"] = \"no such handle\";\n        ErrorCode[\"NoSuchNode\"] = \"no such node\";\n        ErrorCode[\"NoSuchScript\"] = \"no such script\";\n        ErrorCode[\"SessionNotCreated\"] = \"session not created\";\n        ErrorCode[\"UnknownCommand\"] = \"unknown command\";\n        ErrorCode[\"UnknownError\"] = \"unknown error\";\n        ErrorCode[\"UnsupportedOperation\"] = \"unsupported operation\";\n        // keep-sorted end\n    })(ErrorCode = Message.ErrorCode || (Message.ErrorCode = {}));\n    class ErrorResponse {\n        error;\n        message;\n        stacktrace;\n        constructor(error, message, stacktrace) {\n            this.error = error;\n            this.message = message;\n            this.stacktrace = stacktrace;\n        }\n        toErrorResponse(commandId) {\n            return {\n                id: commandId,\n                error: this.error,\n                message: this.message,\n                stacktrace: this.stacktrace,\n            };\n        }\n    }\n    Message.ErrorResponse = ErrorResponse;\n    class InvalidArgumentException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.InvalidArgument, message, stacktrace);\n        }\n    }\n    Message.InvalidArgumentException = InvalidArgumentException;\n    class NoSuchHandleException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchHandle, message, stacktrace);\n        }\n    }\n    Message.NoSuchHandleException = NoSuchHandleException;\n    class InvalidSessionIdException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.InvalidSessionId, message, stacktrace);\n        }\n    }\n    Message.InvalidSessionIdException = InvalidSessionIdException;\n    class NoSuchAlertException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchAlert, message, stacktrace);\n        }\n    }\n    Message.NoSuchAlertException = NoSuchAlertException;\n    class NoSuchFrameException extends ErrorResponse {\n        constructor(message) {\n            super(ErrorCode.NoSuchFrame, message);\n        }\n    }\n    Message.NoSuchFrameException = NoSuchFrameException;\n    class NoSuchNodeException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchNode, message, stacktrace);\n        }\n    }\n    Message.NoSuchNodeException = NoSuchNodeException;\n    class NoSuchScriptException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.NoSuchScript, message, stacktrace);\n        }\n    }\n    Message.NoSuchScriptException = NoSuchScriptException;\n    class SessionNotCreatedException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.SessionNotCreated, message, stacktrace);\n        }\n    }\n    Message.SessionNotCreatedException = SessionNotCreatedException;\n    class UnknownCommandException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnknownCommand, message, stacktrace);\n        }\n    }\n    Message.UnknownCommandException = UnknownCommandException;\n    class UnknownErrorException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnknownError, message, stacktrace);\n        }\n    }\n    Message.UnknownErrorException = UnknownErrorException;\n    class UnsupportedOperationException extends ErrorResponse {\n        constructor(message, stacktrace) {\n            super(ErrorCode.UnsupportedOperation, message, stacktrace);\n        }\n    }\n    Message.UnsupportedOperationException = UnsupportedOperationException;\n})(Message = exports.Message || (exports.Message = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"MessageEvent\"] = \"script.message\";\n    })(EventNames = Script.EventNames || (Script.EventNames = {}));\n    Script.AllEvents = 'script';\n})(Script = exports.Script || (exports.Script = {}));\n// https://w3c.github.io/webdriver-bidi/#module-browsingContext\nvar BrowsingContext;\n(function (BrowsingContext) {\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LoadEvent\"] = \"browsingContext.load\";\n        EventNames[\"DomContentLoadedEvent\"] = \"browsingContext.domContentLoaded\";\n        EventNames[\"ContextCreatedEvent\"] = \"browsingContext.contextCreated\";\n        EventNames[\"ContextDestroyedEvent\"] = \"browsingContext.contextDestroyed\";\n    })(EventNames = BrowsingContext.EventNames || (BrowsingContext.EventNames = {}));\n    BrowsingContext.AllEvents = 'browsingContext';\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-log */\nvar Log;\n(function (Log) {\n    Log.AllEvents = 'log';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"LogEntryAddedEvent\"] = \"log.entryAdded\";\n    })(EventNames = Log.EventNames || (Log.EventNames = {}));\n})(Log = exports.Log || (exports.Log = {}));\nvar Network;\n(function (Network) {\n    Network.AllEvents = 'network';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"BeforeRequestSentEvent\"] = \"network.beforeRequestSent\";\n        EventNames[\"ResponseCompletedEvent\"] = \"network.responseCompleted\";\n        EventNames[\"FetchErrorEvent\"] = \"network.fetchError\";\n    })(EventNames = Network.EventNames || (Network.EventNames = {}));\n})(Network = exports.Network || (exports.Network = {}));\nvar CDP;\n(function (CDP) {\n    CDP.AllEvents = 'cdp';\n    let EventNames;\n    (function (EventNames) {\n        EventNames[\"EventReceivedEvent\"] = \"cdp.eventReceived\";\n    })(EventNames = CDP.EventNames || (CDP.EventNames = {}));\n})(CDP = exports.CDP || (exports.CDP = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.CDP = exports.BrowsingContext = exports.Script = exports.CommonDataTypes = exports.parseObject = void 0;\n/**\n * @fileoverview Provides parsing and validator for WebDriver BiDi protocol.\n * Parser types should match the `../protocol` types.\n */\nconst zod_1 = require(\"zod\");\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst MAX_INT = 9007199254740991;\nfunction parseObject(obj, schema) {\n    const parseResult = schema.safeParse(obj);\n    if (parseResult.success) {\n        return parseResult.data;\n    }\n    const errorMessage = parseResult.error.errors\n        .map((e) => `${e.message} in ` +\n        `${e.path.map((p) => JSON.stringify(p)).join('/')}.`)\n        .join(' ');\n    throw new protocol_js_1.Message.InvalidArgumentException(errorMessage);\n}\nexports.parseObject = parseObject;\nvar CommonDataTypes;\n(function (CommonDataTypes) {\n    CommonDataTypes.SharedReferenceSchema = zod_1.z.object({\n        sharedId: zod_1.z.string().min(1),\n        handle: zod_1.z.string().optional(),\n    });\n    CommonDataTypes.RemoteReferenceSchema = zod_1.z.object({\n        handle: zod_1.z.string().min(1),\n    });\n    // UndefinedValue = {\n    //   type: \"undefined\",\n    // }\n    const UndefinedValueSchema = zod_1.z.object({ type: zod_1.z.literal('undefined') });\n    // NullValue = {\n    //   type: \"null\",\n    // }\n    const NullValueSchema = zod_1.z.object({ type: zod_1.z.literal('null') });\n    // StringValue = {\n    //   type: \"string\",\n    //   value: text,\n    // }\n    const StringValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('string'),\n        value: zod_1.z.string(),\n    });\n    // SpecialNumber = \"NaN\" / \"-0\" / \"Infinity\" / \"-Infinity\";\n    const SpecialNumberSchema = zod_1.z.enum(['NaN', '-0', 'Infinity', '-Infinity']);\n    // NumberValue = {\n    //   type: \"number\",\n    //   value: number / SpecialNumber,\n    // }\n    const NumberValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('number'),\n        value: zod_1.z.union([SpecialNumberSchema, zod_1.z.number()]),\n    });\n    // BooleanValue = {\n    //   type: \"boolean\",\n    //   value: bool,\n    // }\n    const BooleanValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('boolean'),\n        value: zod_1.z.boolean(),\n    });\n    // BigIntValue = {\n    //   type: \"bigint\",\n    //   value: text,\n    // }\n    const BigIntValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('bigint'),\n        value: zod_1.z.string(),\n    });\n    const PrimitiveProtocolValueSchema = zod_1.z.union([\n        UndefinedValueSchema,\n        NullValueSchema,\n        StringValueSchema,\n        NumberValueSchema,\n        BooleanValueSchema,\n        BigIntValueSchema,\n    ]);\n    CommonDataTypes.LocalValueSchema = zod_1.z.lazy(() => zod_1.z.union([\n        PrimitiveProtocolValueSchema,\n        ArrayLocalValueSchema,\n        DateLocalValueSchema,\n        MapLocalValueSchema,\n        ObjectLocalValueSchema,\n        RegExpLocalValueSchema,\n        SetLocalValueSchema,\n    ]));\n    // Order is important, as `parse` is processed in the same order.\n    // `SharedReferenceSchema`->`RemoteReferenceSchema`->`LocalValueSchema`.\n    const LocalOrRemoteValueSchema = zod_1.z.union([\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n    ]);\n    // ListLocalValue = [*LocalValue];\n    const ListLocalValueSchema = zod_1.z.array(LocalOrRemoteValueSchema);\n    // ArrayLocalValue = {\n    //   type: \"array\",\n    //   value: ListLocalValue,\n    // }\n    const ArrayLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('array'),\n        value: ListLocalValueSchema,\n    });\n    // DateLocalValue = {\n    //   type: \"date\",\n    //   value: text\n    // }\n    const DateLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('date'),\n        value: zod_1.z.string().min(1),\n    });\n    // MappingLocalValue = [*[(LocalValue / text), LocalValue]];\n    const MappingLocalValueSchema = zod_1.z.tuple([\n        zod_1.z.union([zod_1.z.string(), LocalOrRemoteValueSchema]),\n        LocalOrRemoteValueSchema,\n    ]);\n    // MapLocalValue = {\n    //   type: \"map\",\n    //   value: MappingLocalValue,\n    // }\n    const MapLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('map'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // ObjectLocalValue = {\n    //   type: \"object\",\n    //   value: MappingLocalValue,\n    // }\n    const ObjectLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('object'),\n        value: zod_1.z.array(MappingLocalValueSchema),\n    });\n    // RegExpLocalValue = {\n    //   type: \"regexp\",\n    //   value: RegExpValue,\n    // }\n    const RegExpLocalValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('regexp'),\n        value: zod_1.z.object({\n            pattern: zod_1.z.string(),\n            flags: zod_1.z.string().optional(),\n        }),\n    });\n    // SetLocalValue = {\n    //   type: \"set\",\n    //   value: ListLocalValue,\n    // }\n    const SetLocalValueSchema = zod_1.z.lazy(() => zod_1.z.object({\n        type: zod_1.z.literal('set'),\n        value: ListLocalValueSchema,\n    }));\n    // BrowsingContext = text;\n    CommonDataTypes.BrowsingContextSchema = zod_1.z.string();\n    CommonDataTypes.MaxDepthSchema = zod_1.z.number().int().nonnegative().max(MAX_INT);\n})(CommonDataTypes = exports.CommonDataTypes || (exports.CommonDataTypes = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-script */\nvar Script;\n(function (Script) {\n    const RealmTypeSchema = zod_1.z.enum([\n        'window',\n        'dedicated-worker',\n        'shared-worker',\n        'service-worker',\n        'worker',\n        'paint-worklet',\n        'audio-worklet',\n        'worklet',\n    ]);\n    Script.GetRealmsParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n        type: RealmTypeSchema.optional(),\n    });\n    function parseGetRealmsParams(params) {\n        return parseObject(params, Script.GetRealmsParametersSchema);\n    }\n    Script.parseGetRealmsParams = parseGetRealmsParams;\n    // ContextTarget = {\n    //   context: BrowsingContext,\n    //   ?sandbox: text\n    // }\n    const ContextTargetSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        sandbox: zod_1.z.string().optional(),\n    });\n    // RealmTarget = {realm: Realm};\n    const RealmTargetSchema = zod_1.z.object({\n        realm: zod_1.z.string().min(1),\n    });\n    // Target = (\n    //   RealmTarget //\n    //   ContextTarget\n    // );\n    // Order is important, as `parse` is processed in the same order.\n    // `RealmTargetSchema` has higher priority.\n    const TargetSchema = zod_1.z.union([RealmTargetSchema, ContextTargetSchema]);\n    // ResultOwnership = \"root\" / \"none\"\n    const ResultOwnershipSchema = zod_1.z.enum(['root', 'none']);\n    // ScriptEvaluateParameters = {\n    //   expression: text;\n    //   target: Target;\n    //   ?awaitPromise: bool;\n    //   ?resultOwnership: ResultOwnership;\n    // }\n    const EvaluateParametersSchema = zod_1.z.object({\n        expression: zod_1.z.string(),\n        awaitPromise: zod_1.z.boolean(),\n        target: TargetSchema,\n        resultOwnership: ResultOwnershipSchema.optional(),\n    });\n    function parseEvaluateParams(params) {\n        return parseObject(params, EvaluateParametersSchema);\n    }\n    Script.parseEvaluateParams = parseEvaluateParams;\n    // DisownParameters = {\n    //   handles: [Handle]\n    //   target: script.Target;\n    // }\n    const DisownParametersSchema = zod_1.z.object({\n        target: TargetSchema,\n        handles: zod_1.z.array(zod_1.z.string()),\n    });\n    function parseDisownParams(params) {\n        return parseObject(params, DisownParametersSchema);\n    }\n    Script.parseDisownParams = parseDisownParams;\n    const ChannelSchema = zod_1.z.string();\n    const ChannelPropertiesSchema = zod_1.z.object({\n        channel: ChannelSchema,\n        // TODO(#294): maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        // See: https://github.com/w3c/webdriver-bidi/pull/361/files#r1141961142\n        maxDepth: zod_1.z.number().int().min(1).max(1).optional(),\n        ownership: ResultOwnershipSchema.optional(),\n    });\n    Script.ChannelValueSchema = zod_1.z.object({\n        type: zod_1.z.literal('channel'),\n        value: ChannelPropertiesSchema,\n    });\n    Script.PreloadScriptSchema = zod_1.z.string();\n    Script.AddPreloadScriptParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        arguments: zod_1.z.array(Script.ChannelValueSchema).optional(),\n        sandbox: zod_1.z.string().optional(),\n        context: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseAddPreloadScriptParams(params) {\n        return parseObject(params, Script.AddPreloadScriptParametersSchema);\n    }\n    Script.parseAddPreloadScriptParams = parseAddPreloadScriptParams;\n    Script.RemovePreloadScriptParametersSchema = zod_1.z.object({\n        script: Script.PreloadScriptSchema,\n    });\n    function parseRemovePreloadScriptParams(params) {\n        return parseObject(params, Script.RemovePreloadScriptParametersSchema);\n    }\n    Script.parseRemovePreloadScriptParams = parseRemovePreloadScriptParams;\n    // ArgumentValue = (\n    //   RemoteReference //\n    //   LocalValue //\n    //   script.Channel\n    // );\n    const ArgumentValueSchema = zod_1.z.union([\n        CommonDataTypes.RemoteReferenceSchema,\n        CommonDataTypes.SharedReferenceSchema,\n        CommonDataTypes.LocalValueSchema,\n        Script.ChannelValueSchema,\n    ]);\n    // CallFunctionParameters = {\n    //   functionDeclaration: text;\n    //   awaitPromise: bool;\n    //   target: script.Target;\n    //   ?arguments: [*script.ArgumentValue];\n    //   ?this: script.ArgumentValue;\n    //   ?resultOwnership: script.ResultOwnership;\n    // }\n    const CallFunctionParametersSchema = zod_1.z.object({\n        functionDeclaration: zod_1.z.string(),\n        target: TargetSchema,\n        arguments: zod_1.z.array(ArgumentValueSchema).optional(),\n        this: ArgumentValueSchema.optional(),\n        awaitPromise: zod_1.z.boolean(),\n        resultOwnership: ResultOwnershipSchema.optional(),\n    });\n    function parseCallFunctionParams(params) {\n        return parseObject(params, CallFunctionParametersSchema);\n    }\n    Script.parseCallFunctionParams = parseCallFunctionParams;\n})(Script = exports.Script || (exports.Script = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-browsingContext */\nvar BrowsingContext;\n(function (BrowsingContext) {\n    // GetTreeParameters = {\n    //   ?maxDepth: js-uint,\n    //   ?root: browsingContext.BrowsingContext,\n    // }\n    const GetTreeParametersSchema = zod_1.z.object({\n        maxDepth: CommonDataTypes.MaxDepthSchema.optional(),\n        root: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseGetTreeParams(params) {\n        return parseObject(params, GetTreeParametersSchema);\n    }\n    BrowsingContext.parseGetTreeParams = parseGetTreeParams;\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const ReadinessStateSchema = zod_1.z.enum(['none', 'interactive', 'complete']);\n    // BrowsingContextNavigateParameters = {\n    //   context: BrowsingContext,\n    //   url: text,\n    //   ?wait: ReadinessState,\n    // }\n    // ReadinessState = \"none\" / \"interactive\" / \"complete\"\n    const NavigateParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        url: zod_1.z.string().url(),\n        wait: ReadinessStateSchema.optional(),\n    });\n    function parseNavigateParams(params) {\n        return parseObject(params, NavigateParametersSchema);\n    }\n    BrowsingContext.parseNavigateParams = parseNavigateParams;\n    // BrowsingContextCreateType = \"tab\" / \"window\"\n    // BrowsingContextCreateParameters = {\n    //   type: BrowsingContextCreateType\n    // }\n    const CreateParametersSchema = zod_1.z.object({\n        type: zod_1.z.enum(['tab', 'window']),\n        referenceContext: CommonDataTypes.BrowsingContextSchema.optional(),\n    });\n    function parseCreateParams(params) {\n        return parseObject(params, CreateParametersSchema);\n    }\n    BrowsingContext.parseCreateParams = parseCreateParams;\n    // BrowsingContextCloseParameters = {\n    //   context: BrowsingContext\n    // }\n    const CloseParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCloseParams(params) {\n        return parseObject(params, CloseParametersSchema);\n    }\n    BrowsingContext.parseCloseParams = parseCloseParams;\n    // browsingContext.CaptureScreenshotParameters = {\n    //   context: browsingContext.BrowsingContext\n    // }\n    const CaptureScreenshotParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseCaptureScreenshotParams(params) {\n        return parseObject(params, CaptureScreenshotParametersSchema);\n    }\n    BrowsingContext.parseCaptureScreenshotParams = parseCaptureScreenshotParams;\n    // All units are in cm.\n    // PrintPageParameters = {\n    //   ?height: (float .ge 0.0) .default 27.94,\n    //   ?width: (float .ge 0.0) .default 21.59,\n    // }\n    const PrintPageParametersSchema = zod_1.z.object({\n        height: zod_1.z.number().min(0.0).default(27.94).optional(),\n        width: zod_1.z.number().min(0.0).default(21.59).optional(),\n    });\n    // All units are in cm.\n    // PrintMarginParameters = {\n    //   ?bottom: (float .ge 0.0) .default 1.0,\n    //   ?left: (float .ge 0.0) .default 1.0,\n    //   ?right: (float .ge 0.0) .default 1.0,\n    //   ?top: (float .ge 0.0) .default 1.0,\n    // }\n    const PrintMarginParametersSchema = zod_1.z.object({\n        bottom: zod_1.z.number().min(0.0).default(1.0).optional(),\n        left: zod_1.z.number().min(0.0).default(1.0).optional(),\n        right: zod_1.z.number().min(0.0).default(1.0).optional(),\n        top: zod_1.z.number().min(0.0).default(1.0).optional(),\n    });\n    /** @see https://w3c.github.io/webdriver/#dfn-parse-a-page-range */\n    const PrintPageRangesSchema = zod_1.z\n        .array(zod_1.z.union([zod_1.z.string().min(1), zod_1.z.number().int().nonnegative()]))\n        .refine((pageRanges) => {\n        return pageRanges.every((pageRange) => {\n            const match = String(pageRange).match(\n            // matches: '2' | '2-' | '-2' | '2-4'\n            /^(?:(?:\\d+)|(?:\\d+[-])|(?:[-]\\d+)|(?:(?<start>\\d+)[-](?<end>\\d+)))$/);\n            // If a page range is specified, validate start <= end.\n            const { start, end } = match?.groups ?? {};\n            if (start && end && Number(start) > Number(end)) {\n                return false;\n            }\n            return match;\n        });\n    });\n    // PrintParameters = {\n    //   context: browsingContext.BrowsingContext,\n    //   ?background: bool .default false,\n    //   ?margin: browsingContext.PrintMarginParameters,\n    //   ?orientation: (\"portrait\" / \"landscape\") .default \"portrait\",\n    //   ?page: browsingContext.PrintPageParameters,\n    //   ?pageRanges: [*(js-uint / text)],\n    //   ?scale: 0.1..2.0 .default 1.0,\n    //   ?shrinkToFit: bool .default true,\n    // }\n    const PrintParametersSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n        background: zod_1.z.boolean().default(false).optional(),\n        margin: PrintMarginParametersSchema.optional(),\n        orientation: zod_1.z\n            .enum(['portrait', 'landscape'])\n            .default('portrait')\n            .optional(),\n        page: PrintPageParametersSchema.optional(),\n        pageRanges: PrintPageRangesSchema.default([]).optional(),\n        scale: zod_1.z.number().min(0.1).max(2.0).default(1.0).optional(),\n        shrinkToFit: zod_1.z.boolean().default(true).optional(),\n    });\n    function parsePrintParams(params) {\n        return parseObject(params, PrintParametersSchema);\n    }\n    BrowsingContext.parsePrintParams = parsePrintParams;\n})(BrowsingContext = exports.BrowsingContext || (exports.BrowsingContext = {}));\nvar CDP;\n(function (CDP) {\n    const SendCommandParamsSchema = zod_1.z.object({\n        // Allowing any cdpMethod, and casting to proper type later on.\n        cdpMethod: zod_1.z.string(),\n        // `passthrough` allows object to have any fields.\n        // https://github.com/colinhacks/zod#passthrough\n        cdpParams: zod_1.z.object({}).passthrough(),\n        cdpSession: zod_1.z.string().optional(),\n    });\n    function parseSendCommandParams(params) {\n        return parseObject(params, SendCommandParamsSchema);\n    }\n    CDP.parseSendCommandParams = parseSendCommandParams;\n    const GetSessionParamsSchema = zod_1.z.object({\n        context: CommonDataTypes.BrowsingContextSchema,\n    });\n    function parseGetSessionParams(params) {\n        return parseObject(params, GetSessionParamsSchema);\n    }\n    CDP.parseGetSessionParams = parseGetSessionParams;\n})(CDP = exports.CDP || (exports.CDP = {}));\n/** @see https://w3c.github.io/webdriver-bidi/#module-session */\nvar Session;\n(function (Session) {\n    const SubscriptionRequestParametersEventsSchema = zod_1.z.enum([\n        protocol_js_1.BrowsingContext.AllEvents,\n        ...Object.values(protocol_js_1.BrowsingContext.EventNames),\n        protocol_js_1.Log.AllEvents,\n        ...Object.values(protocol_js_1.Log.EventNames),\n        protocol_js_1.CDP.AllEvents,\n        ...Object.values(protocol_js_1.CDP.EventNames),\n        protocol_js_1.Network.AllEvents,\n        ...Object.values(protocol_js_1.Network.EventNames),\n        protocol_js_1.Script.AllEvents,\n        ...Object.values(protocol_js_1.Script.EventNames),\n    ]);\n    // SessionSubscriptionRequest = {\n    //   events: [*text],\n    //   ?contexts: [*BrowsingContext],\n    // }\n    const SubscriptionRequestParametersSchema = zod_1.z.object({\n        events: zod_1.z.array(SubscriptionRequestParametersEventsSchema),\n        contexts: zod_1.z.array(CommonDataTypes.BrowsingContextSchema).optional(),\n    });\n    function parseSubscribeParams(params) {\n        return parseObject(params, SubscriptionRequestParametersSchema);\n    }\n    Session.parseSubscribeParams = parseSubscribeParams;\n})(Session = exports.Session || (exports.Session = {}));\n//# sourceMappingURL=protocol-parser.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventEmitter = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst mitt_1 = __importDefault(require(\"mitt\"));\nclass EventEmitter {\n    #emitter = (0, mitt_1.default)();\n    on(type, handler) {\n        this.#emitter.on(type, handler);\n        return this;\n    }\n    /**\n     * Like `on` but the listener will only be fired once and then it will be removed.\n     * @param event The event you'd like to listen to\n     * @param handler The handler function to run when the event occurs\n     * @return `this` to enable chaining method calls.\n     */\n    once(event, handler) {\n        const onceHandler = (eventData) => {\n            handler(eventData);\n            this.off(event, onceHandler);\n        };\n        return this.on(event, onceHandler);\n    }\n    off(type, handler) {\n        this.#emitter.off(type, handler);\n        return this;\n    }\n    /**\n     * Emits an event and call any associated listeners.\n     *\n     * @param event The event to emit.\n     * @param eventData Any data to emit with the event.\n     * @return `true` if there are any listeners, `false` otherwise.\n     */\n    emit(event, eventData) {\n        this.#emitter.emit(event, eventData);\n    }\n}\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=EventEmitter.js.map","module.exports=function(n){return{all:n=n||new Map,on:function(e,t){var i=n.get(e);i?i.push(t):n.set(e,[t])},off:function(e,t){var i=n.get(e);i&&(t?i.splice(i.indexOf(t)>>>0,1):n.set(e,[]))},emit:function(e,t){var i=n.get(e);i&&i.slice().map(function(n){n(t)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(e,t)})}}};\n//# sourceMappingURL=mitt.js.map\n","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogType = void 0;\nvar LogType;\n(function (LogType) {\n    // keep-sorted start\n    LogType[\"bidi\"] = \"BiDi Messages\";\n    LogType[\"browsingContexts\"] = \"Browsing Contexts\";\n    LogType[\"cdp\"] = \"CDP\";\n    LogType[\"system\"] = \"System\";\n    // keep-sorted end\n})(LogType = exports.LogType || (exports.LogType = {}));\n//# sourceMappingURL=log.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProcessingQueue = void 0;\nconst log_js_1 = require(\"./log.js\");\nclass ProcessingQueue {\n    #logger;\n    #processor;\n    #queue = [];\n    // Flag to keep only 1 active processor.\n    #isProcessing = false;\n    constructor(processor, logger) {\n        this.#processor = processor;\n        this.#logger = logger;\n    }\n    add(entry) {\n        this.#queue.push(entry);\n        // No need in waiting. Just initialise processor if needed.\n        void this.#processIfNeeded();\n    }\n    async #processIfNeeded() {\n        if (this.#isProcessing) {\n            return;\n        }\n        this.#isProcessing = true;\n        while (this.#queue.length > 0) {\n            const entryPromise = this.#queue.shift();\n            if (entryPromise !== undefined) {\n                await entryPromise\n                    .then((entry) => this.#processor(entry))\n                    .catch((e) => {\n                    this.#logger?.(log_js_1.LogType.system, 'Event was not processed:', e);\n                });\n            }\n        }\n        this.#isProcessing = false;\n    }\n}\nexports.ProcessingQueue = ProcessingQueue;\n//# sourceMappingURL=processingQueue.js.map","\"use strict\";\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.inchesFromCm = void 0;\n/** @return Given an input in cm, convert it to inches. */\nfunction inchesFromCm(cm) {\n    return cm / 2.54;\n}\nexports.inchesFromCm = inchesFromCm;\n//# sourceMappingURL=unitConversions.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Deferred = void 0;\nclass Deferred {\n    #isFinished = false;\n    #promise;\n    #resolve = () => { };\n    #reject = () => { };\n    get isFinished() {\n        return this.#isFinished;\n    }\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n        // Needed to avoid `Uncaught (in promise)`. The promises returned by `then`\n        // and `catch` will be rejected anyway.\n        this.#promise.catch(() => { });\n    }\n    then(onFulfilled, onRejected) {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n    catch(onRejected) {\n        return this.#promise.catch(onRejected);\n    }\n    resolve(value) {\n        this.#isFinished = true;\n        this.#resolve(value);\n    }\n    reject(reason) {\n        this.#isFinished = true;\n        this.#reject(reason);\n    }\n    finally(onFinally) {\n        return this.#promise.finally(onFinally);\n    }\n    [Symbol.toStringTag] = 'Promise';\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScriptEvaluator = exports.SHARED_ID_DIVIDER = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n// As `script.evaluate` wraps call into serialization script, `lineNumber`\n// should be adjusted.\nconst CALL_FUNCTION_STACKTRACE_LINE_OFFSET = 1;\nconst EVALUATE_STACKTRACE_LINE_OFFSET = 0;\nexports.SHARED_ID_DIVIDER = '_element_';\nclass ScriptEvaluator {\n    #eventManager;\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @param realm\n     * @return string The stringified object.\n     */\n    static async stringifyObject(cdpObject, realm) {\n        const stringifyResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => {\n                return String(obj);\n            }),\n            awaitPromise: false,\n            arguments: [cdpObject],\n            returnByValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return stringifyResult.result.value;\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpRemoteObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     * @param realm\n     */\n    async serializeCdpObject(cdpRemoteObject, resultOwnership, realm) {\n        const arg = ScriptEvaluator.#cdpRemoteObjectToCallArgument(cdpRemoteObject);\n        const cdpWebDriverValue = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n            functionDeclaration: String((obj) => obj),\n            awaitPromise: false,\n            arguments: [arg],\n            generateWebDriverValue: true,\n            executionContextId: realm.executionContextId,\n        });\n        return realm.cdpToBidiValue(cdpWebDriverValue, resultOwnership);\n    }\n    async scriptEvaluate(realm, expression, awaitPromise, resultOwnership) {\n        const cdpEvaluateResult = await realm.cdpClient.sendCommand('Runtime.evaluate', {\n            contextId: realm.executionContextId,\n            expression,\n            awaitPromise,\n            generateWebDriverValue: true,\n        });\n        if (cdpEvaluateResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpEvaluateResult.exceptionDetails, EVALUATE_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: realm.cdpToBidiValue(cdpEvaluateResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    async callFunction(realm, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const callFunctionAndSerializeScript = `(...args)=>{ return _callFunction((\\n${functionDeclaration}\\n), args);\n      function _callFunction(f, args) {\n        const deserializedThis = args.shift();\n        const deserializedArgs = args;\n        return f.apply(deserializedThis, deserializedArgs);\n      }}`;\n        const thisAndArgumentsList = [\n            await this.#deserializeToCdpArg(_this, realm),\n        ];\n        thisAndArgumentsList.push(...(await Promise.all(_arguments.map(async (a) => {\n            return this.#deserializeToCdpArg(a, realm);\n        }))));\n        let cdpCallFunctionResult;\n        try {\n            cdpCallFunctionResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: callFunctionAndSerializeScript,\n                awaitPromise,\n                arguments: thisAndArgumentsList,\n                generateWebDriverValue: true,\n                executionContextId: realm.executionContextId,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the argument.\n            // The check can be done on the `deserialization` step, but this approach\n            // helps to save round-trips.\n            if (e.code === -32000 &&\n                [\n                    'Could not find object with given id',\n                    'Argument should belong to the same JavaScript world as target object',\n                    'Invalid remote object id',\n                ].includes(e.message)) {\n                throw new protocol_js_1.Message.NoSuchHandleException('Handle was not found.');\n            }\n            throw e;\n        }\n        if (cdpCallFunctionResult.exceptionDetails) {\n            // Serialize exception details.\n            return {\n                exceptionDetails: await this.#serializeCdpExceptionDetails(cdpCallFunctionResult.exceptionDetails, CALL_FUNCTION_STACKTRACE_LINE_OFFSET, resultOwnership, realm),\n                type: 'exception',\n                realm: realm.realmId,\n            };\n        }\n        return {\n            type: 'success',\n            result: realm.cdpToBidiValue(cdpCallFunctionResult, resultOwnership),\n            realm: realm.realmId,\n        };\n    }\n    static #cdpRemoteObjectToCallArgument(cdpRemoteObject) {\n        if (cdpRemoteObject.objectId !== undefined) {\n            return { objectId: cdpRemoteObject.objectId };\n        }\n        if (cdpRemoteObject.unserializableValue !== undefined) {\n            return { unserializableValue: cdpRemoteObject.unserializableValue };\n        }\n        return { value: cdpRemoteObject.value };\n    }\n    async #deserializeToCdpArg(argumentValue, realm) {\n        if ('sharedId' in argumentValue) {\n            const [navigableId, rawBackendNodeId] = argumentValue.sharedId.split(exports.SHARED_ID_DIVIDER);\n            const backendNodeId = parseInt(rawBackendNodeId ?? '');\n            if (isNaN(backendNodeId) ||\n                backendNodeId === undefined ||\n                navigableId === undefined) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`SharedId \"${argumentValue.sharedId}\" should have format \"{navigableId}${exports.SHARED_ID_DIVIDER}{backendNodeId}\".`);\n            }\n            if (realm.navigableId !== navigableId) {\n                throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" belongs to different document. Current document is ${realm.navigableId}.`);\n            }\n            try {\n                const obj = await realm.cdpClient.sendCommand('DOM.resolveNode', {\n                    backendNodeId,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `obj.object.objectId` after using.\n                return { objectId: obj.object.objectId };\n            }\n            catch (e) {\n                // Heuristic to detect \"no such node\" exception. Based on the  specific\n                // CDP implementation.\n                if (e.code === -32000 && e.message === 'No node with given id found') {\n                    throw new protocol_js_1.Message.NoSuchNodeException(`SharedId \"${argumentValue.sharedId}\" was not found.`);\n                }\n                throw e;\n            }\n        }\n        if ('handle' in argumentValue) {\n            return { objectId: argumentValue.handle };\n        }\n        switch (argumentValue.type) {\n            // Primitive Protocol Value\n            // https://w3c.github.io/webdriver-bidi/#data-types-protocolValue-primitiveProtocolValue\n            case 'undefined':\n                return { unserializableValue: 'undefined' };\n            case 'null':\n                return { unserializableValue: 'null' };\n            case 'string':\n                return { value: argumentValue.value };\n            case 'number':\n                if (argumentValue.value === 'NaN') {\n                    return { unserializableValue: 'NaN' };\n                }\n                else if (argumentValue.value === '-0') {\n                    return { unserializableValue: '-0' };\n                }\n                else if (argumentValue.value === 'Infinity') {\n                    return { unserializableValue: 'Infinity' };\n                }\n                else if (argumentValue.value === '-Infinity') {\n                    return { unserializableValue: '-Infinity' };\n                }\n                return {\n                    value: argumentValue.value,\n                };\n            case 'boolean':\n                return { value: Boolean(argumentValue.value) };\n            case 'bigint':\n                return {\n                    unserializableValue: `BigInt(${JSON.stringify(argumentValue.value)})`,\n                };\n            case 'date':\n                return {\n                    unserializableValue: `new Date(Date.parse(${JSON.stringify(argumentValue.value)}))`,\n                };\n            case 'regexp':\n                return {\n                    unserializableValue: `new RegExp(${JSON.stringify(argumentValue.value.pattern)}, ${JSON.stringify(argumentValue.value.flags)})`,\n                };\n            case 'map': {\n                // TODO: If none of the nested keys and values has a remote\n                // reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = new Map();\n                        for (let i = 0; i < args.length; i += 2) {\n                            result.set(args[i], args[i + 1]);\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'object': {\n                // TODO: If none of the nested keys and values has a remote\n                //  reference, serialize to `unserializableValue` without CDP roundtrip.\n                const keyValueArray = await this.#flattenKeyValuePairs(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        const result = {};\n                        for (let i = 0; i < args.length; i += 2) {\n                            // Key should be either `string`, `number`, or `symbol`.\n                            const key = args[i];\n                            result[key] = args[i + 1];\n                        }\n                        return result;\n                    }),\n                    awaitPromise: false,\n                    arguments: keyValueArray,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'array': {\n                // TODO: If none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return args;\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'set': {\n                // TODO: if none of the nested items has a remote reference,\n                // serialize to `unserializableValue` without CDP roundtrip.\n                const args = await this.#flattenValueList(argumentValue.value, realm);\n                const argEvalResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((...args) => {\n                        return new Set(args);\n                    }),\n                    awaitPromise: false,\n                    arguments: args,\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                });\n                // TODO(#375): Release `argEvalResult.result.objectId` after using.\n                return { objectId: argEvalResult.result.objectId };\n            }\n            case 'channel': {\n                const createChannelHandleResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String(() => {\n                        const queue = [];\n                        let queueNonEmptyResolver = null;\n                        return {\n                            /**\n                             * Gets a promise, which is resolved as soon as a message occurs\n                             * in the queue.\n                             */\n                            async getMessage() {\n                                const onMessage = queue.length > 0\n                                    ? Promise.resolve()\n                                    : new Promise((resolve) => {\n                                        queueNonEmptyResolver = resolve;\n                                    });\n                                await onMessage;\n                                return queue.shift();\n                            },\n                            /**\n                             * Adds a message to the queue.\n                             * Resolves the pending promise if needed.\n                             */\n                            sendMessage(message) {\n                                queue.push(message);\n                                if (queueNonEmptyResolver !== null) {\n                                    queueNonEmptyResolver();\n                                    queueNonEmptyResolver = null;\n                                }\n                            },\n                        };\n                    }),\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    generateWebDriverValue: false,\n                });\n                const channelHandle = createChannelHandleResult.result.objectId;\n                // Long-poll the message queue asynchronously.\n                void this.#initChannelListener(argumentValue, channelHandle, realm);\n                const sendMessageArgResult = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                    functionDeclaration: String((channelHandle) => {\n                        return channelHandle.sendMessage;\n                    }),\n                    arguments: [\n                        {\n                            objectId: channelHandle,\n                        },\n                    ],\n                    returnByValue: false,\n                    executionContextId: realm.executionContextId,\n                    generateWebDriverValue: false,\n                });\n                return { objectId: sendMessageArgResult.result.objectId };\n            }\n            // TODO(#375): Dispose of nested objects.\n            default:\n                throw new Error(`Value ${JSON.stringify(argumentValue)} is not deserializable.`);\n        }\n    }\n    async #flattenKeyValuePairs(mapping, realm) {\n        const keyValueArray = [];\n        for (const [key, value] of mapping) {\n            let keyArg;\n            if (typeof key === 'string') {\n                // Key is a string.\n                keyArg = { value: key };\n            }\n            else {\n                // Key is a serialized value.\n                keyArg = await this.#deserializeToCdpArg(key, realm);\n            }\n            const valueArg = await this.#deserializeToCdpArg(value, realm);\n            keyValueArray.push(keyArg);\n            keyValueArray.push(valueArg);\n        }\n        return keyValueArray;\n    }\n    async #flattenValueList(list, realm) {\n        return Promise.all(list.map((value) => this.#deserializeToCdpArg(value, realm)));\n    }\n    async #initChannelListener(channel, channelHandle, realm) {\n        const channelId = channel.value.channel;\n        // TODO(#294): Remove this loop after the realm is destroyed.\n        // Rely on the CDP throwing exception in such a case.\n        for (;;) {\n            const message = await realm.cdpClient.sendCommand('Runtime.callFunctionOn', {\n                functionDeclaration: String(async (channelHandle) => channelHandle.getMessage()),\n                arguments: [\n                    {\n                        objectId: channelHandle,\n                    },\n                ],\n                awaitPromise: true,\n                executionContextId: realm.executionContextId,\n                generateWebDriverValue: true,\n            });\n            this.#eventManager.registerEvent({\n                method: protocol_js_1.Script.EventNames.MessageEvent,\n                params: {\n                    channel: channelId,\n                    data: realm.cdpToBidiValue(message, channel.value.ownership ?? 'none'),\n                    source: {\n                        realm: realm.realmId,\n                        context: realm.browsingContextId,\n                    },\n                },\n            }, realm.browsingContextId);\n        }\n    }\n    async #serializeCdpExceptionDetails(cdpExceptionDetails, lineOffset, resultOwnership, realm) {\n        const callFrames = cdpExceptionDetails.stackTrace?.callFrames.map((frame) => ({\n            url: frame.url,\n            functionName: frame.functionName,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: frame.lineNumber - lineOffset,\n            columnNumber: frame.columnNumber,\n        }));\n        const exception = await this.serializeCdpObject(\n        // Exception should always be there.\n        cdpExceptionDetails.exception, resultOwnership, realm);\n        const text = await ScriptEvaluator.stringifyObject(cdpExceptionDetails.exception, realm);\n        return {\n            exception,\n            columnNumber: cdpExceptionDetails.columnNumber,\n            // As `script.evaluate` wraps call into serialization script, so\n            // `lineNumber` should be adjusted.\n            lineNumber: cdpExceptionDetails.lineNumber - lineOffset,\n            stackTrace: {\n                callFrames: callFrames || [],\n            },\n            text: text || cdpExceptionDetails.text,\n        };\n    }\n}\nexports.ScriptEvaluator = ScriptEvaluator;\n//# sourceMappingURL=scriptEvaluator.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = void 0;\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst scriptEvaluator_js_1 = require(\"./scriptEvaluator.js\");\nclass Realm {\n    #realmStorage;\n    #browsingContextStorage;\n    #realmId;\n    #browsingContextId;\n    #executionContextId;\n    #origin;\n    #type;\n    #cdpClient;\n    #eventManager;\n    #scriptEvaluator;\n    sandbox;\n    cdpSessionId;\n    #logger;\n    constructor(realmStorage, browsingContextStorage, realmId, browsingContextId, executionContextId, origin, type, sandbox, cdpSessionId, cdpClient, eventManager, logger) {\n        this.#realmId = realmId;\n        this.#browsingContextId = browsingContextId;\n        this.#executionContextId = executionContextId;\n        this.sandbox = sandbox;\n        this.#origin = origin;\n        this.#type = type;\n        this.cdpSessionId = cdpSessionId;\n        this.#cdpClient = cdpClient;\n        this.#realmStorage = realmStorage;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#eventManager = eventManager;\n        this.#scriptEvaluator = new scriptEvaluator_js_1.ScriptEvaluator(this.#eventManager);\n        this.#realmStorage.realmMap.set(this.#realmId, this);\n        this.#logger = logger;\n    }\n    async #releaseObject(handle) {\n        try {\n            await this.cdpClient.sendCommand('Runtime.releaseObject', {\n                objectId: handle,\n            });\n        }\n        catch (e) {\n            // Heuristic to determine if the problem is in the unknown handler.\n            // Ignore the error if so.\n            if (!(e.code === -32000 && e.message === 'Invalid remote object id')) {\n                throw e;\n            }\n        }\n    }\n    async disown(handle) {\n        // Disowning an object from different realm does nothing.\n        if (this.#realmStorage.knownHandlesToRealm.get(handle) !== this.realmId) {\n            return;\n        }\n        await this.#releaseObject(handle);\n        this.#realmStorage.knownHandlesToRealm.delete(handle);\n    }\n    cdpToBidiValue(cdpValue, resultOwnership) {\n        const cdpWebDriverValue = cdpValue.result.webDriverValue;\n        const bidiValue = this.webDriverValueToBiDi(cdpWebDriverValue);\n        if (cdpValue.result.objectId) {\n            const objectId = cdpValue.result.objectId;\n            if (resultOwnership === 'root') {\n                // Extend BiDi value with `handle` based on required `resultOwnership`\n                // and  CDP response but not on the actual BiDi type.\n                bidiValue.handle = objectId;\n                // Remember all the handles sent to client.\n                this.#realmStorage.knownHandlesToRealm.set(objectId, this.realmId);\n            }\n            else {\n                // No need in awaiting for the object to be released.\n                void this.#releaseObject(objectId).catch((error) => this.#logger?.(log_js_1.LogType.system, error));\n            }\n        }\n        return bidiValue;\n    }\n    webDriverValueToBiDi(webDriverValue) {\n        // This relies on the CDP to implement proper BiDi serialization, except\n        // backendNodeId/sharedId and `platformobject`.\n        const result = webDriverValue;\n        // Platform object is a special case. It should have only `{type: object}`\n        // without `value` field.\n        if (result.type === 'platformobject') {\n            return { type: 'object' };\n        }\n        const bidiValue = result.value;\n        if (bidiValue === undefined) {\n            return result;\n        }\n        if (result.type === 'node') {\n            if (Object.hasOwn(bidiValue, 'backendNodeId')) {\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                result.sharedId = `${this.navigableId}${scriptEvaluator_js_1.SHARED_ID_DIVIDER}${bidiValue.backendNodeId}`;\n                delete bidiValue['backendNodeId'];\n            }\n            if (Object.hasOwn(bidiValue, 'children')) {\n                for (const i in bidiValue.children) {\n                    bidiValue.children[i] = this.webDriverValueToBiDi(bidiValue.children[i]);\n                }\n            }\n        }\n        // Recursively update the nested values.\n        if (['array', 'set'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = this.webDriverValueToBiDi(bidiValue[i]);\n            }\n        }\n        if (['object', 'map'].includes(webDriverValue.type)) {\n            for (const i in bidiValue) {\n                bidiValue[i] = [\n                    this.webDriverValueToBiDi(bidiValue[i][0]),\n                    this.webDriverValueToBiDi(bidiValue[i][1]),\n                ];\n            }\n        }\n        return result;\n    }\n    toBiDi() {\n        return {\n            realm: this.realmId,\n            origin: this.origin,\n            type: this.type,\n            context: this.browsingContextId,\n            ...(this.sandbox === undefined ? {} : { sandbox: this.sandbox }),\n        };\n    }\n    get realmId() {\n        return this.#realmId;\n    }\n    get navigableId() {\n        return (this.#browsingContextStorage.findContext(this.#browsingContextId)\n            ?.navigableId ?? 'UNKNOWN');\n    }\n    get browsingContextId() {\n        return this.#browsingContextId;\n    }\n    get executionContextId() {\n        return this.#executionContextId;\n    }\n    get origin() {\n        return this.#origin;\n    }\n    get type() {\n        return this.#type;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    async callFunction(functionDeclaration, _this, _arguments, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.callFunction(this, functionDeclaration, _this, _arguments, awaitPromise, resultOwnership),\n        };\n    }\n    async scriptEvaluate(expression, awaitPromise, resultOwnership) {\n        const context = this.#browsingContextStorage.getContext(this.browsingContextId);\n        await context.awaitUnblocked();\n        return {\n            result: await this.#scriptEvaluator.scriptEvaluate(this, expression, awaitPromise, resultOwnership),\n        };\n    }\n    /**\n     * Serializes a given CDP object into BiDi, keeping references in the\n     * target's `globalThis`.\n     * @param cdpObject CDP remote object to be serialized.\n     * @param resultOwnership Indicates desired ResultOwnership.\n     */\n    async serializeCdpObject(cdpObject, resultOwnership) {\n        return this.#scriptEvaluator.serializeCdpObject(cdpObject, resultOwnership, this);\n    }\n    /**\n     * Gets the string representation of an object. This is equivalent to\n     * calling toString() on the object value.\n     * @param cdpObject CDP remote object representing an object.\n     * @return string The stringified object.\n     */\n    async stringifyObject(cdpObject) {\n        return scriptEvaluator_js_1.ScriptEvaluator.stringifyObject(cdpObject, this);\n    }\n}\nexports.Realm = Realm;\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextImpl = void 0;\nconst unitConversions_js_1 = require(\"../../../utils/unitConversions.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst realm_js_1 = require(\"../script/realm.js\");\nclass BrowsingContextImpl {\n    /** The ID of this browsing context. */\n    #id;\n    /**\n     * The ID of the parent browsing context.\n     * If null, this is a top-level context.\n     */\n    #parentId;\n    /** Direct children browsing contexts. */\n    #children = new Set();\n    #browsingContextStorage;\n    #defers = {\n        documentInitialized: new deferred_js_1.Deferred(),\n        Page: {\n            navigatedWithinDocument: new deferred_js_1.Deferred(),\n            lifecycleEvent: {\n                DOMContentLoaded: new deferred_js_1.Deferred(),\n                load: new deferred_js_1.Deferred(),\n            },\n        },\n    };\n    #url = 'about:blank';\n    #eventManager;\n    #realmStorage;\n    #loaderId = null;\n    #cdpTarget;\n    #maybeDefaultRealm;\n    #logger;\n    constructor(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#id = id;\n        this.#parentId = parentId;\n        this.#eventManager = eventManager;\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#logger = logger;\n    }\n    static create(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger) {\n        const context = new BrowsingContextImpl(cdpTarget, realmStorage, id, parentId, eventManager, browsingContextStorage, logger);\n        context.#initListeners();\n        browsingContextStorage.addContext(context);\n        if (!context.isTopLevelContext()) {\n            context.parent.addChild(context.id);\n        }\n        eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextCreatedEvent,\n            params: context.serializeToBidiValue(),\n        }, context.id);\n        return context;\n    }\n    /**\n     * @see https://html.spec.whatwg.org/multipage/document-sequences.html#navigable\n     */\n    get navigableId() {\n        return this.#loaderId;\n    }\n    delete() {\n        this.#deleteAllChildren();\n        this.#realmStorage.deleteRealms({\n            browsingContextId: this.id,\n        });\n        // Remove context from the parent.\n        if (!this.isTopLevelContext()) {\n            this.parent.#children.delete(this.id);\n        }\n        this.#eventManager.registerEvent({\n            method: protocol_js_1.BrowsingContext.EventNames.ContextDestroyedEvent,\n            params: this.serializeToBidiValue(),\n        }, this.id);\n        this.#browsingContextStorage.deleteContextById(this.id);\n    }\n    /** Returns the ID of this context. */\n    get id() {\n        return this.#id;\n    }\n    /** Returns the parent context ID. */\n    get parentId() {\n        return this.#parentId;\n    }\n    /** Returns the parent context. */\n    get parent() {\n        if (this.parentId === null) {\n            return null;\n        }\n        return this.#browsingContextStorage.getContext(this.parentId);\n    }\n    /** Returns all direct children contexts. */\n    get directChildren() {\n        return [...this.#children].map((id) => this.#browsingContextStorage.getContext(id));\n    }\n    /** Returns all children contexts, flattened. */\n    get allChildren() {\n        const children = this.directChildren;\n        return children.concat(...children.map((child) => child.allChildren));\n    }\n    /**\n     * Returns true if this is a top-level context.\n     * This is the case whenever the parent context ID is null.\n     */\n    isTopLevelContext() {\n        return this.#parentId === null;\n    }\n    addChild(childId) {\n        this.#children.add(childId);\n    }\n    #deleteAllChildren() {\n        this.directChildren.map((child) => child.delete());\n    }\n    get #defaultRealm() {\n        if (this.#maybeDefaultRealm === undefined) {\n            throw new Error(`No default realm for browsing context ${this.#id}`);\n        }\n        return this.#maybeDefaultRealm;\n    }\n    get cdpTarget() {\n        return this.#cdpTarget;\n    }\n    updateCdpTarget(cdpTarget) {\n        this.#cdpTarget = cdpTarget;\n        this.#initListeners();\n    }\n    get url() {\n        return this.#url;\n    }\n    async awaitLoaded() {\n        await this.#defers.Page.lifecycleEvent.load;\n    }\n    awaitUnblocked() {\n        return this.#cdpTarget.targetUnblocked;\n    }\n    async getOrCreateSandbox(sandbox) {\n        if (sandbox === undefined || sandbox === '') {\n            return this.#defaultRealm;\n        }\n        let maybeSandboxes = this.#realmStorage.findRealms({\n            browsingContextId: this.id,\n            sandbox,\n        });\n        if (maybeSandboxes.length === 0) {\n            await this.#cdpTarget.cdpClient.sendCommand('Page.createIsolatedWorld', {\n                frameId: this.id,\n                worldName: sandbox,\n            });\n            // `Runtime.executionContextCreated` should be emitted by the time the\n            // previous command is done.\n            maybeSandboxes = this.#realmStorage.findRealms({\n                browsingContextId: this.id,\n                sandbox,\n            });\n        }\n        if (maybeSandboxes.length !== 1) {\n            throw Error(`Sandbox ${sandbox} wasn't created.`);\n        }\n        return maybeSandboxes[0];\n    }\n    serializeToBidiValue(maxDepth = 0, addParentFiled = true) {\n        return {\n            context: this.#id,\n            url: this.url,\n            children: maxDepth > 0\n                ? this.directChildren.map((c) => c.serializeToBidiValue(maxDepth - 1, false))\n                : null,\n            ...(addParentFiled ? { parent: this.#parentId } : {}),\n        };\n    }\n    #initListeners() {\n        this.#cdpTarget.cdpClient.on('Target.targetInfoChanged', (params) => {\n            if (this.id !== params.targetInfo.targetId) {\n                return;\n            }\n            this.#url = params.targetInfo.url;\n        });\n        this.#cdpTarget.cdpClient.on('Page.frameNavigated', (params) => {\n            if (this.id !== params.frame.id) {\n                return;\n            }\n            this.#url = params.frame.url + (params.frame.urlFragment ?? '');\n            // At the point the page is initialized, all the nested iframes from the\n            // previous page are detached and realms are destroyed.\n            // Remove children from context.\n            this.#deleteAllChildren();\n        });\n        this.#cdpTarget.cdpClient.on('Page.navigatedWithinDocument', (params) => {\n            if (this.id !== params.frameId) {\n                return;\n            }\n            this.#url = params.url;\n            this.#defers.Page.navigatedWithinDocument.resolve(params);\n        });\n        this.#cdpTarget.cdpClient.on('Page.lifecycleEvent', (params) => {\n            if (this.id !== params.frameId) {\n                return;\n            }\n            // `timestamp` from the event is MonotonicTime, not real time, so\n            // the best Mapper can do is to set the timestamp to the epoch time\n            // of the event arrived.\n            // https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-MonotonicTime\n            const timestamp = new Date().getTime();\n            if (params.name === 'init') {\n                this.#documentChanged(params.loaderId);\n                this.#defers.documentInitialized.resolve();\n            }\n            if (params.name === 'commit') {\n                this.#loaderId = params.loaderId;\n                return;\n            }\n            if (params.loaderId !== this.#loaderId) {\n                return;\n            }\n            switch (params.name) {\n                case 'DOMContentLoaded':\n                    this.#defers.Page.lifecycleEvent.DOMContentLoaded.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.DomContentLoadedEvent,\n                        params: {\n                            context: this.id,\n                            navigation: this.#loaderId,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.id);\n                    break;\n                case 'load':\n                    this.#defers.Page.lifecycleEvent.load.resolve(params);\n                    this.#eventManager.registerEvent({\n                        method: protocol_js_1.BrowsingContext.EventNames.LoadEvent,\n                        params: {\n                            context: this.id,\n                            navigation: this.#loaderId,\n                            timestamp,\n                            url: this.#url,\n                        },\n                    }, this.id);\n                    break;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextCreated', (params) => {\n            if (params.context.auxData.frameId !== this.id) {\n                return;\n            }\n            // Only this execution contexts are supported for now.\n            if (!['default', 'isolated'].includes(params.context.auxData.type)) {\n                return;\n            }\n            const realm = new realm_js_1.Realm(this.#realmStorage, this.#browsingContextStorage, params.context.uniqueId, this.id, params.context.id, this.#getOrigin(params), \n            // XXX: differentiate types.\n            'window', \n            // Sandbox name for isolated world.\n            params.context.auxData.type === 'isolated'\n                ? params.context.name\n                : undefined, this.#cdpTarget.cdpSessionId, this.#cdpTarget.cdpClient, this.#eventManager, this.#logger);\n            if (params.context.auxData.isDefault) {\n                this.#maybeDefaultRealm = realm;\n            }\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextDestroyed', (params) => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.executionContextsCleared', () => {\n            this.#realmStorage.deleteRealms({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n            });\n        });\n    }\n    #getOrigin(params) {\n        if (params.context.auxData.type === 'isolated') {\n            // Sandbox should have the same origin as the context itself, but in CDP\n            // it has an empty one.\n            return this.#defaultRealm.origin;\n        }\n        // https://html.spec.whatwg.org/multipage/origin.html#ascii-serialisation-of-an-origin\n        return ['://', ''].includes(params.context.origin)\n            ? 'null'\n            : params.context.origin;\n    }\n    #documentChanged(loaderId) {\n        // Same document navigation.\n        if (loaderId === undefined || this.#loaderId === loaderId) {\n            if (this.#defers.Page.navigatedWithinDocument.isFinished) {\n                this.#defers.Page.navigatedWithinDocument =\n                    new deferred_js_1.Deferred();\n            }\n            return;\n        }\n        if (this.#defers.documentInitialized.isFinished) {\n            this.#defers.documentInitialized = new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#defers.Page.lifecycleEvent.DOMContentLoaded.isFinished) {\n            this.#defers.Page.lifecycleEvent.DOMContentLoaded =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        if (this.#defers.Page.lifecycleEvent.load.isFinished) {\n            this.#defers.Page.lifecycleEvent.load =\n                new deferred_js_1.Deferred();\n        }\n        else {\n            this.#logger?.(log_js_1.LogType.browsingContexts, 'Document changed');\n        }\n        this.#loaderId = loaderId;\n    }\n    async navigate(url, wait) {\n        await this.awaitUnblocked();\n        // TODO: handle loading errors.\n        const cdpNavigateResult = await this.#cdpTarget.cdpClient.sendCommand('Page.navigate', {\n            url,\n            frameId: this.id,\n        });\n        if (cdpNavigateResult.errorText) {\n            throw new protocol_js_1.Message.UnknownErrorException(cdpNavigateResult.errorText);\n        }\n        this.#documentChanged(cdpNavigateResult.loaderId);\n        // Wait for `wait` condition.\n        switch (wait) {\n            case 'none':\n                break;\n            case 'interactive':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#defers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#defers.Page.lifecycleEvent.DOMContentLoaded;\n                }\n                break;\n            case 'complete':\n                // No `loaderId` means same-document navigation.\n                if (cdpNavigateResult.loaderId === undefined) {\n                    await this.#defers.Page.navigatedWithinDocument;\n                }\n                else {\n                    await this.#defers.Page.lifecycleEvent.load;\n                }\n                break;\n        }\n        return {\n            result: {\n                navigation: cdpNavigateResult.loaderId || null,\n                url,\n            },\n        };\n    }\n    async captureScreenshot() {\n        const [, result] = await Promise.all([\n            // XXX: Either make this a proposal in the BiDi spec, or focus the\n            // original tab right after the screenshot is taken.\n            // The screenshot command gets blocked until we focus the active tab.\n            this.#cdpTarget.cdpClient.sendCommand('Page.bringToFront'),\n            this.#cdpTarget.cdpClient.sendCommand('Page.captureScreenshot', {}),\n        ]);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n    async print(params) {\n        const printToPdfCdpParams = {\n            printBackground: params.background,\n            landscape: params.orientation === 'landscape',\n            pageRanges: params.pageRanges?.join(',') ?? '',\n            scale: params.scale,\n            preferCSSPageSize: !params.shrinkToFit,\n        };\n        if (params.margin?.bottom) {\n            printToPdfCdpParams.marginBottom = (0, unitConversions_js_1.inchesFromCm)(params.margin.bottom);\n        }\n        if (params.margin?.left) {\n            printToPdfCdpParams.marginLeft = (0, unitConversions_js_1.inchesFromCm)(params.margin.left);\n        }\n        if (params.margin?.right) {\n            printToPdfCdpParams.marginRight = (0, unitConversions_js_1.inchesFromCm)(params.margin.right);\n        }\n        if (params.margin?.top) {\n            printToPdfCdpParams.marginTop = (0, unitConversions_js_1.inchesFromCm)(params.margin.top);\n        }\n        if (params.page?.height) {\n            printToPdfCdpParams.paperHeight = (0, unitConversions_js_1.inchesFromCm)(params.page.height);\n        }\n        if (params.page?.width) {\n            printToPdfCdpParams.paperWidth = (0, unitConversions_js_1.inchesFromCm)(params.page.width);\n        }\n        const result = await this.#cdpTarget.cdpClient.sendCommand('Page.printToPDF', printToPdfCdpParams);\n        return {\n            result: {\n                data: result.data,\n            },\n        };\n    }\n}\nexports.BrowsingContextImpl = BrowsingContextImpl;\n//# sourceMappingURL=browsingContextImpl.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRemoteValuesText = exports.logMessageFormatter = void 0;\nconst specifiers = ['%s', '%d', '%i', '%f', '%o', '%O', '%c'];\nfunction isFormmatSpecifier(str) {\n    return specifiers.some((spec) => str.includes(spec));\n}\n/**\n * @param args input remote values to be format printed\n * @return parsed text of the remote values in specific format\n */\nfunction logMessageFormatter(args) {\n    let output = '';\n    const argFormat = args[0].value.toString();\n    const argValues = args.slice(1, undefined);\n    const tokens = argFormat.split(new RegExp(specifiers.map((spec) => `(${spec})`).join('|'), 'g'));\n    for (const token of tokens) {\n        if (token === undefined || token === '') {\n            continue;\n        }\n        if (isFormmatSpecifier(token)) {\n            const arg = argValues.shift();\n            // raise an exception when less value is provided\n            if (arg === undefined) {\n                throw new Error(`Less value is provided: \"${getRemoteValuesText(args, false)}\"`);\n            }\n            if (token === '%s') {\n                output += stringFromArg(arg);\n            }\n            else if (token === '%d' || token === '%i') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseInt(arg.value.toString(), 10);\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else if (token === '%f') {\n                if (arg.type === 'bigint' ||\n                    arg.type === 'number' ||\n                    arg.type === 'string') {\n                    output += parseFloat(arg.value.toString());\n                }\n                else {\n                    output += 'NaN';\n                }\n            }\n            else {\n                // %o, %O, %c\n                output += toJson(arg);\n            }\n        }\n        else {\n            output += token;\n        }\n    }\n    // raise an exception when more value is provided\n    if (argValues.length > 0) {\n        throw new Error(`More value is provided: \"${getRemoteValuesText(args, false)}\"`);\n    }\n    return output;\n}\nexports.logMessageFormatter = logMessageFormatter;\n/**\n * @param arg input remote value to be parsed\n * @return parsed text of the remote value\n *\n * input: {\"type\": \"number\", \"value\": 1}\n * output: 1\n *\n * input: {\"type\": \"string\", \"value\": \"abc\"}\n * output: \"abc\"\n *\n * input: {\"type\": \"object\",  \"value\": [[\"id\", {\"type\": \"number\", \"value\": 1}]]}\n * output: '{\"id\": 1}'\n *\n * input: {\"type\": \"object\", \"value\": [[\"font-size\", {\"type\": \"string\", \"value\": \"20px\"}]]}\n * output: '{\"font-size\": \"20px\"}'\n */\nfunction toJson(arg) {\n    // arg type validation\n    if (arg.type !== 'array' &&\n        arg.type !== 'bigint' &&\n        arg.type !== 'date' &&\n        arg.type !== 'number' &&\n        arg.type !== 'object' &&\n        arg.type !== 'string') {\n        return stringFromArg(arg);\n    }\n    if (arg.type === 'bigint') {\n        return `${arg.value.toString()}n`;\n    }\n    if (arg.type === 'number') {\n        return arg.value.toString();\n    }\n    if (['date', 'string'].includes(arg.type)) {\n        return JSON.stringify(arg.value);\n    }\n    if (arg.type === 'object') {\n        return `{${arg.value\n            .map((pair) => {\n            return `${JSON.stringify(pair[0])}:${toJson(pair[1])}`;\n        })\n            .join(',')}}`;\n    }\n    if (arg.type === 'array') {\n        return `[${arg.value?.map((val) => toJson(val)).join(',') ?? ''}]`;\n    }\n    throw Error(`Invalid value type: ${arg.toString()}`);\n}\nfunction stringFromArg(arg) {\n    if (!Object.hasOwn(arg, 'value')) {\n        return arg.type;\n    }\n    switch (arg.type) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'bigint':\n            return String(arg.value);\n        case 'regexp':\n            return `/${arg.value.pattern}/${arg.value.flags ?? ''}`;\n        case 'date':\n            return new Date(arg.value).toString();\n        case 'object':\n            return `Object(${arg.value?.length ?? ''})`;\n        case 'array':\n            return `Array(${arg.value?.length ?? ''})`;\n        case 'map':\n            return `Map(${arg.value.length})`;\n        case 'set':\n            return `Set(${arg.value.length})`;\n        case 'node':\n            return 'node';\n        default:\n            return arg.type;\n    }\n}\nfunction getRemoteValuesText(args, formatText) {\n    const arg = args[0];\n    if (!arg) {\n        return '';\n    }\n    // if args[0] is a format specifier, format the args as output\n    if (arg.type === 'string' &&\n        isFormmatSpecifier(arg.value.toString()) &&\n        formatText) {\n        return logMessageFormatter(args);\n    }\n    // if args[0] is not a format specifier, just join the args with \\u0020 (unicode 'SPACE')\n    return args\n        .map((arg) => {\n        return stringFromArg(arg);\n    })\n        .join('\\u0020');\n}\nexports.getRemoteValuesText = getRemoteValuesText;\n//# sourceMappingURL=logHelper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst logHelper_js_1 = require(\"./logHelper.js\");\n/** Converts CDP StackTrace object to BiDi StackTrace object. */\nfunction getBidiStackTrace(cdpStackTrace) {\n    const stackFrames = cdpStackTrace?.callFrames.map((callFrame) => {\n        return {\n            columnNumber: callFrame.columnNumber,\n            functionName: callFrame.functionName,\n            lineNumber: callFrame.lineNumber,\n            url: callFrame.url,\n        };\n    });\n    return stackFrames ? { callFrames: stackFrames } : undefined;\n}\nfunction getLogLevel(consoleApiType) {\n    if (['assert', 'error'].includes(consoleApiType)) {\n        return 'error';\n    }\n    if (['debug', 'trace'].includes(consoleApiType)) {\n        return 'debug';\n    }\n    if (['warn', 'warning'].includes(consoleApiType)) {\n        return 'warn';\n    }\n    return 'info';\n}\nclass LogManager {\n    #eventManager;\n    #realmStorage;\n    #cdpTarget;\n    constructor(cdpTarget, realmStorage, eventManager) {\n        this.#cdpTarget = cdpTarget;\n        this.#realmStorage = realmStorage;\n        this.#eventManager = eventManager;\n    }\n    static create(cdpTarget, realmStorage, eventManager) {\n        const logManager = new LogManager(cdpTarget, realmStorage, eventManager);\n        logManager.#initialize();\n        return logManager;\n    }\n    #initialize() {\n        this.#initializeLogEntryAddedEventListener();\n    }\n    #initializeLogEntryAddedEventListener() {\n        this.#cdpTarget.cdpClient.on('Runtime.consoleAPICalled', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.executionContextId,\n            });\n            const argsPromise = realm === undefined\n                ? Promise.resolve(params.args)\n                : // Properly serialize arguments if possible.\n                    Promise.all(params.args.map((arg) => {\n                        return realm.serializeCdpObject(arg, 'none');\n                    }));\n            this.#eventManager.registerPromiseEvent(argsPromise.then((args) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: getLogLevel(params.type),\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text: (0, logHelper_js_1.getRemoteValuesText)(args, true),\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.stackTrace),\n                    type: 'console',\n                    // Console method is `warn`, not `warning`.\n                    method: params.type === 'warning' ? 'warn' : params.type,\n                    args,\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n        this.#cdpTarget.cdpClient.on('Runtime.exceptionThrown', (params) => {\n            // Try to find realm by `cdpSessionId` and `executionContextId`,\n            // if provided.\n            const realm = this.#realmStorage.findRealm({\n                cdpSessionId: this.#cdpTarget.cdpSessionId,\n                executionContextId: params.exceptionDetails.executionContextId,\n            });\n            // Try all the best to get the exception text.\n            const textPromise = (async () => {\n                if (!params.exceptionDetails.exception) {\n                    return params.exceptionDetails.text;\n                }\n                if (realm === undefined) {\n                    return JSON.stringify(params.exceptionDetails.exception);\n                }\n                return realm.stringifyObject(params.exceptionDetails.exception);\n            })();\n            this.#eventManager.registerPromiseEvent(textPromise.then((text) => ({\n                method: protocol_js_1.Log.EventNames.LogEntryAddedEvent,\n                params: {\n                    level: 'error',\n                    source: {\n                        realm: realm?.realmId ?? 'UNKNOWN',\n                        context: realm?.browsingContextId ?? 'UNKNOWN',\n                    },\n                    text,\n                    timestamp: Math.round(params.timestamp),\n                    stackTrace: getBidiStackTrace(params.exceptionDetails.stackTrace),\n                    type: 'javascript',\n                },\n            })), realm?.browsingContextId ?? 'UNKNOWN', protocol_js_1.Log.EventNames.LogEntryAddedEvent);\n        });\n    }\n}\nexports.LogManager = LogManager;\n//# sourceMappingURL=logManager.js.map","\"use strict\";\n/**\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultMap = void 0;\n/**\n * A subclass of Map whose functionality is almost the same as its parent\n * except for the fact that DefaultMap never returns undefined. It provides a\n * default value for keys that do not exist.\n */\nclass DefaultMap extends Map {\n    /** The default value to return whenever a key is not present in the map. */\n    #getDefaultValue;\n    constructor(getDefaultValue, entries) {\n        super(entries);\n        this.#getDefaultValue = getDefaultValue;\n    }\n    get(key) {\n        if (!this.has(key)) {\n            this.set(key, this.#getDefaultValue(key));\n        }\n        return super.get(key);\n    }\n}\nexports.DefaultMap = DefaultMap;\n//# sourceMappingURL=DefaultMap.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkRequest = void 0;\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nclass NetworkRequest {\n    static #unknown = 'UNKNOWN';\n    requestId;\n    #eventManager;\n    #requestWillBeSentEvent;\n    #requestWillBeSentExtraInfoEvent;\n    #responseReceivedEvent;\n    #responseReceivedExtraInfoEvent;\n    #beforeRequestSentDeferred;\n    #responseReceivedDeferred;\n    constructor(requestId, eventManager) {\n        this.requestId = requestId;\n        this.#eventManager = eventManager;\n        this.#beforeRequestSentDeferred = new deferred_js_1.Deferred();\n        this.#responseReceivedDeferred = new deferred_js_1.Deferred();\n    }\n    onRequestWillBeSentEvent(requestWillBeSentEvent) {\n        if (this.#requestWillBeSentEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#requestWillBeSentEvent = requestWillBeSentEvent;\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n        this.#sendBeforeRequestEvent();\n    }\n    onRequestWillBeSentExtraInfoEvent(requestWillBeSentExtraInfoEvent) {\n        if (this.#requestWillBeSentExtraInfoEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#requestWillBeSentExtraInfoEvent = requestWillBeSentExtraInfoEvent;\n        if (this.#requestWillBeSentEvent !== undefined) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n    }\n    onResponseReceivedEvent(responseReceivedEvent) {\n        if (this.#responseReceivedEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#responseReceivedEvent = responseReceivedEvent;\n        if (responseReceivedEvent.hasExtraInfo !== true &&\n            !this.#beforeRequestSentDeferred.isFinished) {\n            this.#beforeRequestSentDeferred.resolve();\n        }\n        if (responseReceivedEvent.hasExtraInfo !== true ||\n            this.#responseReceivedExtraInfoEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n        this.#sendResponseReceivedEvent();\n    }\n    onResponseReceivedEventExtraInfo(responseReceivedExtraInfoEvent) {\n        if (this.#responseReceivedExtraInfoEvent !== undefined) {\n            // TODO: Handle redirect event, requestId is same for the redirect chain\n            return;\n        }\n        this.#responseReceivedExtraInfoEvent = responseReceivedExtraInfoEvent;\n        if (this.#responseReceivedEvent !== undefined) {\n            this.#responseReceivedDeferred.resolve();\n        }\n    }\n    onLoadingFailedEvent(loadingFailedEvent) {\n        this.#beforeRequestSentDeferred.resolve();\n        this.#responseReceivedDeferred.reject(loadingFailedEvent);\n        const params = {\n            ...this.#getBaseEventParams(),\n            errorText: loadingFailedEvent.errorText,\n        };\n        this.#eventManager.registerEvent({\n            method: protocol_js_1.Network.EventNames.FetchErrorEvent,\n            params,\n        }, this.#requestWillBeSentEvent?.frameId ?? null);\n    }\n    #sendBeforeRequestEvent() {\n        if (!this.#isIgnoredEvent()) {\n            this.#eventManager.registerPromiseEvent(this.#beforeRequestSentDeferred.then(() => this.#getBeforeRequestEvent()), this.#requestWillBeSentEvent?.frameId ?? null, protocol_js_1.Network.EventNames.BeforeRequestSentEvent);\n        }\n    }\n    #getBeforeRequestEvent() {\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        const params = {\n            ...this.#getBaseEventParams(),\n            initiator: { type: this.#getInitiatorType() },\n        };\n        return {\n            method: protocol_js_1.Network.EventNames.BeforeRequestSentEvent,\n            params,\n        };\n    }\n    #getBaseEventParams() {\n        return {\n            context: this.#requestWillBeSentEvent?.frameId ?? null,\n            navigation: this.#requestWillBeSentEvent?.loaderId ?? null,\n            // TODO: implement.\n            redirectCount: 0,\n            request: this.#getRequestData(),\n            // Timestamp should be in milliseconds, while CDP provides it in seconds.\n            timestamp: Math.round((this.#requestWillBeSentEvent?.wallTime ?? 0) * 1000),\n        };\n    }\n    #getRequestData() {\n        const cookies = this.#requestWillBeSentExtraInfoEvent === undefined\n            ? []\n            : NetworkRequest.#getCookies(this.#requestWillBeSentExtraInfoEvent.associatedCookies);\n        return {\n            request: this.#requestWillBeSentEvent?.requestId ?? NetworkRequest.#unknown,\n            url: this.#requestWillBeSentEvent?.request.url ?? NetworkRequest.#unknown,\n            method: this.#requestWillBeSentEvent?.request.method ?? NetworkRequest.#unknown,\n            headers: Object.keys(this.#requestWillBeSentEvent?.request.headers ?? []).map((key) => ({\n                name: key,\n                value: this.#requestWillBeSentEvent?.request.headers[key],\n            })),\n            cookies,\n            // TODO: implement.\n            headersSize: -1,\n            // TODO: implement.\n            bodySize: 0,\n            timings: {\n                // TODO: implement.\n                timeOrigin: 0,\n                // TODO: implement.\n                requestTime: 0,\n                // TODO: implement.\n                redirectStart: 0,\n                // TODO: implement.\n                redirectEnd: 0,\n                // TODO: implement.\n                fetchStart: 0,\n                // TODO: implement.\n                dnsStart: 0,\n                // TODO: implement.\n                dnsEnd: 0,\n                // TODO: implement.\n                connectStart: 0,\n                // TODO: implement.\n                connectEnd: 0,\n                // TODO: implement.\n                tlsStart: 0,\n                // TODO: implement.\n                tlsEnd: 0,\n                // TODO: implement.\n                requestStart: 0,\n                // TODO: implement.\n                responseStart: 0,\n                // TODO: implement.\n                responseEnd: 0,\n            },\n        };\n    }\n    #getInitiatorType() {\n        switch (this.#requestWillBeSentEvent?.initiator.type) {\n            case 'parser':\n            case 'script':\n            case 'preflight':\n                return this.#requestWillBeSentEvent.initiator.type;\n            default:\n                return 'other';\n        }\n    }\n    static #getCookiesSameSite(cdpSameSiteValue) {\n        switch (cdpSameSiteValue) {\n            case 'Strict':\n                return 'strict';\n            case 'Lax':\n                return 'lax';\n            default:\n                return 'none';\n        }\n    }\n    static #getCookies(associatedCookies) {\n        return associatedCookies.map((cookieInfo) => {\n            return {\n                name: cookieInfo.cookie.name,\n                value: cookieInfo.cookie.value,\n                domain: cookieInfo.cookie.domain,\n                path: cookieInfo.cookie.path,\n                expires: cookieInfo.cookie.expires,\n                size: cookieInfo.cookie.size,\n                httpOnly: cookieInfo.cookie.httpOnly,\n                secure: cookieInfo.cookie.secure,\n                sameSite: NetworkRequest.#getCookiesSameSite(cookieInfo.cookie.sameSite),\n            };\n        });\n    }\n    #sendResponseReceivedEvent() {\n        if (!this.#isIgnoredEvent()) {\n            // Wait for both ResponseReceived and ResponseReceivedExtraInfo events.\n            this.#eventManager.registerPromiseEvent(this.#responseReceivedDeferred.then(() => this.#getResponseReceivedEvent()), this.#responseReceivedEvent?.frameId ?? null, protocol_js_1.Network.EventNames.ResponseCompletedEvent);\n        }\n    }\n    #getResponseReceivedEvent() {\n        if (this.#responseReceivedEvent === undefined) {\n            throw new Error('ResponseReceivedEvent is not set');\n        }\n        if (this.#requestWillBeSentEvent === undefined) {\n            throw new Error('RequestWillBeSentEvent is not set');\n        }\n        return {\n            method: protocol_js_1.Network.EventNames.ResponseCompletedEvent,\n            params: {\n                ...this.#getBaseEventParams(),\n                response: {\n                    url: this.#responseReceivedEvent.response.url,\n                    protocol: this.#responseReceivedEvent.response.protocol,\n                    status: this.#responseReceivedEvent.response.status,\n                    statusText: this.#responseReceivedEvent.response.statusText,\n                    // Check if this is correct.\n                    fromCache: this.#responseReceivedEvent.response.fromDiskCache ||\n                        this.#responseReceivedEvent.response.fromPrefetchCache,\n                    // TODO: implement.\n                    headers: this.#getHeaders(this.#responseReceivedEvent.response.headers),\n                    mimeType: this.#responseReceivedEvent.response.mimeType,\n                    bytesReceived: this.#responseReceivedEvent.response.encodedDataLength,\n                    headersSize: this.#responseReceivedExtraInfoEvent?.headersText?.length ?? -1,\n                    // TODO: consider removing from spec.\n                    bodySize: -1,\n                    content: {\n                        // TODO: consider removing from spec.\n                        size: -1,\n                    },\n                },\n            },\n        };\n    }\n    #getHeaders(headers) {\n        return Object.keys(headers).map((key) => ({\n            name: key,\n            value: headers[key],\n        }));\n    }\n    #isIgnoredEvent() {\n        return (this.#requestWillBeSentEvent?.request.url.endsWith('/favicon.ico') ??\n            false);\n    }\n}\nexports.NetworkRequest = NetworkRequest;\n//# sourceMappingURL=networkRequest.js.map","\"use strict\";\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkProcessor = void 0;\nconst DefaultMap_js_1 = require(\"../../../utils/DefaultMap.js\");\nconst networkRequest_js_1 = require(\"./networkRequest.js\");\nclass NetworkProcessor {\n    #eventManager;\n    /**\n     * Map of request ID to NetworkRequest objects. Needed as long as information\n     * about requests comes from different events.\n     */\n    #requestMap;\n    constructor(eventManager) {\n        this.#eventManager = eventManager;\n        this.#requestMap = new DefaultMap_js_1.DefaultMap((requestId) => new networkRequest_js_1.NetworkRequest(requestId, this.#eventManager));\n    }\n    static async create(cdpClient, eventManager) {\n        const networkProcessor = new NetworkProcessor(eventManager);\n        cdpClient.on('Network.requestWillBeSent', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentEvent(params);\n        });\n        cdpClient.on('Network.requestWillBeSentExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onRequestWillBeSentExtraInfoEvent(params);\n        });\n        cdpClient.on('Network.responseReceived', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEvent(params);\n        });\n        cdpClient.on('Network.responseReceivedExtraInfo', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onResponseReceivedEventExtraInfo(params);\n        });\n        cdpClient.on('Network.loadingFailed', (params) => {\n            networkProcessor\n                .#getOrCreateNetworkRequest(params.requestId)\n                .onLoadingFailedEvent(params);\n        });\n        await cdpClient.sendCommand('Network.enable');\n        return networkProcessor;\n    }\n    #getOrCreateNetworkRequest(requestId) {\n        return this.#requestMap.get(requestId);\n    }\n}\nexports.NetworkProcessor = NetworkProcessor;\n//# sourceMappingURL=networkProcessor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpTarget = void 0;\nconst logManager_js_1 = require(\"../log/logManager.js\");\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst deferred_js_1 = require(\"../../../utils/deferred.js\");\nconst networkProcessor_js_1 = require(\"../network/networkProcessor.js\");\nclass CdpTarget {\n    #targetId;\n    #parentTargetId;\n    #cdpClient;\n    #cdpSessionId;\n    #eventManager;\n    #preloadScriptStorage;\n    #targetUnblocked;\n    #networkDomainActivated;\n    static create(targetId, parentTargetId, cdpClient, cdpSessionId, realmStorage, eventManager, preloadScriptStorage) {\n        const cdpTarget = new CdpTarget(targetId, parentTargetId, cdpClient, cdpSessionId, eventManager, preloadScriptStorage);\n        logManager_js_1.LogManager.create(cdpTarget, realmStorage, eventManager);\n        cdpTarget.#setEventListeners();\n        // No need to await.\n        // Deferred will be resolved when the target is unblocked.\n        void cdpTarget.#unblock();\n        return cdpTarget;\n    }\n    constructor(targetId, parentTargetId, cdpClient, cdpSessionId, eventManager, preloadScriptStorage) {\n        this.#targetId = targetId;\n        this.#parentTargetId = parentTargetId;\n        this.#cdpClient = cdpClient;\n        this.#cdpSessionId = cdpSessionId;\n        this.#eventManager = eventManager;\n        this.#preloadScriptStorage = preloadScriptStorage;\n        this.#networkDomainActivated = false;\n        this.#targetUnblocked = new deferred_js_1.Deferred();\n    }\n    /** Returns a promise that resolves when the target is unblocked. */\n    get targetUnblocked() {\n        return this.#targetUnblocked;\n    }\n    get targetId() {\n        return this.#targetId;\n    }\n    get cdpClient() {\n        return this.#cdpClient;\n    }\n    /**\n     * Needed for CDP escape path.\n     */\n    get cdpSessionId() {\n        return this.#cdpSessionId;\n    }\n    /**\n     * Enables all the required CDP domains and unblocks the target.\n     */\n    async #unblock() {\n        try {\n            // Enable Network domain, if it is enabled globally.\n            // TODO: enable Network domain for OOPiF targets.\n            if (this.#eventManager.isNetworkDomainEnabled) {\n                await this.enableNetworkDomain();\n            }\n            await this.#cdpClient.sendCommand('Runtime.enable');\n            await this.#cdpClient.sendCommand('Page.enable');\n            await this.#cdpClient.sendCommand('Page.setLifecycleEventsEnabled', {\n                enabled: true,\n            });\n            await this.#cdpClient.sendCommand('Target.setAutoAttach', {\n                autoAttach: true,\n                waitForDebuggerOnStart: true,\n                flatten: true,\n            });\n            await this.loadPreloadScripts();\n            await this.#cdpClient.sendCommand('Runtime.runIfWaitingForDebugger');\n        }\n        catch (error) {\n            // The target might have been closed before the initialization finished.\n            if (!error.message.includes('Target closed')) {\n                throw error;\n            }\n        }\n        this.#targetUnblocked.resolve();\n    }\n    /**\n     * Enables the Network domain (creates NetworkProcessor on the target's cdp\n     * client) if it is not enabled yet.\n     */\n    async enableNetworkDomain() {\n        if (!this.#networkDomainActivated) {\n            this.#networkDomainActivated = true;\n            await networkProcessor_js_1.NetworkProcessor.create(this.cdpClient, this.#eventManager);\n        }\n    }\n    #setEventListeners() {\n        this.#cdpClient.on('*', (cdpMethod, params) => {\n            this.#eventManager.registerEvent({\n                method: protocol_js_1.CDP.EventNames.EventReceivedEvent,\n                params: {\n                    cdpMethod: cdpMethod,\n                    cdpParams: params ?? {},\n                    cdpSession: this.#cdpSessionId,\n                },\n            }, null);\n        });\n    }\n    /** Loads all top-level and parent preload scripts. */\n    async loadPreloadScripts() {\n        for (const script of this.#preloadScriptStorage.findPreloadScripts({\n            contextIds: [null, this.#parentTargetId],\n        })) {\n            const functionDeclaration = script.functionDeclaration;\n            const sandbox = script.sandbox;\n            // The spec provides a function, and CDP expects an evaluation.\n            const cdpPreloadScriptId = await this.addPreloadScript(`(${functionDeclaration})();`, sandbox);\n            this.#preloadScriptStorage.appendCdpPreloadScript(script, {\n                target: this,\n                preloadScriptId: cdpPreloadScriptId,\n            });\n        }\n    }\n    /**\n     * Issues `Page.addScriptToEvaluateOnNewDocument` CDP command with the given\n     * script source in evaluated form and world name / sandbox.\n     *\n     * @return The CDP preload script ID.\n     */\n    async addPreloadScript(scriptSource, sandbox) {\n        const result = await this.cdpClient.sendCommand('Page.addScriptToEvaluateOnNewDocument', {\n            source: scriptSource,\n            worldName: sandbox,\n        });\n        return result.identifier;\n    }\n    /**\n     * Issues `Page.removeScriptToEvaluateOnNewDocument` CDP command with the\n     * given CDP preload script ID.\n     */\n    async removePreloadScript(cdpPreloadScriptId) {\n        await this.cdpClient.sendCommand('Page.removeScriptToEvaluateOnNewDocument', {\n            identifier: cdpPreloadScriptId,\n        });\n    }\n}\nexports.CdpTarget = CdpTarget;\n//# sourceMappingURL=cdpTarget.js.map","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreloadScriptStorage = void 0;\n/*\n * Copyright 2023 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst uuid_1 = require(\"uuid\");\n/**\n * Container class for preload scripts.\n *\n * BiDi IDs are generated by the server and are unique within the context.\n *\n * CDP preload script IDs are generated by the client and are unique\n * within the session.\n *\n * The mapping between BiDi and CDP preload script IDs is 1:many.\n * BiDi IDs are needed by the mapper to keep track of potential multiple CDP IDs\n * in the client.\n *\n * This class does not concern itself with the validity of the IDs.\n */\nclass PreloadScriptStorage {\n    /** Tracks all BiDi preload scripts.  */\n    #scripts = new Set();\n    /** Finds all entries that match the given filter. */\n    findPreloadScripts(filter) {\n        if (!filter) {\n            return [...this.#scripts];\n        }\n        return [...this.#scripts].filter((script) => {\n            if (filter?.id !== undefined && filter?.id !== script.id) {\n                return false;\n            }\n            if (filter?.contextId !== undefined &&\n                filter?.contextId !== script.contextId) {\n                return false;\n            }\n            if (filter?.contextIds !== undefined &&\n                !filter?.contextIds.includes(script.contextId)) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Keeps track of the given CDP preload scripts associated with the given\n     * browsing context ID.\n     *\n     * @param contextId Browsing context ID, or null for global context.\n     * @param cdpPreloadScripts CDP preload scripts.\n     * @param functionDeclaration The script itself, in a format expected by the spec\n     *   i.e. a function.\n     */\n    addPreloadScripts(contextId, cdpPreloadScripts, functionDeclaration, sandbox) {\n        // Generate a random ID.\n        const bidiId = (0, uuid_1.v4)();\n        const preloadScript = {\n            id: bidiId,\n            contextId,\n            cdpPreloadScripts,\n            functionDeclaration,\n            sandbox,\n        };\n        this.#scripts.add(preloadScript);\n        return preloadScript;\n    }\n    /**\n     * Keeps track of the given CDP preload script in the given BiDi preload\n     * script.\n     */\n    appendCdpPreloadScript(script, cdpPreloadScript) {\n        script.cdpPreloadScripts.push(cdpPreloadScript);\n    }\n    /** Deletes all BiDi preload script entries that match the given filter. */\n    removeBiDiPreloadScripts(filter) {\n        for (const preloadScript of this.findPreloadScripts(filter)) {\n            this.#scripts.delete(preloadScript);\n        }\n    }\n    /** Deletes all CDP preload script entries that match the given filter. */\n    removeCdpPreloadScripts(filter) {\n        for (const preloadScript of this.#scripts) {\n            preloadScript.cdpPreloadScripts = preloadScript.cdpPreloadScripts.filter((cdpPreloadScript) => {\n                if (filter?.targetId !== undefined &&\n                    filter?.targetId !== cdpPreloadScript.target.targetId) {\n                    return true;\n                }\n                if (filter?.sessionId !== undefined &&\n                    filter?.sessionId !== cdpPreloadScript.target.cdpSessionId) {\n                    return true;\n                }\n                return false;\n            });\n        }\n    }\n}\nexports.PreloadScriptStorage = PreloadScriptStorage;\n//# sourceMappingURL=PreloadScriptStorage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextProcessor = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst log_js_1 = require(\"../../../utils/log.js\");\nconst browsingContextImpl_js_1 = require(\"./browsingContextImpl.js\");\nconst cdpTarget_js_1 = require(\"./cdpTarget.js\");\nconst PreloadScriptStorage_js_1 = require(\"./PreloadScriptStorage.js\");\nclass BrowsingContextProcessor {\n    #browsingContextStorage;\n    #cdpConnection;\n    #eventManager;\n    #logger;\n    #realmStorage;\n    #selfTargetId;\n    #preloadScriptStorage;\n    constructor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger) {\n        this.#browsingContextStorage = browsingContextStorage;\n        this.#cdpConnection = cdpConnection;\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#realmStorage = realmStorage;\n        this.#selfTargetId = selfTargetId;\n        this.#preloadScriptStorage = new PreloadScriptStorage_js_1.PreloadScriptStorage();\n        this.#setEventListeners(this.#cdpConnection.browserClient());\n    }\n    /**\n     * This method is called for each CDP session, since this class is responsible\n     * for creating and destroying all targets and browsing contexts.\n     */\n    #setEventListeners(cdpClient) {\n        cdpClient.on('Target.attachedToTarget', (params) => {\n            this.#handleAttachedToTargetEvent(params, cdpClient);\n        });\n        cdpClient.on('Target.detachedFromTarget', (params) => {\n            this.#handleDetachedFromTargetEvent(params);\n        });\n        cdpClient.on('Page.frameAttached', (params) => {\n            this.#handleFrameAttachedEvent(params);\n        });\n        cdpClient.on('Page.frameDetached', (params) => {\n            this.#handleFrameDetachedEvent(params);\n        });\n    }\n    #handleFrameAttachedEvent(params) {\n        const parentBrowsingContext = this.#browsingContextStorage.findContext(params.parentFrameId);\n        if (parentBrowsingContext !== undefined) {\n            browsingContextImpl_js_1.BrowsingContextImpl.create(parentBrowsingContext.cdpTarget, this.#realmStorage, params.frameId, params.parentFrameId, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    #handleFrameDetachedEvent(params) {\n        // In case of OOPiF no need in deleting BrowsingContext.\n        if (params.reason === 'swap') {\n            return;\n        }\n        this.#browsingContextStorage.findContext(params.frameId)?.delete();\n    }\n    #handleAttachedToTargetEvent(params, parentSessionCdpClient) {\n        const { sessionId, targetInfo } = params;\n        const targetCdpClient = this.#cdpConnection.getCdpClient(sessionId);\n        if (!this.#isValidTarget(targetInfo)) {\n            // DevTools or some other not supported by BiDi target. Just release\n            // debugger  and ignore them.\n            targetCdpClient\n                .sendCommand('Runtime.runIfWaitingForDebugger')\n                .then(() => parentSessionCdpClient.sendCommand('Target.detachFromTarget', params))\n                .catch((error) => this.#logger?.(log_js_1.LogType.system, error));\n            return;\n        }\n        this.#logger?.(log_js_1.LogType.browsingContexts, 'AttachedToTarget event received:', JSON.stringify(params, null, 2));\n        this.#setEventListeners(targetCdpClient);\n        const maybeContext = this.#browsingContextStorage.findContext(targetInfo.targetId);\n        const cdpTarget = cdpTarget_js_1.CdpTarget.create(targetInfo.targetId, maybeContext?.parentId ?? null, targetCdpClient, sessionId, this.#realmStorage, this.#eventManager, this.#preloadScriptStorage);\n        if (maybeContext) {\n            // OOPiF.\n            maybeContext.updateCdpTarget(cdpTarget);\n        }\n        else {\n            // New context.\n            browsingContextImpl_js_1.BrowsingContextImpl.create(cdpTarget, this.#realmStorage, targetInfo.targetId, null, this.#eventManager, this.#browsingContextStorage, this.#logger);\n        }\n    }\n    #handleDetachedFromTargetEvent(params) {\n        // XXX: params.targetId is deprecated. Update this class to track using\n        // params.sessionId instead.\n        // https://github.com/GoogleChromeLabs/chromium-bidi/issues/60\n        const contextId = params.targetId;\n        this.#browsingContextStorage.findContext(contextId)?.delete();\n        this.#preloadScriptStorage.removeCdpPreloadScripts({ targetId: contextId });\n    }\n    async #getRealm(target) {\n        if ('realm' in target) {\n            return this.#realmStorage.getRealm({\n                realmId: target.realm,\n            });\n        }\n        const context = this.#browsingContextStorage.getContext(target.context);\n        return context.getOrCreateSandbox(target.sandbox);\n    }\n    process_browsingContext_getTree(params) {\n        const resultContexts = params.root === undefined\n            ? this.#browsingContextStorage.getTopLevelContexts()\n            : [this.#browsingContextStorage.getContext(params.root)];\n        return {\n            result: {\n                contexts: resultContexts.map((c) => c.serializeToBidiValue(params.maxDepth ?? Number.MAX_VALUE)),\n            },\n        };\n    }\n    async process_browsingContext_create(params) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        let referenceContext = undefined;\n        if (params.referenceContext !== undefined) {\n            referenceContext = this.#browsingContextStorage.getContext(params.referenceContext);\n            if (!referenceContext.isTopLevelContext()) {\n                throw new protocol_js_1.Message.InvalidArgumentException(`referenceContext should be a top-level context`);\n            }\n        }\n        const result = await browserCdpClient.sendCommand('Target.createTarget', {\n            url: 'about:blank',\n            newWindow: params.type === 'window',\n        });\n        // Wait for the new tab to be loaded to avoid race conditions in the\n        // `browsingContext` events, when the `browsingContext.domContentLoaded` and\n        // `browsingContext.load` events from the initial `about:blank` navigation\n        // are emitted after the next navigation is started.\n        // Details: https://github.com/web-platform-tests/wpt/issues/35846\n        const contextId = result.targetId;\n        const context = this.#browsingContextStorage.getContext(contextId);\n        await context.awaitLoaded();\n        return {\n            result: context.serializeToBidiValue(1),\n        };\n    }\n    process_browsingContext_navigate(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.navigate(params.url, params.wait === undefined ? 'none' : params.wait);\n    }\n    async process_browsingContext_captureScreenshot(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.captureScreenshot();\n    }\n    async process_browsingContext_print(params) {\n        const context = this.#browsingContextStorage.getContext(params.context);\n        return context.print(params);\n    }\n    async process_script_addPreloadScript(params) {\n        if (params.arguments !== undefined && params.arguments.length > 0) {\n            // TODO: Handle arguments.\n            throw new Error('add preload script arguments are not supported');\n        }\n        const cdpTargets = new Set(\n        // TODO: The unique target can be in a non-top-level browsing context.\n        // We need all the targets.\n        // To get them, we can walk through all the contexts and collect their targets into the set.\n        params.context === undefined || params.context === null\n            ? this.#browsingContextStorage\n                .getTopLevelContexts()\n                .map((context) => context.cdpTarget)\n            : [this.#browsingContextStorage.getContext(params.context).cdpTarget]);\n        const cdpPreloadScripts = [];\n        for (const cdpTarget of cdpTargets) {\n            const cdpPreloadScriptId = await cdpTarget.addPreloadScript(\n            // The spec provides a function, and CDP expects an evaluation.\n            `(${params.functionDeclaration})();`, params.sandbox);\n            cdpPreloadScripts.push({\n                target: cdpTarget,\n                preloadScriptId: cdpPreloadScriptId,\n            });\n        }\n        const preloadScript = this.#preloadScriptStorage.addPreloadScripts(params.context ?? null, cdpPreloadScripts, params.functionDeclaration, params.sandbox);\n        return {\n            result: {\n                script: preloadScript.id,\n            },\n        };\n    }\n    async process_script_removePreloadScript(params) {\n        const bidiId = params.script;\n        const scripts = this.#preloadScriptStorage.findPreloadScripts({\n            id: bidiId,\n        });\n        if (scripts.length === 0) {\n            throw new protocol_js_1.Message.NoSuchScriptException(`No preload script with BiDi ID '${bidiId}'`);\n        }\n        for (const script of scripts) {\n            for (const cdpPreloadScript of script.cdpPreloadScripts) {\n                const cdpTarget = cdpPreloadScript.target;\n                const cdpPreloadScriptId = cdpPreloadScript.preloadScriptId;\n                await cdpTarget.removePreloadScript(cdpPreloadScriptId);\n            }\n        }\n        this.#preloadScriptStorage.removeBiDiPreloadScripts({\n            id: bidiId,\n        });\n        return { result: {} };\n    }\n    async process_script_evaluate(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.scriptEvaluate(params.expression, params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    process_script_getRealms(params) {\n        if (params.context !== undefined) {\n            // Make sure the context is known.\n            this.#browsingContextStorage.getContext(params.context);\n        }\n        const realms = this.#realmStorage\n            .findRealms({\n            browsingContextId: params.context,\n            type: params.type,\n        })\n            .map((realm) => realm.toBiDi());\n        return { result: { realms } };\n    }\n    async process_script_callFunction(params) {\n        const realm = await this.#getRealm(params.target);\n        return realm.callFunction(params.functionDeclaration, params.this || {\n            type: 'undefined',\n        }, // `this` is `undefined` by default.\n        params.arguments || [], // `arguments` is `[]` by default.\n        params.awaitPromise, params.resultOwnership ?? 'none');\n    }\n    async process_script_disown(params) {\n        const realm = await this.#getRealm(params.target);\n        await Promise.all(params.handles.map(async (h) => realm.disown(h)));\n        return { result: {} };\n    }\n    async process_browsingContext_close(commandParams) {\n        const browserCdpClient = this.#cdpConnection.browserClient();\n        const context = this.#browsingContextStorage.getContext(commandParams.context);\n        if (!context.isTopLevelContext()) {\n            throw new protocol_js_1.Message.InvalidArgumentException('A top-level browsing context cannot be closed.');\n        }\n        const detachedFromTargetPromise = new Promise((resolve) => {\n            const onContextDestroyed = (eventParams) => {\n                if (eventParams.targetId === commandParams.context) {\n                    browserCdpClient.off('Target.detachedFromTarget', onContextDestroyed);\n                    resolve();\n                }\n            };\n            browserCdpClient.on('Target.detachedFromTarget', onContextDestroyed);\n        });\n        await browserCdpClient.sendCommand('Target.closeTarget', {\n            targetId: commandParams.context,\n        });\n        // Sometimes CDP command finishes before `detachedFromTarget` event,\n        // sometimes after. Wait for the CDP command to be finished, and then wait\n        // for `detachedFromTarget` if it hasn't emitted.\n        await detachedFromTargetPromise;\n        return { result: {} };\n    }\n    #isValidTarget(target) {\n        if (target.targetId === this.#selfTargetId) {\n            return false;\n        }\n        return ['page', 'iframe'].includes(target.type);\n    }\n    async process_cdp_sendCommand(params) {\n        const client = params.cdpSession\n            ? this.#cdpConnection.getCdpClient(params.cdpSession)\n            : this.#cdpConnection.browserClient();\n        const sendCdpCommandResult = await client.sendCommand(params.cdpMethod, params.cdpParams);\n        return {\n            result: sendCdpCommandResult,\n            cdpSession: params.cdpSession,\n        };\n    }\n    process_cdp_getSession(params) {\n        const context = params.context;\n        const sessionId = this.#browsingContextStorage.getContext(context).cdpTarget.cdpSessionId;\n        if (sessionId === undefined) {\n            return { result: { cdpSession: null } };\n        }\n        return { result: { cdpSession: sessionId } };\n    }\n}\nexports.BrowsingContextProcessor = BrowsingContextProcessor;\n//# sourceMappingURL=browsingContextProcessor.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutgoingBidiMessage = void 0;\nclass OutgoingBidiMessage {\n    #message;\n    #channel;\n    constructor(message, channel) {\n        this.#message = message;\n        this.#channel = channel;\n    }\n    static async createFromPromise(messagePromise, channel) {\n        return messagePromise.then((message) => new OutgoingBidiMessage(message, channel));\n    }\n    static createResolved(message, channel) {\n        return Promise.resolve(new OutgoingBidiMessage(message, channel));\n    }\n    get message() {\n        return this.#message;\n    }\n    get channel() {\n        return this.#channel;\n    }\n}\nexports.OutgoingBidiMessage = OutgoingBidiMessage;\n//# sourceMappingURL=OutgoingBidiMessage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandProcessor = void 0;\nconst protocol_js_1 = require(\"../protocol/protocol.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst browsingContextProcessor_js_1 = require(\"./domains/context/browsingContextProcessor.js\");\nconst OutgoingBidiMessage_js_1 = require(\"./OutgoingBidiMessage.js\");\nclass BidiNoOpParser {\n    parseAddPreloadScriptParams(params) {\n        return params;\n    }\n    parseRemovePreloadScriptParams(params) {\n        return params;\n    }\n    parseGetRealmsParams(params) {\n        return params;\n    }\n    parseCallFunctionParams(params) {\n        return params;\n    }\n    parseEvaluateParams(params) {\n        return params;\n    }\n    parseDisownParams(params) {\n        return params;\n    }\n    parseSendCommandParams(params) {\n        return params;\n    }\n    parseGetSessionParams(params) {\n        return params;\n    }\n    parseSubscribeParams(params) {\n        return params;\n    }\n    parseNavigateParams(params) {\n        return params;\n    }\n    parseGetTreeParams(params) {\n        return params;\n    }\n    parseCreateParams(params) {\n        return params;\n    }\n    parseCloseParams(params) {\n        return params;\n    }\n    parseCaptureScreenshotParams(params) {\n        return params;\n    }\n    parsePrintParams(params) {\n        return params;\n    }\n}\nclass CommandProcessor extends EventEmitter_js_1.EventEmitter {\n    #contextProcessor;\n    #eventManager;\n    #parser;\n    #logger;\n    constructor(realmStorage, cdpConnection, eventManager, selfTargetId, parser = new BidiNoOpParser(), browsingContextStorage, logger) {\n        super();\n        this.#eventManager = eventManager;\n        this.#logger = logger;\n        this.#contextProcessor = new browsingContextProcessor_js_1.BrowsingContextProcessor(realmStorage, cdpConnection, selfTargetId, eventManager, browsingContextStorage, logger);\n        this.#parser = parser;\n    }\n    static #process_session_status() {\n        return { result: { ready: false, message: 'already connected' } };\n    }\n    async #process_session_subscribe(params, channel) {\n        await this.#eventManager.subscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #process_session_unsubscribe(params, channel) {\n        await this.#eventManager.unsubscribe(params.events, params.contexts ?? [null], channel);\n        return { result: {} };\n    }\n    async #processCommand(commandData) {\n        switch (commandData.method) {\n            case 'session.status':\n                return CommandProcessor.#process_session_status();\n            case 'session.subscribe':\n                return this.#process_session_subscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'session.unsubscribe':\n                return this.#process_session_unsubscribe(this.#parser.parseSubscribeParams(commandData.params), commandData.channel ?? null);\n            case 'browsingContext.create':\n                return this.#contextProcessor.process_browsingContext_create(this.#parser.parseCreateParams(commandData.params));\n            case 'browsingContext.close':\n                return this.#contextProcessor.process_browsingContext_close(this.#parser.parseCloseParams(commandData.params));\n            case 'browsingContext.getTree':\n                return this.#contextProcessor.process_browsingContext_getTree(this.#parser.parseGetTreeParams(commandData.params));\n            case 'browsingContext.navigate':\n                return this.#contextProcessor.process_browsingContext_navigate(this.#parser.parseNavigateParams(commandData.params));\n            case 'browsingContext.captureScreenshot':\n                return this.#contextProcessor.process_browsingContext_captureScreenshot(this.#parser.parseCaptureScreenshotParams(commandData.params));\n            case 'browsingContext.print':\n                return this.#contextProcessor.process_browsingContext_print(this.#parser.parsePrintParams(commandData.params));\n            case 'script.addPreloadScript':\n                return this.#contextProcessor.process_script_addPreloadScript(this.#parser.parseAddPreloadScriptParams(commandData.params));\n            case 'script.removePreloadScript':\n                return this.#contextProcessor.process_script_removePreloadScript(this.#parser.parseRemovePreloadScriptParams(commandData.params));\n            case 'script.getRealms':\n                return this.#contextProcessor.process_script_getRealms(this.#parser.parseGetRealmsParams(commandData.params));\n            case 'script.callFunction':\n                return this.#contextProcessor.process_script_callFunction(this.#parser.parseCallFunctionParams(commandData.params));\n            case 'script.evaluate':\n                return this.#contextProcessor.process_script_evaluate(this.#parser.parseEvaluateParams(commandData.params));\n            case 'script.disown':\n                return this.#contextProcessor.process_script_disown(this.#parser.parseDisownParams(commandData.params));\n            case 'cdp.sendCommand':\n                return this.#contextProcessor.process_cdp_sendCommand(this.#parser.parseSendCommandParams(commandData.params));\n            case 'cdp.getSession':\n                return this.#contextProcessor.process_cdp_getSession(this.#parser.parseGetSessionParams(commandData.params));\n        }\n        // Intentionally kept outside of the switch statement to ensure that\n        // ESLint @typescript-eslint/switch-exhaustiveness-check triggers if a new\n        // command is added.\n        throw new protocol_js_1.Message.UnknownCommandException(`Unknown command '${commandData.method}'.`);\n    }\n    async processCommand(command) {\n        try {\n            const result = await this.#processCommand(command);\n            const response = {\n                id: command.id,\n                ...result,\n            };\n            this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(response, command.channel ?? null));\n        }\n        catch (e) {\n            if (e instanceof protocol_js_1.Message.ErrorResponse) {\n                const errorResponse = e;\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(errorResponse.toErrorResponse(command.id), command.channel ?? null));\n            }\n            else {\n                const error = e;\n                this.#logger?.(log_js_1.LogType.bidi, error);\n                this.emit('response', OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved(new protocol_js_1.Message.UnknownErrorException(error.message).toErrorResponse(command.id), command.channel ?? null));\n            }\n        }\n    }\n}\nexports.CommandProcessor = CommandProcessor;\n//# sourceMappingURL=CommandProcessor.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowsingContextStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Container class for browsing contexts. */\nclass BrowsingContextStorage {\n    /** Map from context ID to context implementation. */\n    #contexts = new Map();\n    /** Gets all top-level contexts, i.e. those with no parent. */\n    getTopLevelContexts() {\n        return this.getAllContexts().filter((context) => context.isTopLevelContext());\n    }\n    /** Gets all contexts. */\n    getAllContexts() {\n        return Array.from(this.#contexts.values());\n    }\n    /** Deletes the context with the given ID. */\n    deleteContextById(id) {\n        this.#contexts.delete(id);\n    }\n    /** Deletes the given context. */\n    deleteContext(context) {\n        this.#contexts.delete(context.id);\n    }\n    /** Tracks the given context. */\n    addContext(context) {\n        this.#contexts.set(context.id, context);\n    }\n    /** Returns true whether there is an existing context with the given ID. */\n    hasContext(id) {\n        return this.#contexts.has(id);\n    }\n    /** Gets the context with the given ID, if any. */\n    findContext(id) {\n        return this.#contexts.get(id);\n    }\n    /** Returns the top-level context ID of the given context, if any. */\n    findTopLevelContextId(id) {\n        if (id === null) {\n            return null;\n        }\n        const maybeContext = this.findContext(id);\n        const parentId = maybeContext?.parentId ?? null;\n        if (parentId === null) {\n            return id;\n        }\n        return this.findTopLevelContextId(parentId);\n    }\n    /** Returns the top-level context of the given context, if any. */\n    findTopLevelContext(id) {\n        const topLevelContextId = this.findTopLevelContextId(id);\n        if (topLevelContextId === null) {\n            return null;\n        }\n        return this.findContext(topLevelContextId);\n    }\n    /** Gets the context with the given ID, if any, otherwise throws. */\n    getContext(id) {\n        const result = this.findContext(id);\n        if (result === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Context ${id} not found`);\n        }\n        return result;\n    }\n}\nexports.BrowsingContextStorage = BrowsingContextStorage;\n//# sourceMappingURL=browsingContextStorage.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Buffer = void 0;\n/**\n * Implements a FIFO buffer with a fixed size.\n */\nclass Buffer {\n    #capacity;\n    #entries = [];\n    #onItemRemoved;\n    /**\n     * @param capacity\n     * @param onItemRemoved optional delegate called for each removed element.\n     */\n    constructor(capacity, onItemRemoved = () => { }) {\n        this.#capacity = capacity;\n        this.#onItemRemoved = onItemRemoved;\n    }\n    get() {\n        return this.#entries;\n    }\n    add(value) {\n        this.#entries.push(value);\n        while (this.#entries.length > this.#capacity) {\n            const item = this.#entries.shift();\n            if (item !== undefined) {\n                this.#onItemRemoved(item);\n            }\n        }\n    }\n}\nexports.Buffer = Buffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdWrapper = void 0;\n/**\n * Creates an object with a positive unique incrementing id.\n */\nclass IdWrapper {\n    static #counter = 0;\n    #id;\n    constructor() {\n        this.#id = ++IdWrapper.#counter;\n    }\n    get id() {\n        return this.#id;\n    }\n}\nexports.IdWrapper = IdWrapper;\n//# sourceMappingURL=idWrapper.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionManager = exports.unrollEvents = exports.cartesianProduct = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/**\n * Returns the cartesian product of the given arrays.\n *\n * Example:\n *   cartesian([1, 2], ['a', 'b']); => [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n */\nfunction cartesianProduct(...a) {\n    return a.reduce((a, b) => a.flatMap((d) => b.map((e) => [d, e].flat())));\n}\nexports.cartesianProduct = cartesianProduct;\n/** Expands \"AllEvents\" events into atomic events. */\nfunction unrollEvents(events) {\n    const allEvents = [];\n    for (const event of events) {\n        switch (event) {\n            case protocol_js_1.BrowsingContext.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.BrowsingContext.EventNames));\n                break;\n            case protocol_js_1.CDP.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.CDP.EventNames));\n                break;\n            case protocol_js_1.Log.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Log.EventNames));\n                break;\n            case protocol_js_1.Network.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Network.EventNames));\n                break;\n            case protocol_js_1.Script.AllEvents:\n                allEvents.push(...Object.values(protocol_js_1.Script.EventNames));\n                break;\n            default:\n                allEvents.push(event);\n        }\n    }\n    return allEvents;\n}\nexports.unrollEvents = unrollEvents;\nclass SubscriptionManager {\n    #subscriptionPriority = 0;\n    // BrowsingContext `null` means the event has subscription across all the\n    // browsing contexts.\n    // Channel `null` means no `channel` should be added.\n    #channelToContextToEventMap = new Map();\n    #browsingContextStorage;\n    constructor(browsingContextStorage) {\n        this.#browsingContextStorage = browsingContextStorage;\n    }\n    getChannelsSubscribedToEvent(eventMethod, contextId) {\n        const prioritiesAndChannels = Array.from(this.#channelToContextToEventMap.keys())\n            .map((channel) => ({\n            priority: this.#getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel),\n            channel,\n        }))\n            .filter(({ priority }) => priority !== null);\n        // Sort channels by priority.\n        return prioritiesAndChannels\n            .sort((a, b) => a.priority - b.priority)\n            .map(({ channel }) => channel);\n    }\n    #getEventSubscriptionPriorityForChannel(eventMethod, contextId, channel) {\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (contextToEventMap === undefined) {\n            return null;\n        }\n        const maybeTopLevelContextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        // `null` covers global subscription.\n        const relevantContexts = [...new Set([null, maybeTopLevelContextId])];\n        // Get all the subscription priorities.\n        const priorities = relevantContexts\n            .map((c) => contextToEventMap.get(c)?.get(eventMethod))\n            .filter((p) => p !== undefined);\n        if (priorities.length === 0) {\n            // Not subscribed, return null.\n            return null;\n        }\n        // Return minimal priority.\n        return Math.min(...priorities);\n    }\n    subscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        if (event === protocol_js_1.BrowsingContext.AllEvents) {\n            Object.values(protocol_js_1.BrowsingContext.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.CDP.AllEvents) {\n            Object.values(protocol_js_1.CDP.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Log.AllEvents) {\n            Object.values(protocol_js_1.Log.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Network.AllEvents) {\n            Object.values(protocol_js_1.Network.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (event === protocol_js_1.Script.AllEvents) {\n            Object.values(protocol_js_1.Script.EventNames).map((specificEvent) => this.subscribe(specificEvent, contextId, channel));\n            return;\n        }\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            this.#channelToContextToEventMap.set(channel, new Map());\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            contextToEventMap.set(contextId, new Map());\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        // Do not re-subscribe to events to keep the priority.\n        if (eventMap.has(event)) {\n            return;\n        }\n        eventMap.set(event, this.#subscriptionPriority++);\n    }\n    /**\n     * Unsubscribes atomically from all events in the given contexts and channel.\n     */\n    unsubscribeAll(events, contextIds, channel) {\n        // Assert all contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                this.#browsingContextStorage.getContext(contextId);\n            }\n        }\n        const eventContextPairs = cartesianProduct(unrollEvents(events), contextIds);\n        // Assert all unsubscriptions are valid.\n        // If any of the unsubscriptions are invalid, do not unsubscribe from anything.\n        eventContextPairs\n            .map(([event, contextId]) => this.#checkUnsubscribe(event, contextId, channel))\n            .forEach((unsubscribe) => unsubscribe());\n    }\n    /**\n     * Unsubscribes from the event in the given context and channel.\n     * Syntactic sugar for \"unsubscribeAll\".\n     */\n    unsubscribe(eventName, contextId, channel) {\n        this.unsubscribeAll([eventName], [contextId], channel);\n    }\n    #checkUnsubscribe(event, contextId, channel) {\n        // All the subscriptions are handled on the top-level contexts.\n        contextId = this.#browsingContextStorage.findTopLevelContextId(contextId);\n        if (!this.#channelToContextToEventMap.has(channel)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        const contextToEventMap = this.#channelToContextToEventMap.get(channel);\n        if (!contextToEventMap.has(contextId)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        const eventMap = contextToEventMap.get(contextId);\n        if (!eventMap.has(event)) {\n            throw new protocol_js_1.Message.InvalidArgumentException(`Cannot unsubscribe from ${event}, ${contextId === null ? 'null' : contextId}. No subscription found.`);\n        }\n        return () => {\n            eventMap.delete(event);\n            // Clean up maps if empty.\n            if (eventMap.size === 0) {\n                contextToEventMap.delete(event);\n            }\n            if (contextToEventMap.size === 0) {\n                this.#channelToContextToEventMap.delete(channel);\n            }\n        };\n    }\n}\nexports.SubscriptionManager = SubscriptionManager;\n//# sourceMappingURL=SubscriptionManager.js.map","\"use strict\";\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventManager = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\nconst buffer_js_1 = require(\"../../../utils/buffer.js\");\nconst idWrapper_js_1 = require(\"../../../utils/idWrapper.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../../OutgoingBidiMessage.js\");\nconst DefaultMap_js_1 = require(\"../../../utils/DefaultMap.js\");\nconst SubscriptionManager_js_1 = require(\"./SubscriptionManager.js\");\nclass EventWrapper {\n    #idWrapper;\n    #contextId;\n    #event;\n    constructor(event, contextId) {\n        this.#idWrapper = new idWrapper_js_1.IdWrapper();\n        this.#contextId = contextId;\n        this.#event = event;\n    }\n    get id() {\n        return this.#idWrapper.id;\n    }\n    get contextId() {\n        return this.#contextId;\n    }\n    get event() {\n        return this.#event;\n    }\n}\n/**\n * Maps event name to a desired buffer length.\n */\nconst eventBufferLength = new Map([\n    [protocol_js_1.Log.EventNames.LogEntryAddedEvent, 100],\n]);\nclass EventManager {\n    static #NETWORK_DOMAIN_PREFIX = 'network';\n    /**\n     * Maps event name to a set of contexts where this event already happened.\n     * Needed for getting buffered events from all the contexts in case of\n     * subscripting to all contexts.\n     */\n    #eventToContextsMap = new DefaultMap_js_1.DefaultMap(() => new Set());\n    /**\n     * Maps `eventName` + `browsingContext` to buffer. Used to get buffered events\n     * during subscription. Channel-agnostic.\n     */\n    #eventBuffers = new Map();\n    /**\n     * Maps `eventName` + `browsingContext` + `channel` to last sent event id.\n     * Used to avoid sending duplicated events when user\n     * subscribes -> unsubscribes -> subscribes.\n     */\n    #lastMessageSent = new Map();\n    #subscriptionManager;\n    #bidiServer;\n    #isNetworkDomainEnabled;\n    constructor(bidiServer) {\n        this.#bidiServer = bidiServer;\n        this.#subscriptionManager = new SubscriptionManager_js_1.SubscriptionManager(bidiServer.getBrowsingContextStorage());\n        this.#isNetworkDomainEnabled = false;\n    }\n    get isNetworkDomainEnabled() {\n        return this.#isNetworkDomainEnabled;\n    }\n    /**\n     * Returns consistent key to be used to access value maps.\n     */\n    static #getMapKey(eventName, browsingContext, channel) {\n        return JSON.stringify({ eventName, browsingContext, channel });\n    }\n    registerEvent(event, contextId) {\n        this.registerPromiseEvent(Promise.resolve(event), contextId, event.method);\n    }\n    registerPromiseEvent(event, contextId, eventName) {\n        const eventWrapper = new EventWrapper(event, contextId);\n        const sortedChannels = this.#subscriptionManager.getChannelsSubscribedToEvent(eventName, contextId);\n        this.#bufferEvent(eventWrapper, eventName);\n        // Send events to channels in the subscription priority.\n        for (const channel of sortedChannels) {\n            this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(event, channel));\n            this.#markEventSent(eventWrapper, channel, eventName);\n        }\n    }\n    async subscribe(eventNames, contextIds, channel) {\n        // First check if all the contexts are known.\n        for (const contextId of contextIds) {\n            if (contextId !== null) {\n                // Assert the context is known. Throw exception otherwise.\n                this.#bidiServer.getBrowsingContextStorage().getContext(contextId);\n            }\n        }\n        for (const eventName of eventNames) {\n            for (const contextId of contextIds) {\n                await this.#handleDomains(eventName, contextId);\n                this.#subscriptionManager.subscribe(eventName, contextId, channel);\n                for (const eventWrapper of this.#getBufferedEvents(eventName, contextId, channel)) {\n                    // The order of the events is important.\n                    this.#bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createFromPromise(eventWrapper.event, channel));\n                    this.#markEventSent(eventWrapper, channel, eventName);\n                }\n            }\n        }\n    }\n    /**\n     * Enables domains for the subscribed event in the required contexts or\n     * globally.\n     */\n    async #handleDomains(eventName, contextId) {\n        // Enable network domain if user subscribed to any of network events.\n        if (eventName.startsWith(EventManager.#NETWORK_DOMAIN_PREFIX)) {\n            // Enable for all the contexts.\n            if (contextId === null) {\n                this.#isNetworkDomainEnabled = true;\n                await Promise.all(this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getAllContexts()\n                    .map((context) => context.cdpTarget.enableNetworkDomain()));\n            }\n            else {\n                await this.#bidiServer\n                    .getBrowsingContextStorage()\n                    .getContext(contextId)\n                    .cdpTarget.enableNetworkDomain();\n            }\n        }\n    }\n    unsubscribe(eventNames, contextIds, channel) {\n        this.#subscriptionManager.unsubscribeAll(eventNames, contextIds, channel);\n    }\n    /**\n     * If the event is buffer-able, put it in the buffer.\n     */\n    #bufferEvent(eventWrapper, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const bufferMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId);\n        if (!this.#eventBuffers.has(bufferMapKey)) {\n            this.#eventBuffers.set(bufferMapKey, new buffer_js_1.Buffer(eventBufferLength.get(eventName)));\n        }\n        this.#eventBuffers.get(bufferMapKey).add(eventWrapper);\n        // Add the context to the list of contexts having `eventName` events.\n        this.#eventToContextsMap.get(eventName).add(eventWrapper.contextId);\n    }\n    /**\n     * If the event is buffer-able, mark it as sent to the given contextId and channel.\n     */\n    #markEventSent(eventWrapper, channel, eventName) {\n        if (!eventBufferLength.has(eventName)) {\n            // Do nothing if the event is no buffer-able.\n            return;\n        }\n        const lastSentMapKey = EventManager.#getMapKey(eventName, eventWrapper.contextId, channel);\n        this.#lastMessageSent.set(lastSentMapKey, Math.max(this.#lastMessageSent.get(lastSentMapKey) ?? 0, eventWrapper.id));\n    }\n    /**\n     * Returns events which are buffered and not yet sent to the given channel events.\n     */\n    #getBufferedEvents(eventName, contextId, channel) {\n        const bufferMapKey = EventManager.#getMapKey(eventName, contextId);\n        const lastSentMapKey = EventManager.#getMapKey(eventName, contextId, channel);\n        const lastSentMessageId = this.#lastMessageSent.get(lastSentMapKey) ?? -Infinity;\n        const result = this.#eventBuffers\n            .get(bufferMapKey)\n            ?.get()\n            .filter((wrapper) => wrapper.id > lastSentMessageId) ?? [];\n        if (contextId === null) {\n            // For global subscriptions, events buffered in each context should be sent back.\n            Array.from(this.#eventToContextsMap.get(eventName).keys())\n                .filter((_contextId) => \n            // Events without context are already in the result.\n            _contextId !== null &&\n                // Events from deleted contexts should not be sent.\n                this.#bidiServer.getBrowsingContextStorage().hasContext(_contextId))\n                .map((_contextId) => this.#getBufferedEvents(eventName, _contextId, channel))\n                .forEach((events) => result.push(...events));\n        }\n        return result.sort((e1, e2) => e1.id - e2.id);\n    }\n}\nexports.EventManager = EventManager;\n//# sourceMappingURL=EventManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RealmStorage = void 0;\nconst protocol_js_1 = require(\"../../../protocol/protocol.js\");\n/** Container class for browsing realms. */\nclass RealmStorage {\n    /** Tracks handles and their realms sent to the client. */\n    #knownHandlesToRealm = new Map();\n    /** Map from realm ID to Realm. */\n    #realmMap = new Map();\n    get knownHandlesToRealm() {\n        return this.#knownHandlesToRealm;\n    }\n    get realmMap() {\n        return this.#realmMap;\n    }\n    /** Finds all realms that match the given filter. */\n    findRealms(filter) {\n        return Array.from(this.#realmMap.values()).filter((realm) => {\n            if (filter.realmId !== undefined && filter.realmId !== realm.realmId) {\n                return false;\n            }\n            if (filter.browsingContextId !== undefined &&\n                filter.browsingContextId !== realm.browsingContextId) {\n                return false;\n            }\n            if (filter.navigableId !== undefined &&\n                filter.navigableId !== realm.navigableId) {\n                return false;\n            }\n            if (filter.executionContextId !== undefined &&\n                filter.executionContextId !== realm.executionContextId) {\n                return false;\n            }\n            if (filter.origin !== undefined && filter.origin !== realm.origin) {\n                return false;\n            }\n            if (filter.type !== undefined && filter.type !== realm.type) {\n                return false;\n            }\n            if (filter.sandbox !== undefined && filter.sandbox !== realm.sandbox) {\n                return false;\n            }\n            if (filter.cdpSessionId !== undefined &&\n                filter.cdpSessionId !== realm.cdpSessionId) {\n                return false;\n            }\n            return true;\n        });\n    }\n    findRealm(filter) {\n        const maybeRealms = this.findRealms(filter);\n        if (maybeRealms.length !== 1) {\n            return undefined;\n        }\n        return maybeRealms[0];\n    }\n    /** Gets the only realm that matches the given filter, if any, otherwise throws. */\n    getRealm(filter) {\n        const maybeRealm = this.findRealm(filter);\n        if (maybeRealm === undefined) {\n            throw new protocol_js_1.Message.NoSuchFrameException(`Realm ${JSON.stringify(filter)} not found`);\n        }\n        return maybeRealm;\n    }\n    /** Deletes all realms that match the given filter. */\n    deleteRealms(filter) {\n        this.findRealms(filter).map((realm) => {\n            this.#realmMap.delete(realm.realmId);\n            Array.from(this.#knownHandlesToRealm.entries())\n                .filter(([, r]) => r === realm.realmId)\n                .map(([handle]) => this.#knownHandlesToRealm.delete(handle));\n        });\n    }\n}\nexports.RealmStorage = RealmStorage;\n//# sourceMappingURL=realmStorage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidiServer = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst processingQueue_js_1 = require(\"../utils/processingQueue.js\");\nconst CommandProcessor_js_1 = require(\"./CommandProcessor.js\");\nconst browsingContextStorage_js_1 = require(\"./domains/context/browsingContextStorage.js\");\nconst EventManager_js_1 = require(\"./domains/events/EventManager.js\");\nconst realmStorage_js_1 = require(\"./domains/script/realmStorage.js\");\nclass BidiServer extends EventEmitter_js_1.EventEmitter {\n    #messageQueue;\n    #transport;\n    #commandProcessor;\n    #browsingContextStorage;\n    #realmStorage;\n    #logger;\n    #handleIncomingMessage = (message) => {\n        void this.#commandProcessor.processCommand(message).catch((error) => {\n            this.#logger?.(log_js_1.LogType.system, error);\n        });\n    };\n    #processOutgoingMessage = async (messageEntry) => {\n        const message = messageEntry.message;\n        if (messageEntry.channel !== null) {\n            message['channel'] = messageEntry.channel;\n        }\n        await this.#transport.sendMessage(message);\n    };\n    constructor(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        super();\n        this.#logger = logger;\n        this.#browsingContextStorage = new browsingContextStorage_js_1.BrowsingContextStorage();\n        this.#realmStorage = new realmStorage_js_1.RealmStorage();\n        this.#messageQueue = new processingQueue_js_1.ProcessingQueue(this.#processOutgoingMessage, this.#logger);\n        this.#transport = bidiTransport;\n        this.#transport.setOnMessage(this.#handleIncomingMessage);\n        this.#commandProcessor = new CommandProcessor_js_1.CommandProcessor(this.#realmStorage, cdpConnection, new EventManager_js_1.EventManager(this), selfTargetId, parser, this.#browsingContextStorage, this.#logger);\n        this.#commandProcessor.on('response', (response) => {\n            this.emitOutgoingMessage(response);\n        });\n    }\n    static async createAndStart(bidiTransport, cdpConnection, selfTargetId, parser, logger) {\n        const server = new BidiServer(bidiTransport, cdpConnection, selfTargetId, parser, logger);\n        const cdpClient = cdpConnection.browserClient();\n        // Needed to get events about new targets.\n        await cdpClient.sendCommand('Target.setDiscoverTargets', { discover: true });\n        // Needed to automatically attach to new targets.\n        await cdpClient.sendCommand('Target.setAutoAttach', {\n            autoAttach: true,\n            waitForDebuggerOnStart: true,\n            flatten: true,\n        });\n        await server.topLevelContextsLoaded();\n        return server;\n    }\n    async topLevelContextsLoaded() {\n        await Promise.all(this.#browsingContextStorage\n            .getTopLevelContexts()\n            .map((c) => c.awaitLoaded()));\n    }\n    /**\n     * Sends BiDi message.\n     */\n    emitOutgoingMessage(messageEntry) {\n        this.#messageQueue.add(messageEntry);\n    }\n    close() {\n        this.#transport.close();\n    }\n    getBrowsingContextStorage() {\n        return this.#browsingContextStorage;\n    }\n}\nexports.BidiServer = BidiServer;\n//# sourceMappingURL=BidiServer.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpClient = void 0;\nconst EventEmitter_js_1 = require(\"../utils/EventEmitter.js\");\nclass CdpClient extends EventEmitter_js_1.EventEmitter {\n    #cdpConnection;\n    #sessionId;\n    constructor(cdpConnection, sessionId) {\n        super();\n        this.#cdpConnection = cdpConnection;\n        this.#sessionId = sessionId;\n    }\n    /**\n     * Creates a new CDP client object that communicates with the browser using a given\n     * transport mechanism.\n     * @param transport A transport object that will be used to send and receive raw CDP messages.\n     * @return A connected CDP client object.\n     */\n    static create(cdpConnection, sessionId) {\n        return new CdpClient(cdpConnection, sessionId);\n    }\n    /**\n     * Returns command promise, which will be resolved with the command result after receiving CDP result.\n     * @param method Name of the CDP command to call.\n     * @param params Parameters to pass to the CDP command.\n     */\n    sendCommand(method, ...params) {\n        const param = params[0];\n        return this.#cdpConnection.sendCommand(method, param, this.#sessionId);\n    }\n}\nexports.CdpClient = CdpClient;\n//# sourceMappingURL=cdpClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CdpConnection = void 0;\nconst cdpClient_js_1 = require(\"./cdpClient.js\");\n/**\n * Represents a high-level CDP connection to the browser backend.\n * Manages a CdpClient instance for each active CDP session.\n */\nclass CdpConnection {\n    #transport;\n    #browserCdpClient;\n    /** Map from session ID to CdpClient. */\n    #sessionCdpClients = new Map();\n    #commandCallbacks = new Map();\n    #log;\n    #nextId = 0;\n    constructor(transport, log = () => { }) {\n        this.#transport = transport;\n        this.#log = log;\n        this.#transport.setOnMessage(this.#onMessage);\n        this.#browserCdpClient = cdpClient_js_1.CdpClient.create(this, null);\n    }\n    /**\n     * Closes the connection to the browser.\n     */\n    close() {\n        this.#transport.close();\n        for (const [, { reject, error }] of this.#commandCallbacks) {\n            reject(error);\n        }\n        this.#commandCallbacks.clear();\n        this.#sessionCdpClients.clear();\n    }\n    /**\n     * @return The CdpClient object attached to the root browser session.\n     */\n    browserClient() {\n        return this.#browserCdpClient;\n    }\n    /**\n     * Gets a CdpClient instance by sessionId.\n     * @param sessionId The sessionId of the CdpClient to retrieve.\n     * @return The CdpClient object attached to the given session, or null if the session is not attached.\n     */\n    getCdpClient(sessionId) {\n        const cdpClient = this.#sessionCdpClients.get(sessionId);\n        if (!cdpClient) {\n            throw new Error('Unknown CDP session ID');\n        }\n        return cdpClient;\n    }\n    sendCommand(method, params, sessionId) {\n        return new Promise((resolve, reject) => {\n            const id = this.#nextId++;\n            this.#commandCallbacks.set(id, {\n                resolve,\n                reject,\n                error: new Error(`${method} ${JSON.stringify(params)} ${sessionId ?? ''} call rejected because the connection has been closed.`),\n            });\n            const messageObj = { id, method, params };\n            if (sessionId) {\n                messageObj.sessionId = sessionId;\n            }\n            const messageStr = JSON.stringify(messageObj);\n            const messagePretty = JSON.stringify(messageObj, null, 2);\n            void this.#transport.sendMessage(messageStr)?.catch((error) => {\n                this.#log('error', error);\n                this.#transport.close();\n            });\n            this.#log('sent ▸', messagePretty);\n        });\n    }\n    #onMessage = (message) => {\n        const parsed = JSON.parse(message);\n        const messagePretty = JSON.stringify(parsed, null, 2);\n        this.#log('received ◂', messagePretty);\n        // Update client map if a session is attached or detached.\n        // Listen for these events on every session.\n        if (parsed.method === 'Target.attachedToTarget') {\n            const { sessionId } = parsed.params;\n            this.#sessionCdpClients.set(sessionId, cdpClient_js_1.CdpClient.create(this, sessionId));\n        }\n        else if (parsed.method === 'Target.detachedFromTarget') {\n            const { sessionId } = parsed.params;\n            const client = this.#sessionCdpClients.get(sessionId);\n            if (client) {\n                this.#sessionCdpClients.delete(sessionId);\n            }\n        }\n        if (parsed.id !== undefined) {\n            // Handle command response.\n            const callbacks = this.#commandCallbacks.get(parsed.id);\n            this.#commandCallbacks.delete(parsed.id);\n            if (callbacks) {\n                if (parsed.result) {\n                    callbacks.resolve(parsed.result);\n                }\n                else if (parsed.error) {\n                    callbacks.reject(parsed.error);\n                }\n            }\n        }\n        else if (parsed.method) {\n            const client = parsed.sessionId\n                ? this.#sessionCdpClients.get(parsed.sessionId)\n                : this.#browserCdpClient;\n            if (client) {\n                client.emit(parsed.method, parsed.params || {});\n            }\n        }\n    };\n}\nexports.CdpConnection = CdpConnection;\n//# sourceMappingURL=cdpConnection.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = void 0;\nclass WebSocketTransport {\n    #onMessage = null;\n    #websocket;\n    constructor(websocket) {\n        this.#websocket = websocket;\n        this.#websocket.on('message', (message) => {\n            this.#onMessage?.(message);\n        });\n    }\n    setOnMessage(onMessage) {\n        this.#onMessage = onMessage;\n    }\n    sendMessage(message) {\n        this.#websocket.send(message);\n    }\n    close() {\n        this.#onMessage = null;\n        this.#websocket.close();\n    }\n}\nexports.WebSocketTransport = WebSocketTransport;\n//# sourceMappingURL=websocketTransport.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketTransport = exports.CdpConnection = exports.CdpClient = void 0;\nvar cdpClient_js_1 = require(\"./cdpClient.js\");\nObject.defineProperty(exports, \"CdpClient\", { enumerable: true, get: function () { return cdpClient_js_1.CdpClient; } });\nvar cdpConnection_js_1 = require(\"./cdpConnection.js\");\nObject.defineProperty(exports, \"CdpConnection\", { enumerable: true, get: function () { return cdpConnection_js_1.CdpConnection; } });\nvar websocketTransport_js_1 = require(\"../utils/websocketTransport.js\");\nObject.defineProperty(exports, \"WebSocketTransport\", { enumerable: true, get: function () { return websocketTransport_js_1.WebSocketTransport; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.generatePage = void 0;\n/**\n * Copyright 2022 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst log_js_1 = require(\"../utils/log.js\");\n/** HTML source code for the user-facing Mapper tab. */\nconst mapperPageSource = '<!DOCTYPE html><title>BiDi-CDP Mapper</title><style>body{font-family: Roboto, serif; font-size: 13px; color: #202124;}.log{padding: 12px; font-family: Menlo, Consolas, Monaco, Liberation Mono, Lucida Console, monospace; font-size: 11px; line-height: 180%; background: #f1f3f4; border-radius: 4px;}.pre{overflow-wrap: break-word; padding: 10px;}.card{margin: 60px auto; padding: 2px 0; max-width: 900px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15), 0 1px 6px rgba(0, 0, 0, 0.2); border-radius: 8px;}.divider{height: 1px; background: #f0f0f0;}.item{padding: 16px 20px;}</style><div class=\"card\"><div class=\"item\"><h1>BiDi-CDP Mapper is controlling this tab</h1><p>Closing or reloading it will stop the BiDi process. <a target=\"_blank\" title=\"BiDi-CDP Mapper GitHub Repository\" href=\"https://github.com/GoogleChromeLabs/chromium-bidi\">Details.</a></p></div><div class=\"divider\"></div><details id=\"details\"><summary class=\"item\">Debug information</summary></details></div>';\n/**\n * The following piece of HTML should be added to the `debug` element:\n *\n * <div class=\"divider\"></div>\n * <div class=\"item\">\n * <h3>${name}</h3>\n * <div id=\"${name}_log\" class=\"log\">\n */\nfunction findOrCreateTypeLogContainer(logType) {\n    const containerId = `${logType}_log`;\n    const existingContainer = document.getElementById(containerId);\n    if (existingContainer) {\n        return existingContainer;\n    }\n    const debugElement = document.getElementById('details');\n    const divider = document.createElement('div');\n    divider.className = 'divider';\n    debugElement.appendChild(divider);\n    const htmlItem = document.createElement('div');\n    htmlItem.className = 'item';\n    htmlItem.innerHTML = `<h3>${logType}</h3><div id=\"${containerId}\" class=\"log\"></div>`;\n    debugElement.appendChild(htmlItem);\n    return document.getElementById(containerId);\n}\nfunction generatePage() {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document.documentElement) {\n        return;\n    }\n    globalThis.document.documentElement.innerHTML = mapperPageSource;\n    // Create main log containers in proper order.\n    findOrCreateTypeLogContainer(log_js_1.LogType.system);\n    findOrCreateTypeLogContainer(log_js_1.LogType.bidi);\n    findOrCreateTypeLogContainer(log_js_1.LogType.browsingContexts);\n    findOrCreateTypeLogContainer(log_js_1.LogType.cdp);\n}\nexports.generatePage = generatePage;\nfunction log(logType, ...messages) {\n    // If run not in browser (e.g. unit test), do nothing.\n    if (!globalThis.document.documentElement) {\n        return;\n    }\n    // If `sendDebugMessage` is defined, send the log message there.\n    global.window?.sendDebugMessage?.(JSON.stringify({ logType, messages }));\n    const typeLogContainer = findOrCreateTypeLogContainer(logType);\n    // This piece of HTML should be added:\n    // <div class=\"pre\">...log message...</div>\n    const lineElement = document.createElement('div');\n    lineElement.className = 'pre';\n    lineElement.textContent = messages.join(' ');\n    typeLogContainer.appendChild(lineElement);\n}\nexports.log = log;\n//# sourceMappingURL=mapperTabPage.js.map","\"use strict\";\n/**\n * Copyright 2021 Google LLC.\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Parser = __importStar(require(\"../protocol-parser/protocol-parser.js\"));\nconst protocol_1 = require(\"../protocol/protocol\");\nconst BidiServer_js_1 = require(\"../bidiMapper/BidiServer.js\");\nconst index_js_1 = require(\"../cdp/index.js\");\nconst log_js_1 = require(\"../utils/log.js\");\nconst OutgoingBidiMessage_js_1 = require(\"../bidiMapper/OutgoingBidiMessage.js\");\nconst mapperTabPage_js_1 = require(\"./mapperTabPage.js\");\n// Initiate `setSelfTargetId` as soon as possible to prevent race condition.\nconst waitSelfTargetIdPromise = waitSelfTargetId();\nvoid (async () => {\n    (0, mapperTabPage_js_1.generatePage)();\n    // Needed to filter out info related to BiDi target.\n    const selfTargetId = await waitSelfTargetIdPromise;\n    const bidiServer = await createBidiServer(selfTargetId);\n    (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Launched');\n    bidiServer.emitOutgoingMessage(OutgoingBidiMessage_js_1.OutgoingBidiMessage.createResolved({ launched: true }, null));\n})();\nfunction createCdpConnection() {\n    /**\n     * A CdpTransport implementation that uses the window.cdp bindings\n     * injected by Target.exposeDevToolsProtocol.\n     */\n    class WindowCdpTransport {\n        #onMessage = null;\n        constructor() {\n            window.cdp.onmessage = (message) => {\n                this.#onMessage?.call(null, message);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        sendMessage(message) {\n            window.cdp.send(message);\n        }\n        close() {\n            this.#onMessage = null;\n            window.cdp.onmessage = null;\n        }\n    }\n    return new index_js_1.CdpConnection(new WindowCdpTransport(), (...messages) => {\n        (0, mapperTabPage_js_1.log)(log_js_1.LogType.cdp, ...messages);\n    });\n}\nfunction createBidiServer(selfTargetId) {\n    class WindowBidiTransport {\n        #onMessage = null;\n        constructor() {\n            window.onBidiMessage = (messageStr) => {\n                (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'received ◂', messageStr);\n                let messageObject;\n                try {\n                    messageObject = WindowBidiTransport.#parseBidiMessage(messageStr);\n                }\n                catch (e) {\n                    // Transport-level error does not provide channel.\n                    this.#respondWithError(messageStr, protocol_1.Message.ErrorCode.InvalidArgument, e.message, null);\n                    return;\n                }\n                this.#onMessage?.call(null, messageObject);\n            };\n        }\n        setOnMessage(onMessage) {\n            this.#onMessage = onMessage;\n        }\n        sendMessage(message) {\n            const messageStr = JSON.stringify(message);\n            window.sendBidiResponse(messageStr);\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.bidi, 'sent ▸', messageStr);\n        }\n        close() {\n            this.#onMessage = null;\n            window.onBidiMessage = null;\n        }\n        #respondWithError(plainCommandData, errorCode, errorMessage, channel) {\n            const errorResponse = WindowBidiTransport.#getErrorResponse(plainCommandData, errorCode, errorMessage);\n            if (channel) {\n                // XXX: get rid of any, same code existed in BidiServer.\n                this.sendMessage({\n                    ...errorResponse,\n                    channel,\n                });\n            }\n            else {\n                this.sendMessage(errorResponse);\n            }\n        }\n        static #getJsonType(value) {\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return 'array';\n            }\n            return typeof value;\n        }\n        static #getErrorResponse(messageStr, errorCode, errorMessage) {\n            // XXX: this is bizarre per spec. We reparse the payload and\n            // extract the ID, regardless of what kind of value it was.\n            let messageId;\n            try {\n                const messageObj = JSON.parse(messageStr);\n                if (WindowBidiTransport.#getJsonType(messageObj) === 'object' &&\n                    'id' in messageObj) {\n                    messageId = messageObj.id;\n                }\n            }\n            catch { }\n            return {\n                id: messageId,\n                error: errorCode,\n                message: errorMessage,\n                // XXX: optional stacktrace field.\n            };\n        }\n        static #parseBidiMessage(messageStr) {\n            let messageObject;\n            try {\n                messageObject = JSON.parse(messageStr);\n            }\n            catch {\n                throw new Error('Cannot parse data as JSON');\n            }\n            const parsedType = WindowBidiTransport.#getJsonType(messageObject);\n            if (parsedType !== 'object') {\n                throw new Error(`Expected JSON object but got ${parsedType}`);\n            }\n            // Extract and validate id, method and params.\n            const { id, method, params } = messageObject;\n            const idType = WindowBidiTransport.#getJsonType(id);\n            if (idType !== 'number' || !Number.isInteger(id) || id < 0) {\n                // TODO: should uint64_t be the upper limit?\n                // https://tools.ietf.org/html/rfc7049#section-2.1\n                throw new Error(`Expected unsigned integer but got ${idType}`);\n            }\n            const methodType = WindowBidiTransport.#getJsonType(method);\n            if (methodType !== 'string') {\n                throw new Error(`Expected string method but got ${methodType}`);\n            }\n            const paramsType = WindowBidiTransport.#getJsonType(params);\n            if (paramsType !== 'object') {\n                throw new Error(`Expected object params but got ${paramsType}`);\n            }\n            let channel = messageObject.channel;\n            if (channel !== undefined) {\n                const channelType = WindowBidiTransport.#getJsonType(channel);\n                if (channelType !== 'string') {\n                    throw new Error(`Expected string channel but got ${channelType}`);\n                }\n                // Empty string channel is considered as no channel provided.\n                if (channel === '') {\n                    channel = undefined;\n                }\n            }\n            return { id, method, params, channel };\n        }\n    }\n    return BidiServer_js_1.BidiServer.createAndStart(new WindowBidiTransport(), createCdpConnection(), selfTargetId, new BidiParserImpl(), mapperTabPage_js_1.log);\n}\nclass BidiParserImpl {\n    parseAddPreloadScriptParams(params) {\n        return Parser.Script.parseAddPreloadScriptParams(params);\n    }\n    parseRemovePreloadScriptParams(params) {\n        return Parser.Script.parseRemovePreloadScriptParams(params);\n    }\n    parseGetRealmsParams(params) {\n        return Parser.Script.parseGetRealmsParams(params);\n    }\n    parseCallFunctionParams(params) {\n        return Parser.Script.parseCallFunctionParams(params);\n    }\n    parseEvaluateParams(params) {\n        return Parser.Script.parseEvaluateParams(params);\n    }\n    parseDisownParams(params) {\n        return Parser.Script.parseDisownParams(params);\n    }\n    parseSendCommandParams(params) {\n        return Parser.CDP.parseSendCommandParams(params);\n    }\n    parseGetSessionParams(params) {\n        return Parser.CDP.parseGetSessionParams(params);\n    }\n    parseSubscribeParams(params) {\n        return Parser.Session.parseSubscribeParams(params);\n    }\n    parseNavigateParams(params) {\n        return Parser.BrowsingContext.parseNavigateParams(params);\n    }\n    parseGetTreeParams(params) {\n        return Parser.BrowsingContext.parseGetTreeParams(params);\n    }\n    parseCreateParams(params) {\n        return Parser.BrowsingContext.parseCreateParams(params);\n    }\n    parseCloseParams(params) {\n        return Parser.BrowsingContext.parseCloseParams(params);\n    }\n    parseCaptureScreenshotParams(params) {\n        return Parser.BrowsingContext.parseCaptureScreenshotParams(params);\n    }\n    parsePrintParams(params) {\n        return Parser.BrowsingContext.parsePrintParams(params);\n    }\n}\n// Needed to filter out info related to BiDi target.\nasync function waitSelfTargetId() {\n    return new Promise((resolve) => {\n        window.setSelfTargetId = (targetId) => {\n            (0, mapperTabPage_js_1.log)(log_js_1.LogType.system, 'Current target ID:', targetId);\n            resolve(targetId);\n        };\n    });\n}\n//# sourceMappingURL=bidiTab.js.map"],"names":["util","Object","defineProperty","exports","value","getParsedType","ZodParsedType","objectUtil","assertEqual","val","assertIs","_arg","assertNever","_x","Error","arrayToEnum","items","obj","item","getValidEnumValues","validKeys","objectKeys","filter","k","filtered","objectValues","map","e","keys","object","key","prototype","hasOwnProperty","call","push","find","arr","checker","isInteger","Number","isFinite","Math","floor","joinValues","array","separator","join","jsonStringifyReplacer","_","toString","mergeShapes","first","second","data","undefined","string","isNaN","nan","number","boolean","function","bigint","symbol","Array","isArray","null","then","catch","promise","Map","Set","set","Date","date","unknown","ZodError_1","ZodError","quotelessJson","util_1","require$$0","ZodError$1","ZodIssueCode","JSON","stringify","replace","constructor","issues","super","this","addIssue","sub","addIssues","subs","actualProto","setPrototypeOf","__proto__","name","errors","format","_mapper","mapper","issue","message","fieldErrors","_errors","processError","error","code","unionErrors","returnTypeError","argumentsError","path","length","curr","i","el","isEmpty","flatten","formErrors","create","en","require$$1","default","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","options","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","includes","position","startsWith","endsWith","too_small","type","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","__importDefault","mod","__esModule","getErrorMap","setErrorMap","en_1","defaultErrorMap","overrideErrorMap","isAsync","isValid","isDirty","isAborted","OK","DIRTY","INVALID","ParseStatus","addIssueToContext","EMPTY_PATH","makeIssue","errors_1","params","errorMaps","issueData","fullPath","fullIssue","errorMessage","maps","m","slice","reverse","ctx","common","contextualErrorMap","schemaErrorMap","x","dirty","abort","static","status","results","arrayValue","s","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","freeze","Promise","typeAliases","errorUtil","errToObj","discriminatedUnion","coerce","ZodFirstPartyTypeKind","late","ZodSchema","Schema","ZodBranded","BRAND","ZodNaN","ZodCatch","ZodDefault","ZodNullable","ZodTransformer","ZodEffects","ZodPromise","ZodNativeEnum","ZodEnum","ZodLiteral","ZodFunction","ZodSet","ZodMap","ZodRecord","ZodTuple","ZodIntersection","ZodUnion","ZodObject","ZodArray","ZodVoid","ZodNever","ZodUnknown","ZodNull","ZodUndefined","ZodSymbol","ZodDate","ZodBoolean","ZodBigInt","ZodString","ZodType","NEVER","void","union","transformer","strictObject","record","preprocess","pipeline","optional","onumber","oboolean","nullable","never","nativeEnum","literal","lazy","intersection","enum","effect","errorUtil_1","parseUtil_1","require$$2","require$$3","require$$4","ParseInputLazyPath","parent","_cachedPath","_path","_key","handleResult","result","success","_error","processCreateParams","errorMap","invalid_type_error","required_error","description","iss","def","spa","safeParseAsync","_def","parse","bind","safeParse","parseAsync","refine","refinement","superRefine","nullish","or","and","transform","brand","describe","pipe","isNullable","isOptional","_getType","input","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","resolve","_a","async","maybeAsyncResult","check","getIssueProperties","_refinement","setError","refinementData","schema","typeName","ZodOptional","option","incoming","defaultValueFunc","innerType","defaultValue","catchValueFunc","catchValue","This","target","ZodPipeline","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","emailRegex","emojiRegex","ipv4Regex","ipv6Regex","isValidIP","ip","version","test","arguments","_regex","regex","nonempty","min","trim","checks","kind","toLowerCase","toUpperCase","String","tooBig","tooSmall","URL","lastIndex","args","precision","offset","RegExp","_addCheck","email","url","emoji","uuid","cuid","cuid2","ulid","datetime","minLength","max","maxLength","len","isDatetime","ch","isEmail","isURL","isEmoji","isUUID","isCUID","isCUID2","isULID","isIP","floatSafeRemainder","step","valDecCount","split","stepDecCount","decCount","parseInt","toFixed","pow","ZodNumber","gte","lte","setLimit","gt","lt","int","positive","negative","nonpositive","nonnegative","finite","safe","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","minValue","maxValue","isInt","BigInt","Boolean","getTime","minDate","maxDate","ZodAny","_any","_unknown","exactLength","all","mergeArray","element","deepPartialify","newShape","shape","fieldSchema","unwrap","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strict","_b","_c","_d","strip","augmentation","merge","merging","setKey","index","pick","mask","forEach","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","types","getDiscriminator","ZodLazy","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","get","from","discriminatorValues","has","mergeValues","a","b","aType","bType","valid","bKeys","sharedKeys","indexOf","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","merged","left","right","rest","itemIndex","schemas","keySchema","keyType","valueSchema","valueType","mergeObjectAsync","third","entries","finalMap","minSize","size","maxSize","finalizeSet","elements","parsedSet","add","values","validate","implement","makeArgsIssue","makeReturnsIssue","returns","fn","parsedArgs","parsedReturns","parameters","returnType","func","strictImplement","getter","expectedValues","enumValues","Values","Enum","extract","exclude","opt","nativeEnumValues","promisified","sourceType","processed","checkCtx","arg","fatal","executeRefinement","acc","inner","base","createWithPreprocess","removeDefault","newCtx","removeCatch","Symbol","inResult","in","out","handleAsync","p","_fatal","p2","instanceof","cls","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","any","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","tuple","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","ostring","__createBinding","o","k2","enumerable","__exportStar","require$$5","__setModuleDefault","v","__importStar","z","Script","BrowsingContext","EventNames","Log","Network","CDP","Message","ErrorCode","ErrorResponse","stacktrace","toErrorResponse","commandId","id","InvalidArgumentException","InvalidArgument","NoSuchHandleException","NoSuchHandle","InvalidSessionIdException","InvalidSessionId","NoSuchAlertException","NoSuchAlert","NoSuchFrameException","NoSuchFrame","NoSuchNodeException","NoSuchNode","NoSuchScriptException","NoSuchScript","SessionNotCreatedException","SessionNotCreated","UnknownCommandException","UnknownCommand","UnknownErrorException","UnknownError","UnsupportedOperationException","UnsupportedOperation","AllEvents","Session","parseObject","zod_1","protocol_js_1","parseResult","CommonDataTypes","SharedReferenceSchema","sharedId","handle","RemoteReferenceSchema","UndefinedValueSchema","NullValueSchema","StringValueSchema","SpecialNumberSchema","NumberValueSchema","BooleanValueSchema","BigIntValueSchema","PrimitiveProtocolValueSchema","LocalValueSchema","ArrayLocalValueSchema","DateLocalValueSchema","MapLocalValueSchema","ObjectLocalValueSchema","RegExpLocalValueSchema","SetLocalValueSchema","LocalOrRemoteValueSchema","ListLocalValueSchema","MappingLocalValueSchema","pattern","flags","BrowsingContextSchema","MaxDepthSchema","RealmTypeSchema","GetRealmsParametersSchema","context","parseGetRealmsParams","ContextTargetSchema","sandbox","RealmTargetSchema","realm","TargetSchema","ResultOwnershipSchema","EvaluateParametersSchema","expression","awaitPromise","resultOwnership","parseEvaluateParams","DisownParametersSchema","handles","parseDisownParams","ChannelSchema","ChannelPropertiesSchema","channel","maxDepth","ownership","ChannelValueSchema","PreloadScriptSchema","AddPreloadScriptParametersSchema","functionDeclaration","parseAddPreloadScriptParams","RemovePreloadScriptParametersSchema","script","parseRemovePreloadScriptParams","ArgumentValueSchema","CallFunctionParametersSchema","parseCallFunctionParams","GetTreeParametersSchema","root","parseGetTreeParams","ReadinessStateSchema","NavigateParametersSchema","wait","parseNavigateParams","CreateParametersSchema","referenceContext","parseCreateParams","CloseParametersSchema","parseCloseParams","CaptureScreenshotParametersSchema","parseCaptureScreenshotParams","PrintPageParametersSchema","height","width","PrintMarginParametersSchema","bottom","top","PrintPageRangesSchema","pageRanges","every","pageRange","match","start","end","groups","PrintParametersSchema","background","margin","orientation","page","scale","shrinkToFit","parsePrintParams","SendCommandParamsSchema","cdpMethod","cdpParams","cdpSession","parseSendCommandParams","GetSessionParamsSchema","parseGetSessionParams","SubscriptionRequestParametersEventsSchema","SubscriptionRequestParametersSchema","events","contexts","parseSubscribeParams","EventEmitter_1","EventEmitter","mitt_1","n","on","t","off","splice","emit","EventEmitter$1","emitter","handler","once","event","onceHandler","eventData","LogType","processingQueue","ProcessingQueue","log_js_1","logger","processor","queue","isProcessing","entry","processIfNeeded","entryPromise","shift","system","unitConversions","inchesFromCm","cm","deferred","Deferred","isFinished","reject","onFulfilled","onRejected","reason","finally","onFinally","toStringTag","ScriptEvaluator","SHARED_ID_DIVIDER","eventManager","cdpObject","cdpClient","sendCommand","returnByValue","executionContextId","cdpRemoteObject","cdpRemoteObjectToCallArgument","cdpWebDriverValue","generateWebDriverValue","cdpToBidiValue","cdpEvaluateResult","contextId","exceptionDetails","serializeCdpExceptionDetails","realmId","_this","_arguments","callFunctionAndSerializeScript","thisAndArgumentsList","deserializeToCdpArg","cdpCallFunctionResult","objectId","unserializableValue","argumentValue","navigableId","rawBackendNodeId","backendNodeId","keyValueArray","flattenKeyValuePairs","argEvalResult","flattenValueList","channelHandle","queueNonEmptyResolver","onMessage","sendMessage","initChannelListener","mapping","keyArg","valueArg","list","channelId","getMessage","registerEvent","method","MessageEvent","source","browsingContextId","cdpExceptionDetails","lineOffset","callFrames","stackTrace","frame","functionName","lineNumber","columnNumber","exception","serializeCdpObject","text","stringifyObject","Realm","scriptEvaluator_js_1","realmStorage","browsingContextStorage","origin","scriptEvaluator","cdpSessionId","realmMap","knownHandlesToRealm","releaseObject","delete","cdpValue","webDriverValue","bidiValue","webDriverValueToBiDi","hasOwn","children","toBiDi","findContext","getContext","awaitUnblocked","callFunction","scriptEvaluate","browsingContextImpl","BrowsingContextImpl","unitConversions_js_1","deferred_js_1","realm_js_1","parentId","defers","documentInitialized","Page","navigatedWithinDocument","lifecycleEvent","DOMContentLoaded","load","loaderId","cdpTarget","maybeDefaultRealm","initListeners","addContext","isTopLevelContext","addChild","ContextCreatedEvent","serializeToBidiValue","deleteAllChildren","deleteRealms","ContextDestroyedEvent","deleteContextById","directChildren","allChildren","concat","child","childId","defaultRealm","updateCdpTarget","targetUnblocked","maybeSandboxes","findRealms","frameId","worldName","addParentFiled","c","targetInfo","targetId","urlFragment","timestamp","documentChanged","DomContentLoadedEvent","navigation","LoadEvent","auxData","uniqueId","getOrigin","isDefault","browsingContexts","cdpNavigateResult","errorText","printToPdfCdpParams","printBackground","landscape","preferCSSPageSize","marginBottom","marginLeft","marginRight","marginTop","paperHeight","paperWidth","logHelper","getRemoteValuesText","logMessageFormatter","specifiers","isFormmatSpecifier","str","some","spec","output","argFormat","argValues","tokens","token","stringFromArg","parseFloat","toJson","formatText","logManager","LogManager","logHelper_js_1","getBidiStackTrace","cdpStackTrace","stackFrames","callFrame","initialize","initializeLogEntryAddedEventListener","findRealm","argsPromise","registerPromiseEvent","LogEntryAddedEvent","level","consoleApiType","round","textPromise","DefaultMap_1","DefaultMap","getDefaultValue","DefaultMap$1","networkRequest","NetworkRequest","requestId","requestWillBeSentEvent","requestWillBeSentExtraInfoEvent","responseReceivedEvent","responseReceivedExtraInfoEvent","beforeRequestSentDeferred","responseReceivedDeferred","onRequestWillBeSentEvent","sendBeforeRequestEvent","onRequestWillBeSentExtraInfoEvent","onResponseReceivedEvent","hasExtraInfo","sendResponseReceivedEvent","onResponseReceivedEventExtraInfo","onLoadingFailedEvent","loadingFailedEvent","getBaseEventParams","FetchErrorEvent","isIgnoredEvent","getBeforeRequestEvent","BeforeRequestSentEvent","initiator","getInitiatorType","redirectCount","request","getRequestData","wallTime","cookies","getCookies","associatedCookies","headers","headersSize","bodySize","timings","timeOrigin","requestTime","redirectStart","redirectEnd","fetchStart","dnsStart","dnsEnd","connectStart","connectEnd","tlsStart","tlsEnd","requestStart","responseStart","responseEnd","cdpSameSiteValue","cookieInfo","cookie","domain","expires","httpOnly","secure","sameSite","getCookiesSameSite","getResponseReceivedEvent","ResponseCompletedEvent","response","protocol","statusText","fromCache","fromDiskCache","fromPrefetchCache","getHeaders","mimeType","bytesReceived","encodedDataLength","headersText","content","networkProcessor","NetworkProcessor","DefaultMap_js_1","networkRequest_js_1","requestMap","getOrCreateNetworkRequest","CdpTarget","logManager_js_1","networkProcessor_js_1","parentTargetId","preloadScriptStorage","networkDomainActivated","setEventListeners","unblock","isNetworkDomainEnabled","enableNetworkDomain","enabled","autoAttach","waitForDebuggerOnStart","loadPreloadScripts","EventReceivedEvent","findPreloadScripts","contextIds","cdpPreloadScriptId","addPreloadScript","appendCdpPreloadScript","preloadScriptId","scriptSource","identifier","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","REGEX","_nodeId","_clockseq","byteToHex","substr","TypeError","_lastMSecs","_lastNSecs","v35","hashfunc","generateUUID","namespace","buf","unescape","encodeURIComponent","bytes","charCodeAt","stringToBytes","err","DNS","getOutputLength","inputLength8","safeAdd","y","lsw","md5cmn","q","num","cnt","md5ff","d","md5gg","md5hh","md5ii","v3","msg","length32","hexTab","hex","charAt","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","v3$1","f","ROTL","v5","K","H","l","N","ceil","M","_i","j","_i2","W","_t","_t2","T","v5$1","node","clockseq","seedBytes","random","msecs","now","nsecs","dt","tl","tmh","rnds","PreloadScriptStorage_1","PreloadScriptStorage","uuid_1","PreloadScriptStorage$1","scripts","addPreloadScripts","cdpPreloadScripts","preloadScript","v4","cdpPreloadScript","removeBiDiPreloadScripts","removeCdpPreloadScripts","sessionId","browsingContextProcessor","BrowsingContextProcessor","browsingContextImpl_js_1","cdpTarget_js_1","PreloadScriptStorage_js_1","cdpConnection","selfTargetId","browserClient","handleAttachedToTargetEvent","handleDetachedFromTargetEvent","handleFrameAttachedEvent","handleFrameDetachedEvent","parentBrowsingContext","parentFrameId","parentSessionCdpClient","targetCdpClient","getCdpClient","isValidTarget","maybeContext","getRealm","getOrCreateSandbox","process_browsingContext_getTree","getTopLevelContexts","MAX_VALUE","browserCdpClient","newWindow","awaitLoaded","process_browsingContext_navigate","navigate","captureScreenshot","print","cdpTargets","bidiId","removePreloadScript","process_script_getRealms","realms","h","disown","commandParams","detachedFromTargetPromise","onContextDestroyed","eventParams","client","process_cdp_getSession","OutgoingBidiMessage_1","OutgoingBidiMessage","messagePromise","OutgoingBidiMessage$1","CommandProcessor_1","CommandProcessor","EventEmitter_js_1","browsingContextProcessor_js_1","OutgoingBidiMessage_js_1","BidiNoOpParser","contextProcessor","parser","ready","subscribe","unsubscribe","commandData","process_session_status","process_session_subscribe","process_session_unsubscribe","process_browsingContext_create","process_browsingContext_close","process_browsingContext_captureScreenshot","process_browsingContext_print","process_script_addPreloadScript","process_script_removePreloadScript","process_script_callFunction","process_script_evaluate","process_script_disown","process_cdp_sendCommand","command","processCommand","createResolved","errorResponse","bidi","CommandProcessor$1","BrowsingContextStorage","getAllContexts","deleteContext","hasContext","findTopLevelContextId","findTopLevelContext","topLevelContextId","buffer","Buffer","capacity","onItemRemoved","idWrapper","IdWrapper","counter","SubscriptionManager_1","SubscriptionManager","unrollEvents","cartesianProduct","reduce","flatMap","flat","allEvents","SubscriptionManager$1","subscriptionPriority","channelToContextToEventMap","getChannelsSubscribedToEvent","eventMethod","priority","getEventSubscriptionPriorityForChannel","sort","contextToEventMap","maybeTopLevelContextId","priorities","specificEvent","eventMap","unsubscribeAll","checkUnsubscribe","eventName","EventManager_1","EventManager","buffer_js_1","idWrapper_js_1","SubscriptionManager_js_1","EventWrapper","eventBufferLength","eventToContextsMap","eventBuffers","lastMessageSent","subscriptionManager","bidiServer","getBrowsingContextStorage","browsingContext","eventWrapper","sortedChannels","bufferEvent","emitOutgoingMessage","createFromPromise","markEventSent","eventNames","handleDomains","getBufferedEvents","NETWORK_DOMAIN_PREFIX","bufferMapKey","getMapKey","lastSentMapKey","lastSentMessageId","Infinity","wrapper","_contextId","e1","e2","EventManager$1","RealmStorage","maybeRealms","maybeRealm","r","BidiServer_1","BidiServer","processingQueue_js_1","CommandProcessor_js_1","browsingContextStorage_js_1","EventManager_js_1","realmStorage_js_1","require$$6","messageQueue","transport","commandProcessor","handleIncomingMessage","processOutgoingMessage","messageEntry","bidiTransport","setOnMessage","server","discover","topLevelContextsLoaded","close","BidiServer$1","CdpClient","param","CdpConnection","cdpClient_js_1","sessionCdpClients","commandCallbacks","log","nextId","clear","messageObj","messageStr","messagePretty","parsed","callbacks","websocketTransport","WebSocketTransport","websocket","send","cdpConnection_js_1","websocketTransport_js_1","mapperTabPage","generatePage","findOrCreateTypeLogContainer","logType","containerId","existingContainer","document","getElementById","debugElement","divider","createElement","className","appendChild","htmlItem","innerHTML","globalThis","documentElement","cdp","messages","global","window","sendDebugMessage","typeLogContainer","lineElement","textContent","desc","getOwnPropertyDescriptor","writable","configurable","bidiTab","Parser","protocol_1","BidiServer_js_1","index_js_1","mapperTabPage_js_1","waitSelfTargetIdPromise","setSelfTargetId","waitSelfTargetId","WindowBidiTransport","onBidiMessage","messageObject","parseBidiMessage","respondWithError","sendBidiResponse","plainCommandData","errorCode","getErrorResponse","messageId","getJsonType","idType","methodType","paramsType","channelType","createAndStart","WindowCdpTransport","onmessage","createCdpConnection","BidiParserImpl","createBidiServer","launched"],"mappings":"itBAGA,IAAIA,EAFJC,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAAE,cAAwBF,EAAwBG,cAAAH,EAAAI,WAAqBJ,EAAeH,UAAA,EAEpF,SAAWA,GACPA,EAAKQ,YAAeC,GAAQA,EAE5BT,EAAKU,SADL,SAAkBC,GAAS,EAK3BX,EAAKY,YAHL,SAAqBC,GACjB,MAAM,IAAIC,KACb,EAEDd,EAAKe,YAAeC,IAChB,MAAMC,EAAM,CAAA,EACZ,IAAK,MAAMC,KAAQF,EACfC,EAAIC,GAAQA,EAEhB,OAAOD,CAAG,EAEdjB,EAAKmB,mBAAsBF,IACvB,MAAMG,EAAYpB,EAAKqB,WAAWJ,GAAKK,QAAQC,GAA6B,iBAAhBN,EAAIA,EAAIM,MAC9DC,EAAW,CAAA,EACjB,IAAK,MAAMD,KAAKH,EACZI,EAASD,GAAKN,EAAIM,GAEtB,OAAOvB,EAAKyB,aAAaD,EAAS,EAEtCxB,EAAKyB,aAAgBR,GACVjB,EAAKqB,WAAWJ,GAAKS,KAAI,SAAUC,GACtC,OAAOV,EAAIU,EACvB,IAEI3B,EAAKqB,WAAoC,mBAAhBpB,OAAO2B,KACzBX,GAAQhB,OAAO2B,KAAKX,GACpBY,IACC,MAAMD,EAAO,GACb,IAAK,MAAME,KAAOD,EACV5B,OAAO8B,UAAUC,eAAeC,KAAKJ,EAAQC,IAC7CF,EAAKM,KAAKJ,GAGlB,OAAOF,CAAI,EAEnB5B,EAAKmC,KAAO,CAACC,EAAKC,KACd,IAAK,MAAMnB,KAAQkB,EACf,GAAIC,EAAQnB,GACR,OAAOA,CAEC,EAEpBlB,EAAKsC,UAAwC,mBAArBC,OAAOD,UACxB7B,GAAQ8B,OAAOD,UAAU7B,GACzBA,GAAuB,iBAARA,GAAoB+B,SAAS/B,IAAQgC,KAAKC,MAAMjC,KAASA,EAM/ET,EAAK2C,WALL,SAAoBC,EAAOC,EAAY,OACnC,OAAOD,EACFlB,KAAKjB,GAAwB,iBAARA,EAAmB,IAAIA,KAASA,IACrDqC,KAAKD,EACb,EAED7C,EAAK+C,sBAAwB,CAACC,EAAG5C,IACR,iBAAVA,EACAA,EAAM6C,WAEV7C,CAEd,CA7DD,CA6DGJ,EAAOG,EAAQH,OAASG,EAAeH,KAAA,CAAE,KAS5BG,EAAQI,aAAeJ,EAAqBI,WAAA,CAAA,IAN7C2C,YAAc,CAACC,EAAOC,KACtB,IACAD,KACAC,IAIfjD,EAAwBG,cAAAN,EAAKe,YAAY,CACrC,SACA,MACA,SACA,UACA,QACA,UACA,OACA,SACA,SACA,WACA,YACA,OACA,QACA,SACA,UACA,UACA,OACA,QACA,MACA,QA8CJZ,EAAAE,cA5CuBgD,IAEnB,cADiBA,GAEb,IAAK,YACD,OAAOlD,EAAQG,cAAcgD,UACjC,IAAK,SACD,OAAOnD,EAAQG,cAAciD,OACjC,IAAK,SACD,OAAOC,MAAMH,GAAQlD,EAAQG,cAAcmD,IAAMtD,EAAQG,cAAcoD,OAC3E,IAAK,UACD,OAAOvD,EAAQG,cAAcqD,QACjC,IAAK,WACD,OAAOxD,EAAQG,cAAcsD,SACjC,IAAK,SACD,OAAOzD,EAAQG,cAAcuD,OACjC,IAAK,SACD,OAAO1D,EAAQG,cAAcwD,OACjC,IAAK,SACD,OAAIC,MAAMC,QAAQX,GACPlD,EAAQG,cAAcsC,MAEpB,OAATS,EACOlD,EAAQG,cAAc2D,KAE7BZ,EAAKa,MACgB,mBAAdb,EAAKa,MACZb,EAAKc,OACiB,mBAAfd,EAAKc,MACLhE,EAAQG,cAAc8D,QAEd,oBAARC,KAAuBhB,aAAgBgB,IACvClE,EAAQG,cAAcoB,IAEd,oBAAR4C,KAAuBjB,aAAgBiB,IACvCnE,EAAQG,cAAciE,IAEb,oBAATC,MAAwBnB,aAAgBmB,KACxCrE,EAAQG,cAAcmE,KAE1BtE,EAAQG,cAAcuB,OACjC,QACI,OAAO1B,EAAQG,cAAcoE,QACpC,eC1ILzE,OAAOC,eAAeyE,EAAS,aAAc,CAAEvE,OAAO,IACtDuE,EAAAC,SAAwCD,EAAAE,kCAA0B,EAClE,MAAMC,EAASC,EACfC,EAAAC,aAAuBH,EAAO9E,KAAKe,YAAY,CAC3C,eACA,kBACA,SACA,gBACA,8BACA,qBACA,oBACA,oBACA,sBACA,eACA,iBACA,YACA,UACA,6BACA,kBACA,eAMiBiE,EAAAH,cAJE5D,GACNiE,KAAKC,UAAUlE,EAAK,KAAM,GAC3BmE,QAAQ,cAAe,OAGvC,MAAMR,UAAiB9D,MACnBuE,YAAYC,GACRC,QACAC,KAAKF,OAAS,GACdE,KAAKC,SAAYC,IACbF,KAAKF,OAAS,IAAIE,KAAKF,OAAQI,EAAI,EAEvCF,KAAKG,UAAY,CAACC,EAAO,MACrBJ,KAAKF,OAAS,IAAIE,KAAKF,UAAWM,EAAK,EAE3C,MAAMC,aAAyB9D,UAC3B9B,OAAO6F,eACP7F,OAAO6F,eAAeN,KAAMK,GAG5BL,KAAKO,UAAYF,EAErBL,KAAKQ,KAAO,WACZR,KAAKF,OAASA,CACjB,CACGW,aACA,OAAOT,KAAKF,MACf,CACDY,OAAOC,GACH,MAAMC,EAASD,GACX,SAAUE,GACN,OAAOA,EAAMC,OAC7B,EACcC,EAAc,CAAEC,QAAS,IACzBC,EAAgBC,IAClB,IAAK,MAAML,KAASK,EAAMpB,OACtB,GAAmB,kBAAfe,EAAMM,KACNN,EAAMO,YAAYlF,IAAI+E,QAErB,GAAmB,wBAAfJ,EAAMM,KACXF,EAAaJ,EAAMQ,sBAElB,GAAmB,sBAAfR,EAAMM,KACXF,EAAaJ,EAAMS,qBAElB,GAA0B,IAAtBT,EAAMU,KAAKC,OAChBT,EAAYC,QAAQtE,KAAKkE,EAAOC,QAE/B,CACD,IAAIY,EAAOV,EACPW,EAAI,EACR,KAAOA,EAAIb,EAAMU,KAAKC,QAAQ,CAC1B,MAAMG,EAAKd,EAAMU,KAAKG,GACLA,IAAMb,EAAMU,KAAKC,OAAS,GAKvCC,EAAKE,GAAMF,EAAKE,IAAO,CAAEX,QAAS,IAClCS,EAAKE,GAAIX,QAAQtE,KAAKkE,EAAOC,KAJ7BY,EAAKE,GAAMF,EAAKE,IAAO,CAAEX,QAAS,IAMtCS,EAAOA,EAAKE,GACZD,GACH,CACJ,CACJ,EAGL,OADAT,EAAajB,MACNe,CACV,CACDtD,WACI,OAAOuC,KAAKc,OACf,CACGA,cACA,OAAOpB,KAAKC,UAAUK,KAAKF,OAAQR,EAAO9E,KAAK+C,sBAAuB,EACzE,CACGqE,cACA,OAA8B,IAAvB5B,KAAKF,OAAO0B,MACtB,CACDK,QAAQjB,EAAS,CAACC,GAAUA,EAAMC,UAC9B,MAAMC,EAAc,CAAA,EACde,EAAa,GACnB,IAAK,MAAM5B,KAAOF,KAAKF,OACfI,EAAIqB,KAAKC,OAAS,GAClBT,EAAYb,EAAIqB,KAAK,IAAMR,EAAYb,EAAIqB,KAAK,KAAO,GACvDR,EAAYb,EAAIqB,KAAK,IAAI7E,KAAKkE,EAAOV,KAGrC4B,EAAWpF,KAAKkE,EAAOV,IAG/B,MAAO,CAAE4B,aAAYf,cACxB,CACGe,iBACA,OAAO9B,KAAK6B,SACf,EAEW1C,EAAAC,SAAGA,EACnBA,EAAS2C,OAAUjC,GACD,IAAIV,EAASU,GCxH/BrF,OAAOC,eAAesH,EAAS,aAAc,CAAEpH,OAAO,IACtD,MAAM0E,EAASC,EACTJ,EAAa8C,EA6HnBD,EAAAE,QA5HiB,CAACrB,EAAOsB,KACrB,IAAIrB,EACJ,OAAQD,EAAMM,MACV,KAAKhC,EAAWM,aAAa2C,aAErBtB,EADAD,EAAMwB,WAAa/C,EAAOxE,cAAcgD,UAC9B,WAGA,YAAY+C,EAAMyB,sBAAsBzB,EAAMwB,WAE5D,MACJ,KAAKlD,EAAWM,aAAa8C,gBACzBzB,EAAU,mCAAmCpB,KAAKC,UAAUkB,EAAMyB,SAAUhD,EAAO9E,KAAK+C,yBACxF,MACJ,KAAK4B,EAAWM,aAAa+C,kBACzB1B,EAAU,kCAAkCxB,EAAO9E,KAAK2C,WAAW0D,EAAMzE,KAAM,QAC/E,MACJ,KAAK+C,EAAWM,aAAagD,cACzB3B,EAAU,gBACV,MACJ,KAAK3B,EAAWM,aAAaiD,4BACzB5B,EAAU,yCAAyCxB,EAAO9E,KAAK2C,WAAW0D,EAAM8B,WAChF,MACJ,KAAKxD,EAAWM,aAAamD,mBACzB9B,EAAU,gCAAgCxB,EAAO9E,KAAK2C,WAAW0D,EAAM8B,uBAAuB9B,EAAMwB,YACpG,MACJ,KAAKlD,EAAWM,aAAaoD,kBACzB/B,EAAU,6BACV,MACJ,KAAK3B,EAAWM,aAAaqD,oBACzBhC,EAAU,+BACV,MACJ,KAAK3B,EAAWM,aAAasD,aACzBjC,EAAU,eACV,MACJ,KAAK3B,EAAWM,aAAauD,eACO,iBAArBnC,EAAMoC,WACT,aAAcpC,EAAMoC,YACpBnC,EAAU,gCAAgCD,EAAMoC,WAAWC,YAClB,iBAA9BrC,EAAMoC,WAAWE,WACxBrC,EAAU,GAAGA,uDAA6DD,EAAMoC,WAAWE,aAG1F,eAAgBtC,EAAMoC,WAC3BnC,EAAU,mCAAmCD,EAAMoC,WAAWG,cAEzD,aAAcvC,EAAMoC,WACzBnC,EAAU,iCAAiCD,EAAMoC,WAAWI,YAG5D/D,EAAO9E,KAAKY,YAAYyF,EAAMoC,YAIlCnC,EAD0B,UAArBD,EAAMoC,WACD,WAAWpC,EAAMoC,aAGjB,UAEd,MACJ,KAAK9D,EAAWM,aAAa6D,UAErBxC,EADe,UAAfD,EAAM0C,KACI,sBAAsB1C,EAAM2C,MAAQ,UAAY3C,EAAM4C,UAAY,WAAa,eAAe5C,EAAM6C,qBAC1F,WAAf7C,EAAM0C,KACD,uBAAuB1C,EAAM2C,MAAQ,UAAY3C,EAAM4C,UAAY,WAAa,UAAU5C,EAAM6C,uBACtF,WAAf7C,EAAM0C,KACD,kBAAkB1C,EAAM2C,MAC5B,oBACA3C,EAAM4C,UACF,4BACA,kBAAkB5C,EAAM6C,UACd,SAAf7C,EAAM0C,KACD,gBAAgB1C,EAAM2C,MAC1B,oBACA3C,EAAM4C,UACF,4BACA,kBAAkB,IAAIzE,KAAKjC,OAAO8D,EAAM6C,YAExC,gBACd,MACJ,KAAKvE,EAAWM,aAAakE,QAErB7C,EADe,UAAfD,EAAM0C,KACI,sBAAsB1C,EAAM2C,MAAQ,UAAY3C,EAAM4C,UAAY,UAAY,eAAe5C,EAAM+C,qBACzF,WAAf/C,EAAM0C,KACD,uBAAuB1C,EAAM2C,MAAQ,UAAY3C,EAAM4C,UAAY,UAAY,WAAW5C,EAAM+C,uBACtF,WAAf/C,EAAM0C,KACD,kBAAkB1C,EAAM2C,MAC5B,UACA3C,EAAM4C,UACF,wBACA,eAAe5C,EAAM+C,UACX,WAAf/C,EAAM0C,KACD,kBAAkB1C,EAAM2C,MAC5B,UACA3C,EAAM4C,UACF,wBACA,eAAe5C,EAAM+C,UACX,SAAf/C,EAAM0C,KACD,gBAAgB1C,EAAM2C,MAC1B,UACA3C,EAAM4C,UACF,2BACA,kBAAkB,IAAIzE,KAAKjC,OAAO8D,EAAM+C,YAExC,gBACd,MACJ,KAAKzE,EAAWM,aAAaoE,OACzB/C,EAAU,gBACV,MACJ,KAAK3B,EAAWM,aAAaqE,2BACzBhD,EAAU,2CACV,MACJ,KAAK3B,EAAWM,aAAasE,gBACzBjD,EAAU,gCAAgCD,EAAMmD,aAChD,MACJ,KAAK7E,EAAWM,aAAawE,WACzBnD,EAAU,wBACV,MACJ,QACIA,EAAUqB,EAAK+B,aACf5E,EAAO9E,KAAKY,YAAYyF,GAEhC,MAAO,CAAEC,UAAS,EC7HtB,IAAIqD,EAAmBnE,GAAQA,EAAKmE,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAElC,QAAWkC,EACxD,EACA3J,OAAOC,eAAe+F,EAAS,aAAc,CAAE7F,OAAO,IACtD6F,EAAA6D,YAAyC7D,EAAA8D,mCAA6B,EACtE,MAAMC,EAAOL,EAAgB5E,GAC7BkB,EAAAgE,gBAA0BD,EAAKtC,QAC/B,IAAIwC,EAAmBF,EAAKtC,QAITzB,EAAA8D,YAHnB,SAAqBrI,GACjBwI,EAAmBxI,CACvB,EAKAuE,EAAA6D,YAHA,WACI,OAAOI,CACX,wBCdA,IAAIP,EAAmBnE,GAAQA,EAAKmE,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAElC,QAAWkC,EACxD,EACA3J,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAAgK,QAAkBhK,EAAkBiK,QAAAjK,EAAAkK,QAAkBlK,EAAoBmK,UAAAnK,EAAAoK,GAAapK,EAAgBqK,MAAArK,EAAAsK,QAAkBtK,EAAsBuK,YAAAvK,EAAAwK,kBAA4BxK,EAAqByK,WAAAzK,EAAA0K,eAAoB,EACpN,MAAMC,EAAW/F,EACXiF,EAAOL,EAAgBlC,GAsB7BtH,EAAA0K,UArBmBE,IACf,MAAM1H,KAAEA,EAAI0D,KAAEA,EAAIiE,UAAEA,EAASC,UAAEA,GAAcF,EACvCG,EAAW,IAAInE,KAAUkE,EAAUlE,MAAQ,IAC3CoE,EAAY,IACXF,EACHlE,KAAMmE,GAEV,IAAIE,EAAe,GACnB,MAAMC,EAAOL,EACR1J,QAAQgK,KAAQA,IAChBC,QACAC,UACL,IAAK,MAAM9J,KAAO2J,EACdD,EAAe1J,EAAIyJ,EAAW,CAAE9H,OAAMqG,aAAc0B,IAAgB9E,QAExE,MAAO,IACA2E,EACHlE,KAAMmE,EACN5E,QAAS2E,EAAU3E,SAAW8E,EACjC,EAGLjL,EAAAyK,WAAqB,GAerBzK,EAAAwK,kBAdA,SAA2Bc,EAAKR,GAC5B,MAAM5E,GAAQ,EAAIlG,EAAQ0K,WAAW,CACjCI,UAAWA,EACX5H,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACViE,UAAW,CACPS,EAAIC,OAAOC,mBACXF,EAAIG,gBACJ,EAAId,EAAShB,eACbE,EAAKtC,SACPpG,QAAQuK,KAAQA,MAEtBJ,EAAIC,OAAOpG,OAAOpD,KAAKmE,EAC1B,EAED,MAAMqE,EACFrF,cACIG,KAAKpF,MAAQ,OAChB,CACD0L,QACuB,UAAftG,KAAKpF,QACLoF,KAAKpF,MAAQ,QACpB,CACD2L,QACuB,YAAfvG,KAAKpF,QACLoF,KAAKpF,MAAQ,UACpB,CACD4L,kBAAkBC,EAAQC,GACtB,MAAMC,EAAa,GACnB,IAAK,MAAMC,KAAKF,EAAS,CACrB,GAAiB,YAAbE,EAAEH,OACF,OAAO9L,EAAQsK,QACF,UAAb2B,EAAEH,QACFA,EAAOH,QACXK,EAAWjK,KAAKkK,EAAEhM,MACrB,CACD,MAAO,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAO+L,EACzC,CACDH,8BAA8BC,EAAQI,GAClC,MAAMC,EAAY,GAClB,IAAK,MAAMC,KAAQF,EACfC,EAAUpK,KAAK,CACXJ,UAAWyK,EAAKzK,IAChB1B,YAAamM,EAAKnM,QAG1B,OAAOsK,EAAY8B,gBAAgBP,EAAQK,EAC9C,CACDN,uBAAuBC,EAAQI,GAC3B,MAAMI,EAAc,CAAA,EACpB,IAAK,MAAMF,KAAQF,EAAO,CACtB,MAAMvK,IAAEA,EAAG1B,MAAEA,GAAUmM,EACvB,GAAmB,YAAfzK,EAAImK,OACJ,OAAO9L,EAAQsK,QACnB,GAAqB,YAAjBrK,EAAM6L,OACN,OAAO9L,EAAQsK,QACA,UAAf3I,EAAImK,QACJA,EAAOH,QACU,UAAjB1L,EAAM6L,QACNA,EAAOH,cACgB,IAAhB1L,EAAMA,OAAyBmM,EAAKG,aAC3CD,EAAY3K,EAAI1B,OAASA,EAAMA,MAEtC,CACD,MAAO,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAOqM,EACzC,EAELtM,EAAAuK,YAAsBA,EACtBvK,EAAkBsK,QAAAxK,OAAO0M,OAAO,CAC5BV,OAAQ,YAGZ9L,EAAAqK,MADepK,IAAW,CAAE6L,OAAQ,QAAS7L,UAG7CD,EAAAoK,GADYnK,IAAW,CAAE6L,OAAQ,QAAS7L,UAG1CD,EAAAmK,UADmBuB,GAAmB,YAAbA,EAAEI,OAG3B9L,EAAAkK,QADiBwB,GAAmB,UAAbA,EAAEI,OAGzB9L,EAAAiK,QADiByB,GAAmB,UAAbA,EAAEI,OAGzB9L,EAAAgK,QADiB0B,GAAyB,oBAAZe,SAA2Bf,aAAae,qBC/GtE3M,OAAOC,eAAe2M,EAAS,aAAc,CAAEzM,OAAO,wBCAtDH,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAoB2M,eAAA,EAEpB,SAAWA,GACPA,EAAUC,SAAYzG,GAA+B,iBAAZA,EAAuB,CAAEA,WAAYA,GAAW,GACzFwG,EAAU7J,SAAYqD,GAA+B,iBAAZA,EAAuBA,EAAUA,aAAyC,EAASA,EAAQA,OACvI,CAHD,CAGenG,EAAQ2M,YAAc3M,EAAA2M,UAAoB,CAAA,gBCNzD7M,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAA6B6M,mBAAA7M,EAAAsE,KAAetE,UAAkBA,EAAiB0D,OAAA1D,EAAAyC,MAAgBzC,MAAcA,EAAiB8M,OAAA9M,EAAA+M,sBAAgC/M,EAAegN,KAAAhN,EAAAiN,UAAoBjN,EAAiBkN,OAAAlN,EAAAkJ,OAAiBlJ,cAAsBA,EAAqBmN,WAAAnN,EAAAoN,MAAgBpN,EAAiBqN,OAAArN,EAAAsN,SAAmBtN,EAAqBuN,WAAAvN,EAAAwN,YAAsBxN,cAAsBA,EAAyByN,eAAAzN,EAAA0N,WAAqB1N,EAAqB2N,WAAA3N,EAAA4N,cAAwB5N,EAAkB6N,QAAA7N,EAAA8N,WAAqB9N,UAAkBA,EAAsB+N,YAAA/N,EAAAgO,OAAiBhO,EAAiBiO,OAAAjO,EAAAkO,UAAoBlO,EAAmBmO,SAAAnO,EAAAoO,gBAA0BpO,wBAAgCA,EAAmBqO,SAAArO,EAAAsO,UAAoBtO,EAAmBuO,SAAAvO,EAAAwO,QAAkBxO,EAAmByO,SAAAzO,EAAA0O,WAAqB1O,SAAiBA,EAAkB2O,QAAA3O,EAAA4O,aAAuB5O,EAAoB6O,UAAA7O,EAAA8O,QAAkB9O,EAAqB+O,WAAA/O,EAAAgP,UAAoBhP,YAAoBA,EAAoBiP,UAAAjP,EAAAkP,aAAkB,EACv+BlP,EAAAmP,MAAgBnP,EAAeoP,KAAApP,EAAAuE,QAAkBvE,EAAgBqP,MAAArP,EAAAmD,UAAoBnD,QAAgBA,EAAsBsP,YAAAtP,EAAA2D,OAAiB3D,EAAiBoD,OAAApD,EAAAuP,aAAuBvP,MAAcA,EAAiBwP,OAAAxP,EAAAiE,QAAkBjE,EAAqByP,WAAAzP,EAAA0P,SAAmB1P,UAAkBA,EAAmB2P,SAAA3P,EAAA4P,QAAkB5P,EAAmB6P,SAAA7P,EAAA0B,OAAiB1B,SAAiBA,EAAmB8P,SAAA9P,EAAA8D,KAAe9D,EAAgB+P,MAAA/P,EAAAgQ,WAAqBhQ,MAAcA,EAAcuB,IAAAvB,EAAAiQ,QAAkBjQ,EAAekQ,KAAAlQ,EAAAmQ,aAAuBnQ,aAAqBA,EAAmByD,SAAAzD,EAAAoQ,KAAepQ,EAAiBqQ,YAAA,EAC5lB,MAAM1F,EAAW/F,EACX0L,EAAchJ,EACdiJ,EAAcC,EACd7L,EAAS8L,EACTjM,EAAakM,EACnB,MAAMC,EACFzL,YAAY0L,EAAQ3Q,EAAO2G,EAAMjF,GAC7B0D,KAAKwL,YAAc,GACnBxL,KAAKuL,OAASA,EACdvL,KAAKnC,KAAOjD,EACZoF,KAAKyL,MAAQlK,EACbvB,KAAK0L,KAAOpP,CACf,CACGiF,WASA,OARKvB,KAAKwL,YAAYhK,SACdxB,KAAK0L,gBAAgBnN,MACrByB,KAAKwL,YAAY9O,QAAQsD,KAAKyL,SAAUzL,KAAK0L,MAG7C1L,KAAKwL,YAAY9O,QAAQsD,KAAKyL,MAAOzL,KAAK0L,OAG3C1L,KAAKwL,WACf,EAEL,MAAMG,EAAe,CAAC1F,EAAK2F,KACvB,IAAI,EAAIV,EAAYtG,SAASgH,GACzB,MAAO,CAAEC,SAAS,EAAMhO,KAAM+N,EAAOhR,OAGrC,IAAKqL,EAAIC,OAAOpG,OAAO0B,OACnB,MAAM,IAAIlG,MAAM,6CAEpB,MAAO,CACHuQ,SAAS,EACL3K,YACA,GAAIlB,KAAK8L,OACL,OAAO9L,KAAK8L,OAChB,MAAM5K,EAAQ,IAAI/B,EAAWC,SAAS6G,EAAIC,OAAOpG,QAEjD,OADAE,KAAK8L,OAAS5K,EACPlB,KAAK8L,MACf,EAER,EAEL,SAASC,EAAoBxG,GACzB,IAAKA,EACD,MAAO,GACX,MAAMyG,SAAEA,EAAQC,mBAAEA,EAAkBC,eAAEA,EAAcC,YAAEA,GAAgB5G,EACtE,GAAIyG,IAAaC,GAAsBC,GACnC,MAAM,IAAI5Q,MAAM,6FAEpB,GAAI0Q,EACA,MAAO,CAAEA,SAAUA,EAAUG,eASjC,MAAO,CAAEH,SARS,CAACI,EAAKnG,IACH,iBAAbmG,EAAIjL,KACG,CAAEL,QAASmF,EAAI/B,mBACF,IAAb+B,EAAIpI,KACJ,CAAEiD,QAASoL,QAAuDA,EAAiBjG,EAAI/B,cAE3F,CAAEpD,QAASmL,QAA+DA,EAAqBhG,EAAI/B,cAEhFiI,cACjC,CACD,MAAMtC,EACFhK,YAAYwM,GACRrM,KAAKsM,IAAMtM,KAAKuM,eAChBvM,KAAKwM,KAAOH,EACZrM,KAAKyM,MAAQzM,KAAKyM,MAAMC,KAAK1M,MAC7BA,KAAK2M,UAAY3M,KAAK2M,UAAUD,KAAK1M,MACrCA,KAAK4M,WAAa5M,KAAK4M,WAAWF,KAAK1M,MACvCA,KAAKuM,eAAiBvM,KAAKuM,eAAeG,KAAK1M,MAC/CA,KAAKsM,IAAMtM,KAAKsM,IAAII,KAAK1M,MACzBA,KAAK6M,OAAS7M,KAAK6M,OAAOH,KAAK1M,MAC/BA,KAAK8M,WAAa9M,KAAK8M,WAAWJ,KAAK1M,MACvCA,KAAK+M,YAAc/M,KAAK+M,YAAYL,KAAK1M,MACzCA,KAAKsK,SAAWtK,KAAKsK,SAASoC,KAAK1M,MACnCA,KAAKyK,SAAWzK,KAAKyK,SAASiC,KAAK1M,MACnCA,KAAKgN,QAAUhN,KAAKgN,QAAQN,KAAK1M,MACjCA,KAAK5C,MAAQ4C,KAAK5C,MAAMsP,KAAK1M,MAC7BA,KAAKpB,QAAUoB,KAAKpB,QAAQ8N,KAAK1M,MACjCA,KAAKiN,GAAKjN,KAAKiN,GAAGP,KAAK1M,MACvBA,KAAKkN,IAAMlN,KAAKkN,IAAIR,KAAK1M,MACzBA,KAAKmN,UAAYnN,KAAKmN,UAAUT,KAAK1M,MACrCA,KAAKoN,MAAQpN,KAAKoN,MAAMV,KAAK1M,MAC7BA,KAAKkC,QAAUlC,KAAKkC,QAAQwK,KAAK1M,MACjCA,KAAKrB,MAAQqB,KAAKrB,MAAM+N,KAAK1M,MAC7BA,KAAKqN,SAAWrN,KAAKqN,SAASX,KAAK1M,MACnCA,KAAKsN,KAAOtN,KAAKsN,KAAKZ,KAAK1M,MAC3BA,KAAKuN,WAAavN,KAAKuN,WAAWb,KAAK1M,MACvCA,KAAKwN,WAAaxN,KAAKwN,WAAWd,KAAK1M,KAC1C,CACGmM,kBACA,OAAOnM,KAAKwM,KAAKL,WACpB,CACDsB,SAASC,GACL,OAAO,EAAIpO,EAAOzE,eAAe6S,EAAM7P,KAC1C,CACD8P,gBAAgBD,EAAOzH,GACnB,OAAQA,GAAO,CACXC,OAAQwH,EAAMnC,OAAOrF,OACrBrI,KAAM6P,EAAM7P,KACZ+P,YAAY,EAAItO,EAAOzE,eAAe6S,EAAM7P,MAC5CuI,eAAgBpG,KAAKwM,KAAKR,SAC1BzK,KAAMmM,EAAMnM,KACZgK,OAAQmC,EAAMnC,OAErB,CACDsC,oBAAoBH,GAChB,MAAO,CACHjH,OAAQ,IAAIyE,EAAYhG,YACxBe,IAAK,CACDC,OAAQwH,EAAMnC,OAAOrF,OACrBrI,KAAM6P,EAAM7P,KACZ+P,YAAY,EAAItO,EAAOzE,eAAe6S,EAAM7P,MAC5CuI,eAAgBpG,KAAKwM,KAAKR,SAC1BzK,KAAMmM,EAAMnM,KACZgK,OAAQmC,EAAMnC,QAGzB,CACDuC,WAAWJ,GACP,MAAM9B,EAAS5L,KAAK+N,OAAOL,GAC3B,IAAI,EAAIxC,EAAYvG,SAASiH,GACzB,MAAM,IAAItQ,MAAM,0CAEpB,OAAOsQ,CACV,CACDoC,YAAYN,GACR,MAAM9B,EAAS5L,KAAK+N,OAAOL,GAC3B,OAAOtG,QAAQ6G,QAAQrC,EAC1B,CACDa,MAAM5O,EAAM0H,GACR,MAAMqG,EAAS5L,KAAK2M,UAAU9O,EAAM0H,GACpC,GAAIqG,EAAOC,QACP,OAAOD,EAAO/N,KAClB,MAAM+N,EAAO1K,KAChB,CACDyL,UAAU9O,EAAM0H,GACZ,IAAI2I,EACJ,MAAMjI,EAAM,CACRC,OAAQ,CACJpG,OAAQ,GACRqO,MAA+E,QAAvED,EAAK3I,aAAuC,EAASA,EAAO4I,aAA0B,IAAPD,GAAgBA,EACvG/H,mBAAoBZ,aAAuC,EAASA,EAAOyG,UAE/EzK,MAAOgE,aAAuC,EAASA,EAAOhE,OAAS,GACvE6E,eAAgBpG,KAAKwM,KAAKR,SAC1BT,OAAQ,KACR1N,OACA+P,YAAY,EAAItO,EAAOzE,eAAegD,IAEpC+N,EAAS5L,KAAK8N,WAAW,CAAEjQ,OAAM0D,KAAM0E,EAAI1E,KAAMgK,OAAQtF,IAC/D,OAAO0F,EAAa1F,EAAK2F,EAC5B,CACDuC,iBAAiBtQ,EAAM0H,GACnB,MAAMqG,QAAe5L,KAAKuM,eAAe1O,EAAM0H,GAC/C,GAAIqG,EAAOC,QACP,OAAOD,EAAO/N,KAClB,MAAM+N,EAAO1K,KAChB,CACDiN,qBAAqBtQ,EAAM0H,GACvB,MAAMU,EAAM,CACRC,OAAQ,CACJpG,OAAQ,GACRqG,mBAAoBZ,aAAuC,EAASA,EAAOyG,SAC3EmC,OAAO,GAEX5M,MAAOgE,aAAuC,EAASA,EAAOhE,OAAS,GACvE6E,eAAgBpG,KAAKwM,KAAKR,SAC1BT,OAAQ,KACR1N,OACA+P,YAAY,EAAItO,EAAOzE,eAAegD,IAEpCuQ,EAAmBpO,KAAK+N,OAAO,CAAElQ,OAAM0D,KAAM0E,EAAI1E,KAAMgK,OAAQtF,IAC/D2F,SAAgB,EAAIV,EAAYvG,SAASyJ,GACzCA,EACAhH,QAAQ6G,QAAQG,IACtB,OAAOzC,EAAa1F,EAAK2F,EAC5B,CACDiB,OAAOwB,EAAOvN,GACV,MAAMwN,EAAsBrT,GACD,iBAAZ6F,QAA2C,IAAZA,EAC/B,CAAEA,WAEe,mBAAZA,EACLA,EAAQ7F,GAGR6F,EAGf,OAAOd,KAAKuO,aAAY,CAACtT,EAAKgL,KAC1B,MAAM2F,EAASyC,EAAMpT,GACfuT,EAAW,IAAMvI,EAAIhG,SAAS,CAChCkB,KAAMhC,EAAWM,aAAaoE,UAC3ByK,EAAmBrT,KAE1B,MAAuB,oBAAZmM,SAA2BwE,aAAkBxE,QAC7CwE,EAAOlN,MAAMb,KACXA,IACD2Q,KACO,OAOd5C,IACD4C,KACO,EAIV,GAER,CACD1B,WAAWuB,EAAOI,GACd,OAAOzO,KAAKuO,aAAY,CAACtT,EAAKgL,MACrBoI,EAAMpT,KACPgL,EAAIhG,SAAmC,mBAAnBwO,EACdA,EAAexT,EAAKgL,GACpBwI,IACC,IAMlB,CACDF,YAAYzB,GACR,OAAO,IAAIzE,GAAW,CAClBqG,OAAQ1O,KACR2O,SAAUjH,GAAsBW,WAChC2C,OAAQ,CAAEzH,KAAM,aAAcuJ,eAErC,CACDC,YAAYD,GACR,OAAO9M,KAAKuO,YAAYzB,EAC3B,CACDxC,WACI,OAAOsE,GAAY7M,OAAO/B,KAAMA,KAAKwM,KACxC,CACD/B,WACI,OAAOtC,GAAYpG,OAAO/B,KAAMA,KAAKwM,KACxC,CACDQ,UACI,OAAOhN,KAAKyK,WAAWH,UAC1B,CACDlN,QACI,OAAO8L,EAASnH,OAAO/B,KAAMA,KAAKwM,KACrC,CACD5N,UACI,OAAO0J,GAAWvG,OAAO/B,KAAMA,KAAKwM,KACvC,CACDS,GAAG4B,GACC,OAAO7F,EAASjH,OAAO,CAAC/B,KAAM6O,GAAS7O,KAAKwM,KAC/C,CACDU,IAAI4B,GACA,OAAO/F,EAAgBhH,OAAO/B,KAAM8O,EAAU9O,KAAKwM,KACtD,CACDW,UAAUA,GACN,OAAO,IAAI9E,GAAW,IACf0D,EAAoB/L,KAAKwM,MAC5BkC,OAAQ1O,KACR2O,SAAUjH,GAAsBW,WAChC2C,OAAQ,CAAEzH,KAAM,YAAa4J,cAEpC,CACDjL,QAAQmK,GACJ,MAAM0C,EAAkC,mBAAR1C,EAAqBA,EAAM,IAAMA,EACjE,OAAO,IAAInE,GAAW,IACf6D,EAAoB/L,KAAKwM,MAC5BwC,UAAWhP,KACXiP,aAAcF,EACdJ,SAAUjH,GAAsBQ,YAEvC,CACDkF,QACI,OAAO,IAAItF,GAAW,CAClB6G,SAAUjH,GAAsBI,WAChCvE,KAAMvD,QACH+L,EAAoB/L,KAAKwM,OAEnC,CACD7N,MAAM0N,GACF,MAAM6C,EAAgC,mBAAR7C,EAAqBA,EAAM,IAAMA,EAC/D,OAAO,IAAIpE,GAAS,IACb8D,EAAoB/L,KAAKwM,MAC5BwC,UAAWhP,KACXmP,WAAYD,EACZP,SAAUjH,GAAsBO,UAEvC,CACDoF,SAASlB,GAEL,OAAO,IAAIiD,EADEpP,KAAKH,aACF,IACTG,KAAKwM,KACRL,eAEP,CACDmB,KAAK+B,GACD,OAAOC,GAAYvN,OAAO/B,KAAMqP,EACnC,CACD7B,aACI,OAAOxN,KAAK2M,eAAU7O,GAAW+N,OACpC,CACD0B,aACI,OAAOvN,KAAK2M,UAAU,MAAMd,OAC/B,EAELlR,EAAAkP,QAAkBA,EAClBlP,EAAAkN,OAAiBgC,EACjBlP,EAAAiN,UAAoBiC,EACpB,MAAM0F,EAAY,iBACZC,EAAa,mBACbC,EAAY,yBACZC,EAAY,8GACZC,EAAa,unBACbC,EAAa,sDACbC,EAAY,gHACZC,EAAY,+XA2BlB,SAASC,EAAUC,EAAIC,GACnB,QAAiB,OAAZA,GAAqBA,IAAYJ,EAAUK,KAAKF,OAGpC,OAAZC,GAAqBA,IAAYH,EAAUI,KAAKF,GAIxD,CACD,MAAMpG,UAAkBC,EACpBhK,cACIE,SAASoQ,WACTnQ,KAAKoQ,OAAS,CAACC,EAAOpN,EAAYnC,IAAYd,KAAK8M,YAAYjP,GAASwS,EAAMH,KAAKrS,IAAO,CACtFoF,aACA9B,KAAMhC,EAAWM,aAAauD,kBAC3BiI,EAAY3D,UAAUC,SAASzG,KAEtCd,KAAKsQ,SAAYxP,GAAYd,KAAKuQ,IAAI,EAAGtF,EAAY3D,UAAUC,SAASzG,IACxEd,KAAKwQ,KAAO,IAAM,IAAI5G,EAAU,IACzB5J,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQ,CAAEC,KAAM,WAE1C1Q,KAAK2Q,YAAc,IAAM,IAAI/G,EAAU,IAChC5J,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQ,CAAEC,KAAM,kBAE1C1Q,KAAK4Q,YAAc,IAAM,IAAIhH,EAAU,IAChC5J,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQ,CAAEC,KAAM,iBAE7C,CACD3C,OAAOL,GACC1N,KAAKwM,KAAK/E,SACViG,EAAM7P,KAAOgT,OAAOnD,EAAM7P,OAG9B,GADmBmC,KAAKyN,SAASC,KACdpO,EAAOxE,cAAciD,OAAQ,CAC5C,MAAMkI,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAciD,OAC/BsE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,MAAMwB,EAAS,IAAIyE,EAAYhG,YAC/B,IAAIe,EACJ,IAAK,MAAMoI,KAASrO,KAAKwM,KAAKiE,OAC1B,GAAmB,QAAfpC,EAAMqC,KACFhD,EAAM7P,KAAK2D,OAAS6M,EAAMzT,QAC1BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS2K,EAAMzT,MACf2I,KAAM,SACNE,WAAW,EACXD,OAAO,EACP1C,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,QAAf+H,EAAMqC,KACPhD,EAAM7P,KAAK2D,OAAS6M,EAAMzT,QAC1BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAASyK,EAAMzT,MACf2I,KAAM,SACNE,WAAW,EACXD,OAAO,EACP1C,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,WAAf+H,EAAMqC,KAAmB,CAC9B,MAAMI,EAASpD,EAAM7P,KAAK2D,OAAS6M,EAAMzT,MACnCmW,EAAWrD,EAAM7P,KAAK2D,OAAS6M,EAAMzT,OACvCkW,GAAUC,KACV9K,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,GAC9B6K,GACA,EAAI5F,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAASyK,EAAMzT,MACf2I,KAAM,SACNE,WAAW,EACXD,OAAO,EACP1C,QAASuN,EAAMvN,UAGdiQ,IACL,EAAI7F,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS2K,EAAMzT,MACf2I,KAAM,SACNE,WAAW,EACXD,OAAO,EACP1C,QAASuN,EAAMvN,UAGvB2F,EAAOH,QAEd,MACI,GAAmB,UAAf+H,EAAMqC,KACNf,EAAWO,KAAKxC,EAAM7P,QACvBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,QACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,UAAf+H,EAAMqC,KACNd,EAAWM,KAAKxC,EAAM7P,QACvBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,QACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,SAAf+H,EAAMqC,KACNhB,EAAUQ,KAAKxC,EAAM7P,QACtBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,OACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,SAAf+H,EAAMqC,KACNnB,EAAUW,KAAKxC,EAAM7P,QACtBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,OACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,UAAf+H,EAAMqC,KACNlB,EAAWU,KAAKxC,EAAM7P,QACvBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,QACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,SAAf+H,EAAMqC,KACNjB,EAAUS,KAAKxC,EAAM7P,QACtBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,OACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,QAAf+H,EAAMqC,KACX,IACI,IAAIM,IAAItD,EAAM7P,KACjB,CACD,MAAOqQ,GACHjI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,MACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,OACV,MAEA,GAAmB,UAAf+H,EAAMqC,KAAkB,CAC7BrC,EAAMgC,MAAMY,UAAY,EACL5C,EAAMgC,MAAMH,KAAKxC,EAAM7P,QAEtCoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,QACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,MACI,GAAmB,SAAf+H,EAAMqC,KACXhD,EAAM7P,KAAO6P,EAAM7P,KAAK2S,YAEvB,GAAmB,aAAfnC,EAAMqC,KACNhD,EAAM7P,KAAKqF,SAASmL,EAAMzT,MAAOyT,EAAMlL,YACxC8C,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAauD,eAC9BC,WAAY,CAAEC,SAAUmL,EAAMzT,MAAOuI,SAAUkL,EAAMlL,UACrDrC,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,gBAAf+H,EAAMqC,KACXhD,EAAM7P,KAAO6P,EAAM7P,KAAK8S,mBAEvB,GAAmB,gBAAftC,EAAMqC,KACXhD,EAAM7P,KAAO6P,EAAM7P,KAAK+S,mBAEvB,GAAmB,eAAfvC,EAAMqC,KACNhD,EAAM7P,KAAKuF,WAAWiL,EAAMzT,SAC7BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAauD,eAC9BC,WAAY,CAAEG,WAAYiL,EAAMzT,OAChCkG,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,aAAf+H,EAAMqC,KACNhD,EAAM7P,KAAKwF,SAASgL,EAAMzT,SAC3BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAauD,eAC9BC,WAAY,CAAEI,SAAUgL,EAAMzT,OAC9BkG,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,aAAf+H,EAAMqC,KAAqB,GAzQzBQ,EA0QqB7C,GAzQ/B8C,UACDD,EAAKE,OACE,IAAIC,OAAO,oDAAoDH,EAAKC,0CAGpE,IAAIE,OAAO,oDAAoDH,EAAKC,gBAGvD,IAAnBD,EAAKC,UACND,EAAKE,OACE,IAAIC,OAAO,0EAGX,IAAIA,OAAO,gDAIlBH,EAAKE,OACE,IAAIC,OAAO,oFAGX,IAAIA,OAAO,2DAqPHnB,KAAKxC,EAAM7P,QAClBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAauD,eAC9BC,WAAY,WACZnC,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,KACuB,OAAf+H,EAAMqC,KACNX,EAAUrC,EAAM7P,KAAMwQ,EAAM4B,WAC7BhK,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpChD,WAAY,KACZ9B,KAAMhC,EAAWM,aAAauD,eAC9BlC,QAASuN,EAAMvN,UAEnB2F,EAAOH,SAIXhH,EAAO9E,KAAKY,YAAYiT,GAjSlB,IAAC6C,EAoSf,MAAO,CAAEzK,OAAQA,EAAO7L,MAAOA,MAAO8S,EAAM7P,KAC/C,CACDyT,UAAUjD,GACN,OAAO,IAAIzE,EAAU,IACd5J,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQpC,IAErC,CACDkD,MAAMzQ,GACF,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,WAAYzF,EAAY3D,UAAUC,SAASzG,IAC5E,CACD0Q,IAAI1Q,GACA,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,SAAUzF,EAAY3D,UAAUC,SAASzG,IAC1E,CACD2Q,MAAM3Q,GACF,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,WAAYzF,EAAY3D,UAAUC,SAASzG,IAC5E,CACD4Q,KAAK5Q,GACD,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,UAAWzF,EAAY3D,UAAUC,SAASzG,IAC3E,CACD6Q,KAAK7Q,GACD,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,UAAWzF,EAAY3D,UAAUC,SAASzG,IAC3E,CACD8Q,MAAM9Q,GACF,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,WAAYzF,EAAY3D,UAAUC,SAASzG,IAC5E,CACD+Q,KAAK/Q,GACD,OAAOd,KAAKsR,UAAU,CAAEZ,KAAM,UAAWzF,EAAY3D,UAAUC,SAASzG,IAC3E,CACDkP,GAAGrN,GACC,OAAO3C,KAAKsR,UAAU,CAAEZ,KAAM,QAASzF,EAAY3D,UAAUC,SAAS5E,IACzE,CACDmP,SAASnP,GACL,IAAIuL,EACJ,MAAuB,iBAAZvL,EACA3C,KAAKsR,UAAU,CAClBZ,KAAM,WACNS,UAAW,KACXC,QAAQ,EACRtQ,QAAS6B,IAGV3C,KAAKsR,UAAU,CAClBZ,KAAM,WACNS,eAA4F,KAAzExO,aAAyC,EAASA,EAAQwO,WAA6B,KAAOxO,aAAyC,EAASA,EAAQwO,UAC3KC,OAAoF,QAA3ElD,EAAKvL,aAAyC,EAASA,EAAQyO,cAA2B,IAAPlD,GAAgBA,KACzGjD,EAAY3D,UAAUC,SAAS5E,aAAyC,EAASA,EAAQ7B,UAEnG,CACDuP,MAAMA,EAAOvP,GACT,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,QACNL,MAAOA,KACJpF,EAAY3D,UAAUC,SAASzG,IAEzC,CACDoC,SAAStI,EAAO+H,GACZ,OAAO3C,KAAKsR,UAAU,CAClBZ,KAAM,WACN9V,MAAOA,EACPuI,SAAUR,aAAyC,EAASA,EAAQQ,YACjE8H,EAAY3D,UAAUC,SAAS5E,aAAyC,EAASA,EAAQ7B,UAEnG,CACDsC,WAAWxI,EAAOkG,GACd,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,aACN9V,MAAOA,KACJqQ,EAAY3D,UAAUC,SAASzG,IAEzC,CACDuC,SAASzI,EAAOkG,GACZ,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,WACN9V,MAAOA,KACJqQ,EAAY3D,UAAUC,SAASzG,IAEzC,CACDyP,IAAIwB,EAAWjR,GACX,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAOmX,KACJ9G,EAAY3D,UAAUC,SAASzG,IAEzC,CACDkR,IAAIC,EAAWnR,GACX,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAOqX,KACJhH,EAAY3D,UAAUC,SAASzG,IAEzC,CACDU,OAAO0Q,EAAKpR,GACR,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,SACN9V,MAAOsX,KACJjH,EAAY3D,UAAUC,SAASzG,IAEzC,CACGqR,iBACA,QAASnS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,aAAZA,EAAG1B,MAC7C,CACG2B,cACA,QAASrS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,UAAZA,EAAG1B,MAC7C,CACG4B,YACA,QAAStS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,QAAZA,EAAG1B,MAC7C,CACG6B,cACA,QAASvS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,UAAZA,EAAG1B,MAC7C,CACG8B,aACA,QAASxS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,SAAZA,EAAG1B,MAC7C,CACG+B,aACA,QAASzS,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,SAAZA,EAAG1B,MAC7C,CACGgC,cACA,QAAS1S,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,UAAZA,EAAG1B,MAC7C,CACGiC,aACA,QAAS3S,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,SAAZA,EAAG1B,MAC7C,CACGkC,WACA,QAAS5S,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,OAAZA,EAAG1B,MAC7C,CACGqB,gBACA,IAAIxB,EAAM,KACV,IAAK,MAAM6B,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARH,GAAgB6B,EAAGxX,MAAQ2V,KAC3BA,EAAM6B,EAAGxX,OAGrB,OAAO2V,CACV,CACG0B,gBACA,IAAID,EAAM,KACV,IAAK,MAAMI,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARsB,GAAgBI,EAAGxX,MAAQoX,KAC3BA,EAAMI,EAAGxX,OAGrB,OAAOoX,CACV,EAYL,SAASa,EAAmB5X,EAAK6X,GAC7B,MAAMC,GAAe9X,EAAIwC,WAAWuV,MAAM,KAAK,IAAM,IAAIxR,OACnDyR,GAAgBH,EAAKrV,WAAWuV,MAAM,KAAK,IAAM,IAAIxR,OACrD0R,EAAWH,EAAcE,EAAeF,EAAcE,EAG5D,OAFeE,SAASlY,EAAImY,QAAQF,GAAUtT,QAAQ,IAAK,KAC3CuT,SAASL,EAAKM,QAAQF,GAAUtT,QAAQ,IAAK,KACjC3C,KAAKoW,IAAI,GAAIH,EAC5C,CAjBDvY,EAAAiP,UAAoBA,EACpBA,EAAU7H,OAAUwD,IAChB,IAAI2I,EACJ,OAAO,IAAItE,EAAU,CACjB6G,OAAQ,GACR9B,SAAUjH,GAAsBkC,UAChCnC,OAAiF,QAAxEyG,EAAK3I,aAAuC,EAASA,EAAOkC,cAA2B,IAAPyG,GAAgBA,KACtGnC,EAAoBxG,IACzB,EAUN,MAAM+N,UAAkBzJ,EACpBhK,cACIE,SAASoQ,WACTnQ,KAAKuQ,IAAMvQ,KAAKuT,IAChBvT,KAAKgS,IAAMhS,KAAKwT,IAChBxT,KAAK8S,KAAO9S,KAAKgE,UACpB,CACD+J,OAAOL,GACC1N,KAAKwM,KAAK/E,SACViG,EAAM7P,KAAOd,OAAO2Q,EAAM7P,OAG9B,GADmBmC,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcoD,OAAQ,CAC5C,MAAM+H,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcoD,OAC/BmE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,IAAIgB,EACJ,MAAMQ,EAAS,IAAIyE,EAAYhG,YAC/B,IAAK,MAAMmJ,KAASrO,KAAKwM,KAAKiE,OAC1B,GAAmB,QAAfpC,EAAMqC,KACDpR,EAAO9E,KAAKsC,UAAU4Q,EAAM7P,QAC7BoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAU,UACVD,SAAU,QACVvB,QAASuN,EAAMvN,UAEnB2F,EAAOH,cAGV,GAAmB,QAAf+H,EAAMqC,KAAgB,EACVrC,EAAM5K,UACjBiK,EAAM7P,KAAOwQ,EAAMzT,MACnB8S,EAAM7P,MAAQwQ,EAAMzT,SAEtBqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS2K,EAAMzT,MACf2I,KAAM,SACNE,UAAW4K,EAAM5K,UACjBD,OAAO,EACP1C,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,MACI,GAAmB,QAAf+H,EAAMqC,KAAgB,EACZrC,EAAM5K,UACfiK,EAAM7P,KAAOwQ,EAAMzT,MACnB8S,EAAM7P,MAAQwQ,EAAMzT,SAEtBqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAASyK,EAAMzT,MACf2I,KAAM,SACNE,UAAW4K,EAAM5K,UACjBD,OAAO,EACP1C,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,KACuB,eAAf+H,EAAMqC,KACyC,IAAhDmC,EAAmBnF,EAAM7P,KAAMwQ,EAAMzT,SACrCqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAasE,gBAC9BC,WAAYqK,EAAMzT,MAClBkG,QAASuN,EAAMvN,UAEnB2F,EAAOH,SAGS,WAAf+H,EAAMqC,KACN3T,OAAOC,SAAS0Q,EAAM7P,QACvBoI,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAawE,WAC9BnD,QAASuN,EAAMvN,UAEnB2F,EAAOH,SAIXhH,EAAO9E,KAAKY,YAAYiT,GAGhC,MAAO,CAAE5H,OAAQA,EAAO7L,MAAOA,MAAO8S,EAAM7P,KAC/C,CACD0V,IAAI3Y,EAAOkG,GACP,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAMqQ,EAAY3D,UAAU7J,SAASqD,GAC3E,CACD4S,GAAG9Y,EAAOkG,GACN,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAOqQ,EAAY3D,UAAU7J,SAASqD,GAC5E,CACD0S,IAAI5Y,EAAOkG,GACP,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAMqQ,EAAY3D,UAAU7J,SAASqD,GAC3E,CACD6S,GAAG/Y,EAAOkG,GACN,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAOqQ,EAAY3D,UAAU7J,SAASqD,GAC5E,CACD2S,SAAS/C,EAAM9V,EAAO6I,EAAW3C,GAC7B,OAAO,IAAIwS,EAAU,IACdtT,KAAKwM,KACRiE,OAAQ,IACDzQ,KAAKwM,KAAKiE,OACb,CACIC,OACA9V,QACA6I,YACA3C,QAASmK,EAAY3D,UAAU7J,SAASqD,MAIvD,CACDwQ,UAAUjD,GACN,OAAO,IAAIiF,EAAU,IACdtT,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQpC,IAErC,CACDuF,IAAI9S,GACA,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN5P,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACD+S,SAAS/S,GACL,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO,EACP6I,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDgT,SAAShT,GACL,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO,EACP6I,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDiT,YAAYjT,GACR,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO,EACP6I,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDkT,YAAYlT,GACR,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO,EACP6I,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDkD,WAAWpJ,EAAOkG,GACd,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,aACN9V,MAAOA,EACPkG,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDmT,OAAOnT,GACH,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,SACN5P,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDoT,KAAKpT,GACD,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACNjN,WAAW,EACX7I,MAAOmC,OAAOoX,iBACdrT,QAASmK,EAAY3D,UAAU7J,SAASqD,KACzCwQ,UAAU,CACTZ,KAAM,MACNjN,WAAW,EACX7I,MAAOmC,OAAOqX,iBACdtT,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACGuT,eACA,IAAI9D,EAAM,KACV,IAAK,MAAM6B,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARH,GAAgB6B,EAAGxX,MAAQ2V,KAC3BA,EAAM6B,EAAGxX,OAGrB,OAAO2V,CACV,CACG+D,eACA,IAAItC,EAAM,KACV,IAAK,MAAMI,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARsB,GAAgBI,EAAGxX,MAAQoX,KAC3BA,EAAMI,EAAGxX,OAGrB,OAAOoX,CACV,CACGuC,YACA,QAASvU,KAAKwM,KAAKiE,OAAO9T,MAAMyV,GAAmB,QAAZA,EAAG1B,MACzB,eAAZ0B,EAAG1B,MAAyBpR,EAAO9E,KAAKsC,UAAUsV,EAAGxX,QAC7D,CACGoC,eACA,IAAIgV,EAAM,KAAMzB,EAAM,KACtB,IAAK,MAAM6B,KAAMpS,KAAKwM,KAAKiE,OAAQ,CAC/B,GAAgB,WAAZ2B,EAAG1B,MACS,QAAZ0B,EAAG1B,MACS,eAAZ0B,EAAG1B,KACH,OAAO,EAEU,QAAZ0B,EAAG1B,MACI,OAARH,GAAgB6B,EAAGxX,MAAQ2V,KAC3BA,EAAM6B,EAAGxX,OAEI,QAAZwX,EAAG1B,OACI,OAARsB,GAAgBI,EAAGxX,MAAQoX,KAC3BA,EAAMI,EAAGxX,MAEpB,CACD,OAAOmC,OAAOC,SAASuT,IAAQxT,OAAOC,SAASgV,EAClD,EAELrX,EAAA2Y,UAAoBA,EACpBA,EAAUvR,OAAUwD,GACT,IAAI+N,EAAU,CACjB7C,OAAQ,GACR9B,SAAUjH,GAAsB4L,UAChC7L,QAASlC,aAAuC,EAASA,EAAOkC,UAAW,KACxEsE,EAAoBxG,KAG/B,MAAMoE,UAAkBE,EACpBhK,cACIE,SAASoQ,WACTnQ,KAAKuQ,IAAMvQ,KAAKuT,IAChBvT,KAAKgS,IAAMhS,KAAKwT,GACnB,CACDzF,OAAOL,GACC1N,KAAKwM,KAAK/E,SACViG,EAAM7P,KAAO2W,OAAO9G,EAAM7P,OAG9B,GADmBmC,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcuD,OAAQ,CAC5C,MAAM4H,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcuD,OAC/BgE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,IAAIgB,EACJ,MAAMQ,EAAS,IAAIyE,EAAYhG,YAC/B,IAAK,MAAMmJ,KAASrO,KAAKwM,KAAKiE,OAC1B,GAAmB,QAAfpC,EAAMqC,KAAgB,EACLrC,EAAM5K,UACjBiK,EAAM7P,KAAOwQ,EAAMzT,MACnB8S,EAAM7P,MAAQwQ,EAAMzT,SAEtBqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BC,KAAM,SACNG,QAAS2K,EAAMzT,MACf6I,UAAW4K,EAAM5K,UACjB3C,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,MACI,GAAmB,QAAf+H,EAAMqC,KAAgB,EACZrC,EAAM5K,UACfiK,EAAM7P,KAAOwQ,EAAMzT,MACnB8S,EAAM7P,MAAQwQ,EAAMzT,SAEtBqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BJ,KAAM,SACNK,QAASyK,EAAMzT,MACf6I,UAAW4K,EAAM5K,UACjB3C,QAASuN,EAAMvN,UAEnB2F,EAAOH,QAEd,KACuB,eAAf+H,EAAMqC,KACPhD,EAAM7P,KAAOwQ,EAAMzT,QAAU4Z,OAAO,KACpCvO,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAasE,gBAC9BC,WAAYqK,EAAMzT,MAClBkG,QAASuN,EAAMvN,UAEnB2F,EAAOH,SAIXhH,EAAO9E,KAAKY,YAAYiT,GAGhC,MAAO,CAAE5H,OAAQA,EAAO7L,MAAOA,MAAO8S,EAAM7P,KAC/C,CACD0V,IAAI3Y,EAAOkG,GACP,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAMqQ,EAAY3D,UAAU7J,SAASqD,GAC3E,CACD4S,GAAG9Y,EAAOkG,GACN,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAOqQ,EAAY3D,UAAU7J,SAASqD,GAC5E,CACD0S,IAAI5Y,EAAOkG,GACP,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAMqQ,EAAY3D,UAAU7J,SAASqD,GAC3E,CACD6S,GAAG/Y,EAAOkG,GACN,OAAOd,KAAKyT,SAAS,MAAO7Y,GAAO,EAAOqQ,EAAY3D,UAAU7J,SAASqD,GAC5E,CACD2S,SAAS/C,EAAM9V,EAAO6I,EAAW3C,GAC7B,OAAO,IAAI6I,EAAU,IACd3J,KAAKwM,KACRiE,OAAQ,IACDzQ,KAAKwM,KAAKiE,OACb,CACIC,OACA9V,QACA6I,YACA3C,QAASmK,EAAY3D,UAAU7J,SAASqD,MAIvD,CACDwQ,UAAUjD,GACN,OAAO,IAAI1E,EAAU,IACd3J,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQpC,IAErC,CACDwF,SAAS/S,GACL,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO4Z,OAAO,GACd/Q,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDgT,SAAShT,GACL,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO4Z,OAAO,GACd/Q,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDiT,YAAYjT,GACR,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO4Z,OAAO,GACd/Q,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDkT,YAAYlT,GACR,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO4Z,OAAO,GACd/Q,WAAW,EACX3C,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDkD,WAAWpJ,EAAOkG,GACd,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,aACN9V,QACAkG,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACGuT,eACA,IAAI9D,EAAM,KACV,IAAK,MAAM6B,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARH,GAAgB6B,EAAGxX,MAAQ2V,KAC3BA,EAAM6B,EAAGxX,OAGrB,OAAO2V,CACV,CACG+D,eACA,IAAItC,EAAM,KACV,IAAK,MAAMI,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARsB,GAAgBI,EAAGxX,MAAQoX,KAC3BA,EAAMI,EAAGxX,OAGrB,OAAOoX,CACV,EAELrX,EAAAgP,UAAoBA,EACpBA,EAAU5H,OAAUwD,IAChB,IAAI2I,EACJ,OAAO,IAAIvE,EAAU,CACjB8G,OAAQ,GACR9B,SAAUjH,GAAsBiC,UAChClC,OAAiF,QAAxEyG,EAAK3I,aAAuC,EAASA,EAAOkC,cAA2B,IAAPyG,GAAgBA,KACtGnC,EAAoBxG,IACzB,EAEN,MAAMmE,UAAmBG,EACrBkE,OAAOL,GACC1N,KAAKwM,KAAK/E,SACViG,EAAM7P,KAAO4W,QAAQ/G,EAAM7P,OAG/B,GADmBmC,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcqD,QAAS,CAC7C,MAAM8H,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcqD,QAC/BkE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAA+O,WAAqBA,EACrBA,EAAW3H,OAAUwD,GACV,IAAImE,EAAW,CAClBiF,SAAUjH,GAAsBgC,WAChCjC,QAASlC,aAAuC,EAASA,EAAOkC,UAAW,KACxEsE,EAAoBxG,KAG/B,MAAMkE,UAAgBI,EAClBkE,OAAOL,GACC1N,KAAKwM,KAAK/E,SACViG,EAAM7P,KAAO,IAAImB,KAAK0O,EAAM7P,OAGhC,GADmBmC,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcmE,KAAM,CAC1C,MAAMgH,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcmE,KAC/BoD,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,GAAIjH,MAAM0P,EAAM7P,KAAK6W,WAAY,CAC7B,MAAMzO,EAAMjG,KAAK2N,gBAAgBD,GAIjC,OAHA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAasD,eAE3BmI,EAAYjG,OACtB,CACD,MAAMwB,EAAS,IAAIyE,EAAYhG,YAC/B,IAAIe,EACJ,IAAK,MAAMoI,KAASrO,KAAKwM,KAAKiE,OACP,QAAfpC,EAAMqC,KACFhD,EAAM7P,KAAK6W,UAAYrG,EAAMzT,QAC7BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BxC,QAASuN,EAAMvN,QACf2C,WAAW,EACXD,OAAO,EACPE,QAAS2K,EAAMzT,MACf2I,KAAM,SAEVkD,EAAOH,SAGS,QAAf+H,EAAMqC,KACPhD,EAAM7P,KAAK6W,UAAYrG,EAAMzT,QAC7BqL,EAAMjG,KAAK2N,gBAAgBD,EAAOzH,IAClC,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9B7C,QAASuN,EAAMvN,QACf2C,WAAW,EACXD,OAAO,EACPI,QAASyK,EAAMzT,MACf2I,KAAM,SAEVkD,EAAOH,SAIXhH,EAAO9E,KAAKY,YAAYiT,GAGhC,MAAO,CACH5H,OAAQA,EAAO7L,MACfA,MAAO,IAAIoE,KAAK0O,EAAM7P,KAAK6W,WAElC,CACDpD,UAAUjD,GACN,OAAO,IAAI5E,EAAQ,IACZzJ,KAAKwM,KACRiE,OAAQ,IAAIzQ,KAAKwM,KAAKiE,OAAQpC,IAErC,CACDkC,IAAIoE,EAAS7T,GACT,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAO+Z,EAAQD,UACf5T,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACDkR,IAAI4C,EAAS9T,GACT,OAAOd,KAAKsR,UAAU,CAClBZ,KAAM,MACN9V,MAAOga,EAAQF,UACf5T,QAASmK,EAAY3D,UAAU7J,SAASqD,IAE/C,CACG6T,cACA,IAAIpE,EAAM,KACV,IAAK,MAAM6B,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARH,GAAgB6B,EAAGxX,MAAQ2V,KAC3BA,EAAM6B,EAAGxX,OAGrB,OAAc,MAAP2V,EAAc,IAAIvR,KAAKuR,GAAO,IACxC,CACGqE,cACA,IAAI5C,EAAM,KACV,IAAK,MAAMI,KAAMpS,KAAKwM,KAAKiE,OACP,QAAZ2B,EAAG1B,OACS,OAARsB,GAAgBI,EAAGxX,MAAQoX,KAC3BA,EAAMI,EAAGxX,OAGrB,OAAc,MAAPoX,EAAc,IAAIhT,KAAKgT,GAAO,IACxC,EAELrX,EAAA8O,QAAkBA,EAClBA,EAAQ1H,OAAUwD,GACP,IAAIkE,EAAQ,CACfgH,OAAQ,GACRhJ,QAASlC,aAAuC,EAASA,EAAOkC,UAAW,EAC3EkH,SAAUjH,GAAsB+B,WAC7BsC,EAAoBxG,KAG/B,MAAMiE,UAAkBK,EACpBkE,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcwD,OAAQ,CAC5C,MAAM2H,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcwD,OAC/B+D,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAA6O,UAAoBA,EACpBA,EAAUzH,OAAUwD,GACT,IAAIiE,EAAU,CACjBmF,SAAUjH,GAAsB8B,aAC7BuC,EAAoBxG,KAG/B,MAAMgE,UAAqBM,EACvBkE,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcgD,UAAW,CAC/C,MAAMmI,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcgD,UAC/BuE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAA4O,aAAuBA,EACvBA,EAAaxH,OAAUwD,GACZ,IAAIgE,EAAa,CACpBoF,SAAUjH,GAAsB6B,gBAC7BwC,EAAoBxG,KAG/B,MAAM+D,UAAgBO,EAClBkE,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAc2D,KAAM,CAC1C,MAAMwH,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAc2D,KAC/B4D,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAA2O,QAAkBA,EAClBA,EAAQvH,OAAUwD,GACP,IAAI+D,EAAQ,CACfqF,SAAUjH,GAAsB4B,WAC7ByC,EAAoBxG,KAG/B,MAAMsP,UAAehL,EACjBhK,cACIE,SAASoQ,WACTnQ,KAAK8U,MAAO,CACf,CACD/G,OAAOL,GACH,OAAO,EAAIxC,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAAka,OAAiBA,EACjBA,EAAO9S,OAAUwD,GACN,IAAIsP,EAAO,CACdlG,SAAUjH,GAAsBmN,UAC7B9I,EAAoBxG,KAG/B,MAAM8D,UAAmBQ,EACrBhK,cACIE,SAASoQ,WACTnQ,KAAK+U,UAAW,CACnB,CACDhH,OAAOL,GACH,OAAO,EAAIxC,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAA0O,WAAqBA,EACrBA,EAAWtH,OAAUwD,GACV,IAAI8D,EAAW,CAClBsF,SAAUjH,GAAsB2B,cAC7B0C,EAAoBxG,KAG/B,MAAM6D,UAAiBS,EACnBkE,OAAOL,GACH,MAAMzH,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAc4P,MAC/BrI,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,EAELtK,EAAAyO,SAAmBA,EACnBA,EAASrH,OAAUwD,GACR,IAAI6D,EAAS,CAChBuF,SAAUjH,GAAsB0B,YAC7B2C,EAAoBxG,KAG/B,MAAM4D,UAAgBU,EAClBkE,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcgD,UAAW,CAC/C,MAAMmI,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAciP,KAC/B1H,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,EAELlD,EAAAwO,QAAkBA,EAClBA,EAAQpH,OAAUwD,GACP,IAAI4D,EAAQ,CACfwF,SAAUjH,GAAsByB,WAC7B4C,EAAoBxG,KAG/B,MAAM2D,UAAiBW,EACnBkE,OAAOL,GACH,MAAMzH,IAAEA,EAAGQ,OAAEA,GAAWzG,KAAK6N,oBAAoBH,GAC3CrB,EAAMrM,KAAKwM,KACjB,GAAIvG,EAAI2H,aAAetO,EAAOxE,cAAcsC,MAMxC,OALA,EAAI8N,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcsC,MAC/BiF,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,GAAwB,OAApBoH,EAAI2I,YAAsB,CAC1B,MAAMlE,EAAS7K,EAAIpI,KAAK2D,OAAS6K,EAAI2I,YAAYpa,MAC3CmW,EAAW9K,EAAIpI,KAAK2D,OAAS6K,EAAI2I,YAAYpa,OAC/CkW,GAAUC,MACV,EAAI7F,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAM2P,EAAS3R,EAAWM,aAAakE,QAAUxE,EAAWM,aAAa6D,UACzEI,QAAUqN,EAAW1E,EAAI2I,YAAYpa,WAAQkD,EAC7C8F,QAAUkN,EAASzE,EAAI2I,YAAYpa,WAAQkD,EAC3CyF,KAAM,QACNE,WAAW,EACXD,OAAO,EACP1C,QAASuL,EAAI2I,YAAYlU,UAE7B2F,EAAOH,QAEd,CA2BD,GA1BsB,OAAlB+F,EAAI0F,WACA9L,EAAIpI,KAAK2D,OAAS6K,EAAI0F,UAAUnX,SAChC,EAAIsQ,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS2I,EAAI0F,UAAUnX,MACvB2I,KAAM,QACNE,WAAW,EACXD,OAAO,EACP1C,QAASuL,EAAI0F,UAAUjR,UAE3B2F,EAAOH,SAGO,OAAlB+F,EAAI4F,WACAhM,EAAIpI,KAAK2D,OAAS6K,EAAI4F,UAAUrX,SAChC,EAAIsQ,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAASyI,EAAI4F,UAAUrX,MACvB2I,KAAM,QACNE,WAAW,EACXD,OAAO,EACP1C,QAASuL,EAAI4F,UAAUnR,UAE3B2F,EAAOH,SAGXL,EAAIC,OAAOiI,MACX,OAAO/G,QAAQ6N,IAAI,IAAIhP,EAAIpI,MAAM3B,KAAI,CAACR,EAAMgG,IACjC2K,EAAI9I,KAAKyK,YAAY,IAAI1C,EAAmBrF,EAAKvK,EAAMuK,EAAI1E,KAAMG,OACxEhD,MAAMkN,GACCV,EAAYhG,YAAYgQ,WAAWzO,EAAQmF,KAG1D,MAAMA,EAAS,IAAI3F,EAAIpI,MAAM3B,KAAI,CAACR,EAAMgG,IAC7B2K,EAAI9I,KAAKuK,WAAW,IAAIxC,EAAmBrF,EAAKvK,EAAMuK,EAAI1E,KAAMG,MAE3E,OAAOwJ,EAAYhG,YAAYgQ,WAAWzO,EAAQmF,EACrD,CACGuJ,cACA,OAAOnV,KAAKwM,KAAKjJ,IACpB,CACDgN,IAAIwB,EAAWjR,GACX,OAAO,IAAIoI,EAAS,IACblJ,KAAKwM,KACRuF,UAAW,CAAEnX,MAAOmX,EAAWjR,QAASmK,EAAY3D,UAAU7J,SAASqD,KAE9E,CACDkR,IAAIC,EAAWnR,GACX,OAAO,IAAIoI,EAAS,IACblJ,KAAKwM,KACRyF,UAAW,CAAErX,MAAOqX,EAAWnR,QAASmK,EAAY3D,UAAU7J,SAASqD,KAE9E,CACDU,OAAO0Q,EAAKpR,GACR,OAAO,IAAIoI,EAAS,IACblJ,KAAKwM,KACRwI,YAAa,CAAEpa,MAAOsX,EAAKpR,QAASmK,EAAY3D,UAAU7J,SAASqD,KAE1E,CACDwP,SAASxP,GACL,OAAOd,KAAKuQ,IAAI,EAAGzP,EACtB,EAaL,SAASsU,EAAe1G,GACpB,GAAIA,aAAkBzF,EAAW,CAC7B,MAAMoM,EAAW,CAAA,EACjB,IAAK,MAAM/Y,KAAOoS,EAAO4G,MAAO,CAC5B,MAAMC,EAAc7G,EAAO4G,MAAMhZ,GACjC+Y,EAAS/Y,GAAOsS,GAAY7M,OAAOqT,EAAeG,GACrD,CACD,OAAO,IAAItM,EAAU,IACdyF,EAAOlC,KACV8I,MAAO,IAAMD,GAEpB,CACI,OAAI3G,aAAkBxF,EAChB,IAAIA,EAAS,IACbwF,EAAOlC,KACVjJ,KAAM6R,EAAe1G,EAAOyG,WAG3BzG,aAAkBE,GAChBA,GAAY7M,OAAOqT,EAAe1G,EAAO8G,WAE3C9G,aAAkBvG,GAChBA,GAAYpG,OAAOqT,EAAe1G,EAAO8G,WAE3C9G,aAAkB5F,EAChBA,EAAS/G,OAAO2M,EAAOlT,MAAMU,KAAKR,GAAS0Z,EAAe1Z,MAG1DgT,CAEd,CAzCD/T,EAAAuO,SAAmBA,EACnBA,EAASnH,OAAS,CAAC2M,EAAQnJ,IAChB,IAAI2D,EAAS,CAChB3F,KAAMmL,EACNqD,UAAW,KACXE,UAAW,KACX+C,YAAa,KACbrG,SAAUjH,GAAsBwB,YAC7B6C,EAAoBxG,KAkC/B,MAAM0D,UAAkBY,EACpBhK,cACIE,SAASoQ,WACTnQ,KAAKyV,QAAU,KACfzV,KAAK0V,UAAY1V,KAAK2V,YACtB3V,KAAK4V,QAAU5V,KAAK6V,MACvB,CACDC,aACI,GAAqB,OAAjB9V,KAAKyV,QACL,OAAOzV,KAAKyV,QAChB,MAAMH,EAAQtV,KAAKwM,KAAK8I,QAClBlZ,EAAOkD,EAAO9E,KAAKqB,WAAWyZ,GACpC,OAAQtV,KAAKyV,QAAU,CAAEH,QAAOlZ,OACnC,CACD2R,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcuB,OAAQ,CAC5C,MAAM4J,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcuB,OAC/BgG,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,MAAMwB,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,IAC3C4H,MAAEA,EAAOlZ,KAAM2Z,GAAc/V,KAAK8V,aAClCE,EAAY,GAClB,KAAMhW,KAAKwM,KAAKyJ,oBAAoB7M,GACN,UAA1BpJ,KAAKwM,KAAK0J,aACV,IAAK,MAAM5Z,KAAO2J,EAAIpI,KACbkY,EAAU7S,SAAS5G,IACpB0Z,EAAUtZ,KAAKJ,GAI3B,MAAMuK,EAAQ,GACd,IAAK,MAAMvK,KAAOyZ,EAAW,CACzB,MAAMI,EAAeb,EAAMhZ,GACrB1B,EAAQqL,EAAIpI,KAAKvB,GACvBuK,EAAMnK,KAAK,CACPJ,IAAK,CAAEmK,OAAQ,QAAS7L,MAAO0B,GAC/B1B,MAAOub,EAAapI,OAAO,IAAIzC,EAAmBrF,EAAKrL,EAAOqL,EAAI1E,KAAMjF,IACxE4K,UAAW5K,KAAO2J,EAAIpI,MAE7B,CACD,GAAImC,KAAKwM,KAAKyJ,oBAAoB7M,EAAU,CACxC,MAAM8M,EAAclW,KAAKwM,KAAK0J,YAC9B,GAAoB,gBAAhBA,EACA,IAAK,MAAM5Z,KAAO0Z,EACdnP,EAAMnK,KAAK,CACPJ,IAAK,CAAEmK,OAAQ,QAAS7L,MAAO0B,GAC/B1B,MAAO,CAAE6L,OAAQ,QAAS7L,MAAOqL,EAAIpI,KAAKvB,WAIjD,GAAoB,WAAhB4Z,EACDF,EAAUxU,OAAS,KACnB,EAAI0J,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa+C,kBAC9BpG,KAAM4Z,IAEVvP,EAAOH,cAGV,GAAoB,UAAhB4P,EAGL,MAAM,IAAI5a,MAAM,uDAEvB,KACI,CACD,MAAM2a,EAAWjW,KAAKwM,KAAKyJ,SAC3B,IAAK,MAAM3Z,KAAO0Z,EAAW,CACzB,MAAMpb,EAAQqL,EAAIpI,KAAKvB,GACvBuK,EAAMnK,KAAK,CACPJ,IAAK,CAAEmK,OAAQ,QAAS7L,MAAO0B,GAC/B1B,MAAOqb,EAASlI,OAAO,IAAIzC,EAAmBrF,EAAKrL,EAAOqL,EAAI1E,KAAMjF,IACpE4K,UAAW5K,KAAO2J,EAAIpI,MAE7B,CACJ,CACD,OAAIoI,EAAIC,OAAOiI,MACJ/G,QAAQ6G,UACVvP,MAAKyP,UACN,MAAMrH,EAAY,GAClB,IAAK,MAAMC,KAAQF,EAAO,CACtB,MAAMvK,QAAYyK,EAAKzK,IACvBwK,EAAUpK,KAAK,CACXJ,MACA1B,YAAamM,EAAKnM,MAClBsM,UAAWH,EAAKG,WAEvB,CACD,OAAOJ,CAAS,IAEfpI,MAAMoI,GACAoE,EAAYhG,YAAY8B,gBAAgBP,EAAQK,KAIpDoE,EAAYhG,YAAY8B,gBAAgBP,EAAQI,EAE9D,CACGyO,YACA,OAAOtV,KAAKwM,KAAK8I,OACpB,CACDc,OAAOtV,GAEH,OADAmK,EAAY3D,UAAUC,SACf,IAAI0B,EAAU,IACdjJ,KAAKwM,KACR0J,YAAa,iBACGpY,IAAZgD,EACE,CACEkL,SAAU,CAACnL,EAAOoF,KACd,IAAIiI,EAAImI,EAAIC,EAAIC,EAChB,MAAMrS,EAAgI,QAAhHoS,EAA0C,QAApCD,GAAMnI,EAAKlO,KAAKwM,MAAMR,gBAA6B,IAAPqK,OAAgB,EAASA,EAAG5Z,KAAKyR,EAAIrN,EAAOoF,GAAKnF,eAA4B,IAAPwV,EAAgBA,EAAKrQ,EAAI/B,aACvK,MAAmB,sBAAfrD,EAAMM,KACC,CACHL,QAAoE,QAA1DyV,EAAKtL,EAAY3D,UAAUC,SAASzG,GAASA,eAA4B,IAAPyV,EAAgBA,EAAKrS,GAElG,CACHpD,QAASoD,EACZ,GAGP,IAEb,CACDsS,QACI,OAAO,IAAIvN,EAAU,IACdjJ,KAAKwM,KACR0J,YAAa,SAEpB,CACDP,cACI,OAAO,IAAI1M,EAAU,IACdjJ,KAAKwM,KACR0J,YAAa,eAEpB,CACDL,OAAOY,GACH,OAAO,IAAIxN,EAAU,IACdjJ,KAAKwM,KACR8I,MAAO,KAAO,IACPtV,KAAKwM,KAAK8I,WACVmB,KAGd,CACDC,MAAMC,GAUF,OATe,IAAI1N,EAAU,CACzBiN,YAAaS,EAAQnK,KAAK0J,YAC1BD,SAAUU,EAAQnK,KAAKyJ,SACvBX,MAAO,KAAO,IACPtV,KAAKwM,KAAK8I,WACVqB,EAAQnK,KAAK8I,UAEpB3G,SAAUjH,GAAsBuB,WAGvC,CACD2N,OAAOta,EAAKoS,GACR,OAAO1O,KAAK4V,QAAQ,CAAEtZ,CAACA,GAAMoS,GAChC,CACDuH,SAASY,GACL,OAAO,IAAI5N,EAAU,IACdjJ,KAAKwM,KACRyJ,SAAUY,GAEjB,CACDC,KAAKC,GACD,MAAMzB,EAAQ,CAAA,EAMd,OALAhW,EAAO9E,KAAKqB,WAAWkb,GAAMC,SAAS1a,IAC9Bya,EAAKza,IAAQ0D,KAAKsV,MAAMhZ,KACxBgZ,EAAMhZ,GAAO0D,KAAKsV,MAAMhZ,GAC3B,IAEE,IAAI2M,EAAU,IACdjJ,KAAKwM,KACR8I,MAAO,IAAMA,GAEpB,CACD2B,KAAKF,GACD,MAAMzB,EAAQ,CAAA,EAMd,OALAhW,EAAO9E,KAAKqB,WAAWmE,KAAKsV,OAAO0B,SAAS1a,IACnCya,EAAKza,KACNgZ,EAAMhZ,GAAO0D,KAAKsV,MAAMhZ,GAC3B,IAEE,IAAI2M,EAAU,IACdjJ,KAAKwM,KACR8I,MAAO,IAAMA,GAEpB,CACD4B,cACI,OAAO9B,EAAepV,KACzB,CACDmX,QAAQJ,GACJ,MAAM1B,EAAW,CAAA,EAUjB,OATA/V,EAAO9E,KAAKqB,WAAWmE,KAAKsV,OAAO0B,SAAS1a,IACxC,MAAMiZ,EAAcvV,KAAKsV,MAAMhZ,GAC3Bya,IAASA,EAAKza,GACd+Y,EAAS/Y,GAAOiZ,EAGhBF,EAAS/Y,GAAOiZ,EAAYjL,UAC/B,IAEE,IAAIrB,EAAU,IACdjJ,KAAKwM,KACR8I,MAAO,IAAMD,GAEpB,CACD+B,SAASL,GACL,MAAM1B,EAAW,CAAA,EAcjB,OAbA/V,EAAO9E,KAAKqB,WAAWmE,KAAKsV,OAAO0B,SAAS1a,IACxC,GAAIya,IAASA,EAAKza,GACd+Y,EAAS/Y,GAAO0D,KAAKsV,MAAMhZ,OAE1B,CAED,IAAI+a,EADgBrX,KAAKsV,MAAMhZ,GAE/B,KAAO+a,aAAoBzI,IACvByI,EAAWA,EAAS7K,KAAKwC,UAE7BqG,EAAS/Y,GAAO+a,CACnB,KAEE,IAAIpO,EAAU,IACdjJ,KAAKwM,KACR8I,MAAO,IAAMD,GAEpB,CACDiC,QACI,OAAOC,EAAcjY,EAAO9E,KAAKqB,WAAWmE,KAAKsV,OACpD,EAEL3a,EAAAsO,UAAoBA,EACpBA,EAAUlH,OAAS,CAACuT,EAAO/P,IAChB,IAAI0D,EAAU,CACjBqM,MAAO,IAAMA,EACbY,YAAa,QACbD,SAAU7M,EAASrH,SACnB4M,SAAUjH,GAAsBuB,aAC7B8C,EAAoBxG,KAG/B0D,EAAUuO,aAAe,CAAClC,EAAO/P,IACtB,IAAI0D,EAAU,CACjBqM,MAAO,IAAMA,EACbY,YAAa,SACbD,SAAU7M,EAASrH,SACnB4M,SAAUjH,GAAsBuB,aAC7B8C,EAAoBxG,KAG/B0D,EAAUwO,WAAa,CAACnC,EAAO/P,IACpB,IAAI0D,EAAU,CACjBqM,QACAY,YAAa,QACbD,SAAU7M,EAASrH,SACnB4M,SAAUjH,GAAsBuB,aAC7B8C,EAAoBxG,KAG/B,MAAMyD,UAAiBa,EACnBkE,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACnC/K,EAAU3C,KAAKwM,KAAK7J,QAoB1B,GAAIsD,EAAIC,OAAOiI,MACX,OAAO/G,QAAQ6N,IAAItS,EAAQzG,KAAIiS,MAAOU,IAClC,MAAM6I,EAAW,IACVzR,EACHC,OAAQ,IACDD,EAAIC,OACPpG,OAAQ,IAEZyL,OAAQ,MAEZ,MAAO,CACHK,aAAciD,EAAOb,YAAY,CAC7BnQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQmM,IAEZzR,IAAKyR,EACR,KACDhZ,MArCR,SAAuBgI,GACnB,IAAK,MAAMkF,KAAUlF,EACjB,GAA6B,UAAzBkF,EAAOA,OAAOnF,OACd,OAAOmF,EAAOA,OAGtB,IAAK,MAAMA,KAAUlF,EACjB,GAA6B,UAAzBkF,EAAOA,OAAOnF,OAEd,OADAR,EAAIC,OAAOpG,OAAOpD,QAAQkP,EAAO3F,IAAIC,OAAOpG,QACrC8L,EAAOA,OAGtB,MAAMxK,EAAcsF,EAAQxK,KAAK0P,GAAW,IAAIzM,EAAWC,SAASwM,EAAO3F,IAAIC,OAAOpG,UAKtF,OAJA,EAAIoL,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAagD,cAC9BrB,gBAEG8J,EAAYjG,OACtB,IAqBI,CACD,IAAIqB,EACJ,MAAMxG,EAAS,GACf,IAAK,MAAM+O,KAAUlM,EAAS,CAC1B,MAAM+U,EAAW,IACVzR,EACHC,OAAQ,IACDD,EAAIC,OACPpG,OAAQ,IAEZyL,OAAQ,MAENK,EAASiD,EAAOf,WAAW,CAC7BjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQmM,IAEZ,GAAsB,UAAlB9L,EAAOnF,OACP,OAAOmF,EAEgB,UAAlBA,EAAOnF,QAAuBH,IACnCA,EAAQ,CAAEsF,SAAQ3F,IAAKyR,IAEvBA,EAASxR,OAAOpG,OAAO0B,QACvB1B,EAAOpD,KAAKgb,EAASxR,OAAOpG,OAEnC,CACD,GAAIwG,EAEA,OADAL,EAAIC,OAAOpG,OAAOpD,QAAQ4J,EAAML,IAAIC,OAAOpG,QACpCwG,EAAMsF,OAEjB,MAAMxK,EAActB,EAAO5D,KAAK4D,GAAW,IAAIX,EAAWC,SAASU,KAKnE,OAJA,EAAIoL,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAagD,cAC9BrB,gBAEG8J,EAAYjG,OACtB,CACJ,CACGtC,cACA,OAAO3C,KAAKwM,KAAK7J,OACpB,EAELhI,EAAAqO,SAAmBA,EACnBA,EAASjH,OAAS,CAAC4V,EAAOpS,IACf,IAAIyD,EAAS,CAChBrG,QAASgV,EACThJ,SAAUjH,GAAsBsB,YAC7B+C,EAAoBxG,KAG/B,MAAMqS,EAAoBrU,GAClBA,aAAgBsU,EACTD,EAAiBrU,EAAKmL,QAExBnL,aAAgB8E,GACduP,EAAiBrU,EAAKyL,aAExBzL,aAAgBkF,EACd,CAAClF,EAAK3I,OAER2I,aAAgBiF,EACdjF,EAAKZ,QAEPY,aAAgBgF,GACd9N,OAAO2B,KAAKmH,EAAKwH,MAEnBxH,aAAgB2E,GACd0P,EAAiBrU,EAAKiJ,KAAKwC,WAE7BzL,aAAgBgG,EACd,MAACzL,GAEHyF,aAAgB+F,EACd,CAAC,MAGD,KAGf,MAAMwO,UAA8BjO,EAChCkE,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACzC,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAcuB,OAMxC,OALA,EAAI6O,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcuB,OAC/BgG,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,MAAM8S,EAAgB/X,KAAK+X,cACrBC,EAAqB/R,EAAIpI,KAAKka,GAC9BlJ,EAAS7O,KAAKiY,WAAWC,IAAIF,GACnC,OAAKnJ,EAQD5I,EAAIC,OAAOiI,MACJU,EAAOb,YAAY,CACtBnQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAIL4I,EAAOf,WAAW,CACrBjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,MAlBZ,EAAIiF,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAaiD,4BAC9BC,QAASpE,MAAM4Z,KAAKnY,KAAKiY,WAAW7b,QACpCmF,KAAM,CAACwW,KAEJ7M,EAAYjG,QAgB1B,CACG8S,oBACA,OAAO/X,KAAKwM,KAAKuL,aACpB,CACGpV,cACA,OAAO3C,KAAKwM,KAAK7J,OACpB,CACGsV,iBACA,OAAOjY,KAAKwM,KAAKyL,UACpB,CACDzR,cAAcuR,EAAepV,EAAS4C,GAClC,MAAM0S,EAAa,IAAIpZ,IACvB,IAAK,MAAM0E,KAAQZ,EAAS,CACxB,MAAMyV,EAAsBR,EAAiBrU,EAAK+R,MAAMyC,IACxD,IAAKK,EACD,MAAM,IAAI9c,MAAM,mCAAmCyc,sDAEvD,IAAK,MAAMnd,KAASwd,EAAqB,CACrC,GAAIH,EAAWI,IAAIzd,GACf,MAAM,IAAIU,MAAM,0BAA0BuV,OAAOkH,0BAAsClH,OAAOjW,MAElGqd,EAAWlZ,IAAInE,EAAO2I,EACzB,CACJ,CACD,OAAO,IAAIuU,EAAsB,CAC7BnJ,SAAUjH,GAAsBoQ,sBAChCC,gBACApV,UACAsV,gBACGlM,EAAoBxG,IAE9B,EAGL,SAAS+S,EAAYC,EAAGC,GACpB,MAAMC,GAAQ,EAAInZ,EAAOzE,eAAe0d,GAClCG,GAAQ,EAAIpZ,EAAOzE,eAAe2d,GACxC,GAAID,IAAMC,EACN,MAAO,CAAEG,OAAO,EAAM9a,KAAM0a,GAE3B,GAAIE,IAAUnZ,EAAOxE,cAAcuB,QAAUqc,IAAUpZ,EAAOxE,cAAcuB,OAAQ,CACrF,MAAMuc,EAAQtZ,EAAO9E,KAAKqB,WAAW2c,GAC/BK,EAAavZ,EAAO9E,KACrBqB,WAAW0c,GACXzc,QAAQQ,IAAgC,IAAxBsc,EAAME,QAAQxc,KAC7Byc,EAAS,IAAKR,KAAMC,GAC1B,IAAK,MAAMlc,KAAOuc,EAAY,CAC1B,MAAMG,EAAcV,EAAYC,EAAEjc,GAAMkc,EAAElc,IAC1C,IAAK0c,EAAYL,MACb,MAAO,CAAEA,OAAO,GAEpBI,EAAOzc,GAAO0c,EAAYnb,IAC7B,CACD,MAAO,CAAE8a,OAAO,EAAM9a,KAAMkb,EAC/B,CACI,GAAIN,IAAUnZ,EAAOxE,cAAcsC,OAASsb,IAAUpZ,EAAOxE,cAAcsC,MAAO,CACnF,GAAImb,EAAE/W,SAAWgX,EAAEhX,OACf,MAAO,CAAEmX,OAAO,GAEpB,MAAMM,EAAW,GACjB,IAAK,IAAIpC,EAAQ,EAAGA,EAAQ0B,EAAE/W,OAAQqV,IAAS,CAC3C,MAEMmC,EAAcV,EAFNC,EAAE1B,GACF2B,EAAE3B,IAEhB,IAAKmC,EAAYL,MACb,MAAO,CAAEA,OAAO,GAEpBM,EAASvc,KAAKsc,EAAYnb,KAC7B,CACD,MAAO,CAAE8a,OAAO,EAAM9a,KAAMob,EAC/B,CACI,OAAIR,IAAUnZ,EAAOxE,cAAcmE,MACpCyZ,IAAUpZ,EAAOxE,cAAcmE,OAC9BsZ,IAAOC,EACD,CAAEG,OAAO,EAAM9a,KAAM0a,GAGrB,CAAEI,OAAO,EAEvB,CA9CDhe,EAAAmd,sBAAgCA,EA+ChC,MAAM/O,UAAwBc,EAC1BkE,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GAC3CwL,EAAe,CAACC,EAAYC,KAC9B,IAAI,EAAIlO,EAAYpG,WAAWqU,KAAe,EAAIjO,EAAYpG,WAAWsU,GACrE,OAAOlO,EAAYjG,QAEvB,MAAMoU,EAASf,EAAYa,EAAWve,MAAOwe,EAAYxe,OACzD,OAAKye,EAAOV,SAMR,EAAIzN,EAAYrG,SAASsU,KAAe,EAAIjO,EAAYrG,SAASuU,KACjE3S,EAAOH,QAEJ,CAAEG,OAAQA,EAAO7L,MAAOA,MAAOye,EAAOxb,SARzC,EAAIqN,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAaqE,6BAE3BoH,EAAYjG,QAK4B,EAEvD,OAAIgB,EAAIC,OAAOiI,MACJ/G,QAAQ6N,IAAI,CACfjV,KAAKwM,KAAK8M,KAAKtL,YAAY,CACvBnQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAEZjG,KAAKwM,KAAK+M,MAAMvL,YAAY,CACxBnQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,MAEbvH,MAAK,EAAE4a,EAAMC,KAAWL,EAAaI,EAAMC,KAGvCL,EAAalZ,KAAKwM,KAAK8M,KAAKxL,WAAW,CAC1CjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IACRjG,KAAKwM,KAAK+M,MAAMzL,WAAW,CAC3BjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAGnB,EAELtL,EAAAoO,gBAA0BA,EAC1BA,EAAgBhH,OAAS,CAACuX,EAAMC,EAAOhU,IAC5B,IAAIwD,EAAgB,CACvBuQ,KAAMA,EACNC,MAAOA,EACP5K,SAAUjH,GAAsBqB,mBAC7BgD,EAAoBxG,KAG/B,MAAMuD,UAAiBe,EACnBkE,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACjD,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAcsC,MAMxC,OALA,EAAI8N,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcsC,MAC/BiF,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,GAAIgB,EAAIpI,KAAK2D,OAASxB,KAAKwM,KAAKhR,MAAMgG,OAQlC,OAPA,EAAI0J,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS1D,KAAKwM,KAAKhR,MAAMgG,OACzBiC,WAAW,EACXD,OAAO,EACPD,KAAM,UAEH2H,EAAYjG,SAEVjF,KAAKwM,KAAKgN,MACVvT,EAAIpI,KAAK2D,OAASxB,KAAKwM,KAAKhR,MAAMgG,UAC3C,EAAI0J,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAAS5D,KAAKwM,KAAKhR,MAAMgG,OACzBiC,WAAW,EACXD,OAAO,EACPD,KAAM,UAEVkD,EAAOH,SAEX,MAAM9K,EAAQ,IAAIyK,EAAIpI,MACjB3B,KAAI,CAACR,EAAM+d,KACZ,MAAM/K,EAAS1O,KAAKwM,KAAKhR,MAAMie,IAAczZ,KAAKwM,KAAKgN,KACvD,OAAK9K,EAEEA,EAAOX,OAAO,IAAIzC,EAAmBrF,EAAKvK,EAAMuK,EAAI1E,KAAMkY,IADtD,IACiE,IAE3E3d,QAAQuK,KAAQA,IACrB,OAAIJ,EAAIC,OAAOiI,MACJ/G,QAAQ6N,IAAIzZ,GAAOkD,MAAMgI,GACrBwE,EAAYhG,YAAYgQ,WAAWzO,EAAQC,KAI/CwE,EAAYhG,YAAYgQ,WAAWzO,EAAQjL,EAEzD,CACGA,YACA,OAAOwE,KAAKwM,KAAKhR,KACpB,CACDge,KAAKA,GACD,OAAO,IAAI1Q,EAAS,IACb9I,KAAKwM,KACRgN,QAEP,EAEL7e,EAAAmO,SAAmBA,EACnBA,EAAS/G,OAAS,CAAC2X,EAASnU,KACxB,IAAKhH,MAAMC,QAAQkb,GACf,MAAM,IAAIpe,MAAM,yDAEpB,OAAO,IAAIwN,EAAS,CAChBtN,MAAOke,EACP/K,SAAUjH,GAAsBoB,SAChC0Q,KAAM,QACHzN,EAAoBxG,IACzB,EAEN,MAAMsD,UAAkBgB,EAChB8P,gBACA,OAAO3Z,KAAKwM,KAAKoN,OACpB,CACGC,kBACA,OAAO7Z,KAAKwM,KAAKsN,SACpB,CACD/L,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACjD,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAcuB,OAMxC,OALA,EAAI6O,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcuB,OAC/BgG,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,MAAM4B,EAAQ,GACR+S,EAAU5Z,KAAKwM,KAAKoN,QACpBE,EAAY9Z,KAAKwM,KAAKsN,UAC5B,IAAK,MAAMxd,KAAO2J,EAAIpI,KAClBgJ,EAAMnK,KAAK,CACPJ,IAAKsd,EAAQ7L,OAAO,IAAIzC,EAAmBrF,EAAK3J,EAAK2J,EAAI1E,KAAMjF,IAC/D1B,MAAOkf,EAAU/L,OAAO,IAAIzC,EAAmBrF,EAAKA,EAAIpI,KAAKvB,GAAM2J,EAAI1E,KAAMjF,MAGrF,OAAI2J,EAAIC,OAAOiI,MACJjD,EAAYhG,YAAY6U,iBAAiBtT,EAAQI,GAGjDqE,EAAYhG,YAAY8B,gBAAgBP,EAAQI,EAE9D,CACGsO,cACA,OAAOnV,KAAKwM,KAAKsN,SACpB,CACDtT,cAAc7I,EAAOC,EAAQoc,GACzB,OACW,IAAInR,EADXjL,aAAkBiM,EACG,CACjB+P,QAASjc,EACTmc,UAAWlc,EACX+Q,SAAUjH,GAAsBmB,aAC7BkD,EAAoBiO,IAGV,CACjBJ,QAAShQ,EAAU7H,SACnB+X,UAAWnc,EACXgR,SAAUjH,GAAsBmB,aAC7BkD,EAAoBnO,IAE9B,EAELjD,EAAAkO,UAAoBA,EACpB,MAAMD,UAAeiB,EACjBkE,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACjD,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAcoB,IAMxC,OALA,EAAIgP,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcoB,IAC/BmG,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,MAAM2U,EAAU5Z,KAAKwM,KAAKoN,QACpBE,EAAY9Z,KAAKwM,KAAKsN,UACtBjT,EAAQ,IAAIZ,EAAIpI,KAAKoc,WAAW/d,KAAI,EAAEI,EAAK1B,GAAQic,KAC9C,CACHva,IAAKsd,EAAQ7L,OAAO,IAAIzC,EAAmBrF,EAAK3J,EAAK2J,EAAI1E,KAAM,CAACsV,EAAO,SACvEjc,MAAOkf,EAAU/L,OAAO,IAAIzC,EAAmBrF,EAAKrL,EAAOqL,EAAI1E,KAAM,CAACsV,EAAO,eAGrF,GAAI5Q,EAAIC,OAAOiI,MAAO,CAClB,MAAM+L,EAAW,IAAIrb,IACrB,OAAOuI,QAAQ6G,UAAUvP,MAAKyP,UAC1B,IAAK,MAAMpH,KAAQF,EAAO,CACtB,MAAMvK,QAAYyK,EAAKzK,IACjB1B,QAAcmM,EAAKnM,MACzB,GAAmB,YAAf0B,EAAImK,QAAyC,YAAjB7L,EAAM6L,OAClC,OAAOyE,EAAYjG,QAEJ,UAAf3I,EAAImK,QAAuC,UAAjB7L,EAAM6L,QAChCA,EAAOH,QAEX4T,EAASnb,IAAIzC,EAAI1B,MAAOA,EAAMA,MACjC,CACD,MAAO,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAOsf,EAAU,GAEvD,CACI,CACD,MAAMA,EAAW,IAAIrb,IACrB,IAAK,MAAMkI,KAAQF,EAAO,CACtB,MAAMvK,EAAMyK,EAAKzK,IACX1B,EAAQmM,EAAKnM,MACnB,GAAmB,YAAf0B,EAAImK,QAAyC,YAAjB7L,EAAM6L,OAClC,OAAOyE,EAAYjG,QAEJ,UAAf3I,EAAImK,QAAuC,UAAjB7L,EAAM6L,QAChCA,EAAOH,QAEX4T,EAASnb,IAAIzC,EAAI1B,MAAOA,EAAMA,MACjC,CACD,MAAO,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAOsf,EACzC,CACJ,EAELvf,EAAAiO,OAAiBA,EACjBA,EAAO7G,OAAS,CAAC6X,EAASE,EAAWvU,IAC1B,IAAIqD,EAAO,CACdkR,YACAF,UACAjL,SAAUjH,GAAsBkB,UAC7BmD,EAAoBxG,KAG/B,MAAMoD,UAAekB,EACjBkE,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACjD,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAciE,IAMxC,OALA,EAAImM,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAciE,IAC/BsD,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,MAAMoH,EAAMrM,KAAKwM,KACG,OAAhBH,EAAI8N,SACAlU,EAAIpI,KAAKuc,KAAO/N,EAAI8N,QAAQvf,SAC5B,EAAIsQ,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa6D,UAC9BI,QAAS2I,EAAI8N,QAAQvf,MACrB2I,KAAM,MACNE,WAAW,EACXD,OAAO,EACP1C,QAASuL,EAAI8N,QAAQrZ,UAEzB2F,EAAOH,SAGK,OAAhB+F,EAAIgO,SACApU,EAAIpI,KAAKuc,KAAO/N,EAAIgO,QAAQzf,SAC5B,EAAIsQ,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAakE,QAC9BC,QAASyI,EAAIgO,QAAQzf,MACrB2I,KAAM,MACNE,WAAW,EACXD,OAAO,EACP1C,QAASuL,EAAIgO,QAAQvZ,UAEzB2F,EAAOH,SAGf,MAAMwT,EAAY9Z,KAAKwM,KAAKsN,UAC5B,SAASQ,EAAYC,GACjB,MAAMC,EAAY,IAAI1b,IACtB,IAAK,MAAMqW,KAAWoF,EAAU,CAC5B,GAAuB,YAAnBpF,EAAQ1O,OACR,OAAOyE,EAAYjG,QACA,UAAnBkQ,EAAQ1O,QACRA,EAAOH,QACXkU,EAAUC,IAAItF,EAAQva,MACzB,CACD,MAAO,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAO4f,EACzC,CACD,MAAMD,EAAW,IAAItU,EAAIpI,KAAK6c,UAAUxe,KAAI,CAACR,EAAMgG,IAAMoY,EAAU/L,OAAO,IAAIzC,EAAmBrF,EAAKvK,EAAMuK,EAAI1E,KAAMG,MACtH,OAAIuE,EAAIC,OAAOiI,MACJ/G,QAAQ6N,IAAIsF,GAAU7b,MAAM6b,GAAaD,EAAYC,KAGrDD,EAAYC,EAE1B,CACDhK,IAAI4J,EAASrZ,GACT,OAAO,IAAI6H,EAAO,IACX3I,KAAKwM,KACR2N,QAAS,CAAEvf,MAAOuf,EAASrZ,QAASmK,EAAY3D,UAAU7J,SAASqD,KAE1E,CACDkR,IAAIqI,EAASvZ,GACT,OAAO,IAAI6H,EAAO,IACX3I,KAAKwM,KACR6N,QAAS,CAAEzf,MAAOyf,EAASvZ,QAASmK,EAAY3D,UAAU7J,SAASqD,KAE1E,CACDsZ,KAAKA,EAAMtZ,GACP,OAAOd,KAAKuQ,IAAI6J,EAAMtZ,GAASkR,IAAIoI,EAAMtZ,EAC5C,CACDwP,SAASxP,GACL,OAAOd,KAAKuQ,IAAI,EAAGzP,EACtB,EAELnG,EAAAgO,OAAiBA,EACjBA,EAAO5G,OAAS,CAAC+X,EAAWvU,IACjB,IAAIoD,EAAO,CACdmR,YACAK,QAAS,KACTE,QAAS,KACT1L,SAAUjH,GAAsBiB,UAC7BoD,EAAoBxG,KAG/B,MAAMmD,UAAoBmB,EACtBhK,cACIE,SAASoQ,WACTnQ,KAAK2a,SAAW3a,KAAK4a,SACxB,CACD7M,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACzC,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAcsD,SAMxC,OALA,EAAI8M,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcsD,SAC/BiE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,SAAS4V,EAAc3J,EAAMhQ,GACzB,OAAO,EAAIgK,EAAY7F,WAAW,CAC9BxH,KAAMqT,EACN3P,KAAM0E,EAAI1E,KACViE,UAAW,CACPS,EAAIC,OAAOC,mBACXF,EAAIG,gBACJ,EAAId,EAAShB,eACbgB,EAASb,iBACX3I,QAAQuK,KAAQA,IAClBZ,UAAW,CACPtE,KAAMhC,EAAWM,aAAaoD,kBAC9BvB,eAAgBJ,IAG3B,CACD,SAAS4Z,EAAiBC,EAAS7Z,GAC/B,OAAO,EAAIgK,EAAY7F,WAAW,CAC9BxH,KAAMkd,EACNxZ,KAAM0E,EAAI1E,KACViE,UAAW,CACPS,EAAIC,OAAOC,mBACXF,EAAIG,gBACJ,EAAId,EAAShB,eACbgB,EAASb,iBACX3I,QAAQuK,KAAQA,IAClBZ,UAAW,CACPtE,KAAMhC,EAAWM,aAAaqD,oBAC9BzB,gBAAiBH,IAG5B,CACD,MAAMqE,EAAS,CAAEyG,SAAU/F,EAAIC,OAAOC,oBAChC6U,EAAK/U,EAAIpI,KACf,OAAImC,KAAKwM,KAAKuO,mBAAmBzS,IACtB,EAAI4C,EAAYnG,KAAIoJ,SAAU+C,KACjC,MAAMhQ,EAAQ,IAAI/B,EAAWC,SAAS,IAChC6b,QAAmBjb,KAAKwM,KAAK0E,KAC9BtE,WAAWsE,EAAM3L,GACjB5G,OAAOxC,IAER,MADA+E,EAAMjB,SAAS4a,EAAc3J,EAAM/U,IAC7B+E,CAAK,IAET0K,QAAeoP,KAAMC,GAO3B,aAN4Bjb,KAAKwM,KAAKuO,QAAQvO,KAAKjJ,KAC9CqJ,WAAWhB,EAAQrG,GACnB5G,OAAOxC,IAER,MADA+E,EAAMjB,SAAS6a,EAAiBlP,EAAQzP,IAClC+E,CAAK,GAEK,KAIjB,EAAIgK,EAAYnG,KAAI,IAAImM,KAC3B,MAAM+J,EAAajb,KAAKwM,KAAK0E,KAAKvE,UAAUuE,EAAM3L,GAClD,IAAK0V,EAAWpP,QACZ,MAAM,IAAI1M,EAAWC,SAAS,CAACyb,EAAc3J,EAAM+J,EAAW/Z,SAElE,MAAM0K,EAASoP,KAAMC,EAAWpd,MAC1Bqd,EAAgBlb,KAAKwM,KAAKuO,QAAQpO,UAAUf,EAAQrG,GAC1D,IAAK2V,EAAcrP,QACf,MAAM,IAAI1M,EAAWC,SAAS,CAAC0b,EAAiBlP,EAAQsP,EAAcha,SAE1E,OAAOga,EAAcrd,IAAI,GAGpC,CACDsd,aACI,OAAOnb,KAAKwM,KAAK0E,IACpB,CACDkK,aACI,OAAOpb,KAAKwM,KAAKuO,OACpB,CACD7J,QAAQ1V,GACJ,OAAO,IAAIkN,EAAY,IAChB1I,KAAKwM,KACR0E,KAAMpI,EAAS/G,OAAOvG,GAAOge,KAAKnQ,EAAWtH,WAEpD,CACDgZ,QAAQK,GACJ,OAAO,IAAI1S,EAAY,IAChB1I,KAAKwM,KACRuO,QAASK,GAEhB,CACDR,UAAUS,GAEN,OADsBrb,KAAKyM,MAAM4O,EAEpC,CACDC,gBAAgBD,GAEZ,OADsBrb,KAAKyM,MAAM4O,EAEpC,CACD7U,cAAc0K,EAAM6J,EAASxV,GACzB,OAAO,IAAImD,EAAY,CACnBwI,KAAOA,GAEDpI,EAAS/G,OAAO,IAAIyX,KAAKnQ,EAAWtH,UAC1CgZ,QAASA,GAAW1R,EAAWtH,SAC/B4M,SAAUjH,GAAsBgB,eAC7BqD,EAAoBxG,IAE9B,EAEL5K,EAAA+N,YAAsBA,EACtB,MAAMmP,UAAgBhO,EACd6E,aACA,OAAO1O,KAAKwM,KAAK+O,QACpB,CACDxN,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GAEzC,OADmB1N,KAAKwM,KAAK+O,SACXxN,OAAO,CAAElQ,KAAMoI,EAAIpI,KAAM0D,KAAM0E,EAAI1E,KAAMgK,OAAQtF,GACtE,EAELtL,EAAAkd,QAAkBA,EAClBA,EAAQ9V,OAAS,CAACwZ,EAAQhW,IACf,IAAIsS,EAAQ,CACf0D,OAAQA,EACR5M,SAAUjH,GAAsBmQ,WAC7B9L,EAAoBxG,KAG/B,MAAMkD,UAAmBoB,EACrBkE,OAAOL,GACH,GAAIA,EAAM7P,OAASmC,KAAKwM,KAAK5R,MAAO,CAChC,MAAMqL,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC5D,SAAU4D,EAAIpI,KACdsD,KAAMhC,EAAWM,aAAa8C,gBAC9BD,SAAUtC,KAAKwM,KAAK5R,QAEjBsQ,EAAYjG,OACtB,CACD,MAAO,CAAEwB,OAAQ,QAAS7L,MAAO8S,EAAM7P,KAC1C,CACGjD,YACA,OAAOoF,KAAKwM,KAAK5R,KACpB,EAUL,SAAS2c,EAAcmD,EAAQnV,GAC3B,OAAO,IAAIiD,EAAQ,CACfkS,OAAQA,EACR/L,SAAUjH,GAAsBc,WAC7BuD,EAAoBxG,IAE9B,CAdD5K,EAAA8N,WAAqBA,EACrBA,EAAW1G,OAAS,CAACnH,EAAO2K,IACjB,IAAIkD,EAAW,CAClB7N,MAAOA,EACP+T,SAAUjH,GAAsBe,cAC7BsD,EAAoBxG,KAU/B,MAAMiD,UAAgBqB,EAClBkE,OAAOL,GACH,GAA0B,iBAAfA,EAAM7P,KAAmB,CAChC,MAAMoI,EAAMjG,KAAK2N,gBAAgBD,GAC3B8N,EAAiBxb,KAAKwM,KAAKkO,OAMjC,OALA,EAAIxP,EAAY/F,mBAAmBc,EAAK,CACpC3D,SAAUhD,EAAO9E,KAAK2C,WAAWqe,GACjCnZ,SAAU4D,EAAI2H,WACdzM,KAAMhC,EAAWM,aAAa2C,eAE3B8I,EAAYjG,OACtB,CACD,IAA8C,IAA1CjF,KAAKwM,KAAKkO,OAAO5B,QAAQpL,EAAM7P,MAAc,CAC7C,MAAMoI,EAAMjG,KAAK2N,gBAAgBD,GAC3B8N,EAAiBxb,KAAKwM,KAAKkO,OAMjC,OALA,EAAIxP,EAAY/F,mBAAmBc,EAAK,CACpC5D,SAAU4D,EAAIpI,KACdsD,KAAMhC,EAAWM,aAAamD,mBAC9BD,QAAS6Y,IAENtQ,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,CACG8E,cACA,OAAO3C,KAAKwM,KAAKkO,MACpB,CACG3P,WACA,MAAM0Q,EAAa,CAAA,EACnB,IAAK,MAAMxgB,KAAO+E,KAAKwM,KAAKkO,OACxBe,EAAWxgB,GAAOA,EAEtB,OAAOwgB,CACV,CACGC,aACA,MAAMD,EAAa,CAAA,EACnB,IAAK,MAAMxgB,KAAO+E,KAAKwM,KAAKkO,OACxBe,EAAWxgB,GAAOA,EAEtB,OAAOwgB,CACV,CACGE,WACA,MAAMF,EAAa,CAAA,EACnB,IAAK,MAAMxgB,KAAO+E,KAAKwM,KAAKkO,OACxBe,EAAWxgB,GAAOA,EAEtB,OAAOwgB,CACV,CACDG,QAAQlB,GACJ,OAAOlS,EAAQzG,OAAO2Y,EACzB,CACDmB,QAAQnB,GACJ,OAAOlS,EAAQzG,OAAO/B,KAAK2C,QAAQ7G,QAAQggB,IAASpB,EAAOxX,SAAS4Y,KACvE,EAELnhB,EAAA6N,QAAkBA,EAClBA,EAAQzG,OAASwV,EACjB,MAAMhP,WAAsBsB,EACxBkE,OAAOL,GACH,MAAMqO,EAAmBzc,EAAO9E,KAAKmB,mBAAmBqE,KAAKwM,KAAKkO,QAC5DzU,EAAMjG,KAAK2N,gBAAgBD,GACjC,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAciD,QACxCkI,EAAI2H,aAAetO,EAAOxE,cAAcoD,OAAQ,CAChD,MAAMsd,EAAiBlc,EAAO9E,KAAKyB,aAAa8f,GAMhD,OALA,EAAI7Q,EAAY/F,mBAAmBc,EAAK,CACpC3D,SAAUhD,EAAO9E,KAAK2C,WAAWqe,GACjCnZ,SAAU4D,EAAI2H,WACdzM,KAAMhC,EAAWM,aAAa2C,eAE3B8I,EAAYjG,OACtB,CACD,IAA8C,IAA1C8W,EAAiBjD,QAAQpL,EAAM7P,MAAc,CAC7C,MAAM2d,EAAiBlc,EAAO9E,KAAKyB,aAAa8f,GAMhD,OALA,EAAI7Q,EAAY/F,mBAAmBc,EAAK,CACpC5D,SAAU4D,EAAIpI,KACdsD,KAAMhC,EAAWM,aAAamD,mBAC9BD,QAAS6Y,IAENtQ,EAAYjG,OACtB,CACD,OAAO,EAAIiG,EAAYnG,IAAI2I,EAAM7P,KACpC,CACGkN,WACA,OAAO/K,KAAKwM,KAAKkO,MACpB,EAEL/f,EAAA4N,cAAwBA,GACxBA,GAAcxG,OAAS,CAAC2Y,EAAQnV,IACrB,IAAIgD,GAAc,CACrBmS,OAAQA,EACR/L,SAAUjH,GAAsBa,iBAC7BwD,EAAoBxG,KAG/B,MAAM+C,WAAmBuB,EACrB2L,SACI,OAAOxV,KAAKwM,KAAKjJ,IACpB,CACDwK,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACzC,GAAIzH,EAAI2H,aAAetO,EAAOxE,cAAc8D,UACnB,IAArBqH,EAAIC,OAAOiI,MAMX,OALA,EAAIjD,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAc8D,QAC/ByD,SAAU4D,EAAI2H,aAEX1C,EAAYjG,QAEvB,MAAM+W,EAAc/V,EAAI2H,aAAetO,EAAOxE,cAAc8D,QACtDqH,EAAIpI,KACJuJ,QAAQ6G,QAAQhI,EAAIpI,MAC1B,OAAO,EAAIqN,EAAYnG,IAAIiX,EAAYtd,MAAMb,GAClCmC,KAAKwM,KAAKjJ,KAAKqJ,WAAW/O,EAAM,CACnC0D,KAAM0E,EAAI1E,KACVyK,SAAU/F,EAAIC,OAAOC,uBAGhC,EAELxL,EAAA2N,WAAqBA,GACrBA,GAAWvG,OAAS,CAAC2M,EAAQnJ,IAClB,IAAI+C,GAAW,CAClB/E,KAAMmL,EACNC,SAAUjH,GAAsBY,cAC7ByD,EAAoBxG,KAG/B,MAAM8C,WAAmBwB,EACrBmF,YACI,OAAOhP,KAAKwM,KAAKkC,MACpB,CACDuN,aACI,OAAOjc,KAAKwM,KAAKkC,OAAOlC,KAAKmC,WAAajH,GAAsBW,WAC1DrI,KAAKwM,KAAKkC,OAAOuN,aACjBjc,KAAKwM,KAAKkC,MACnB,CACDX,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GAC3C1C,EAAShL,KAAKwM,KAAKxB,QAAU,KACnC,GAAoB,eAAhBA,EAAOzH,KAAuB,CAC9B,MAAM2Y,EAAYlR,EAAOmC,UAAUlH,EAAIpI,MACvC,OAAIoI,EAAIC,OAAOiI,MACJ/G,QAAQ6G,QAAQiO,GAAWxd,MAAMwd,GAC7Blc,KAAKwM,KAAKkC,OAAOV,YAAY,CAChCnQ,KAAMqe,EACN3a,KAAM0E,EAAI1E,KACVgK,OAAQtF,MAKTjG,KAAKwM,KAAKkC,OAAOZ,WAAW,CAC/BjQ,KAAMqe,EACN3a,KAAM0E,EAAI1E,KACVgK,OAAQtF,GAGnB,CACD,MAAMkW,EAAW,CACblc,SAAWmc,KACP,EAAIlR,EAAY/F,mBAAmBc,EAAKmW,GACpCA,EAAIC,MACJ5V,EAAOF,QAGPE,EAAOH,OACV,EAED/E,WACA,OAAO0E,EAAI1E,IACd,GAGL,GADA4a,EAASlc,SAAWkc,EAASlc,SAASyM,KAAKyP,GACvB,eAAhBnR,EAAOzH,KAAuB,CAC9B,MAAM+Y,EAAqBC,IACvB,MAAM3Q,EAASZ,EAAO8B,WAAWyP,EAAKJ,GACtC,GAAIlW,EAAIC,OAAOiI,MACX,OAAO/G,QAAQ6G,QAAQrC,GAE3B,GAAIA,aAAkBxE,QAClB,MAAM,IAAI9L,MAAM,6FAEpB,OAAOihB,CAAG,EAEd,IAAyB,IAArBtW,EAAIC,OAAOiI,MAAiB,CAC5B,MAAMqO,EAAQxc,KAAKwM,KAAKkC,OAAOZ,WAAW,CACtCjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAEZ,MAAqB,YAAjBuW,EAAM/V,OACCyE,EAAYjG,SACF,UAAjBuX,EAAM/V,QACNA,EAAOH,QACXgW,EAAkBE,EAAM5hB,OACjB,CAAE6L,OAAQA,EAAO7L,MAAOA,MAAO4hB,EAAM5hB,OAC/C,CAEG,OAAOoF,KAAKwM,KAAKkC,OACZV,YAAY,CAAEnQ,KAAMoI,EAAIpI,KAAM0D,KAAM0E,EAAI1E,KAAMgK,OAAQtF,IACtDvH,MAAM8d,GACc,YAAjBA,EAAM/V,OACCyE,EAAYjG,SACF,UAAjBuX,EAAM/V,QACNA,EAAOH,QACJgW,EAAkBE,EAAM5hB,OAAO8D,MAAK,KAChC,CAAE+H,OAAQA,EAAO7L,MAAOA,MAAO4hB,EAAM5hB,YAI3D,CACD,GAAoB,cAAhBoQ,EAAOzH,KAAsB,CAC7B,IAAyB,IAArB0C,EAAIC,OAAOiI,MAAiB,CAC5B,MAAMsO,EAAOzc,KAAKwM,KAAKkC,OAAOZ,WAAW,CACrCjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAEZ,KAAK,EAAIiF,EAAYtG,SAAS6X,GAC1B,OAAOA,EACX,MAAM7Q,EAASZ,EAAOmC,UAAUsP,EAAK7hB,MAAOuhB,GAC5C,GAAIvQ,aAAkBxE,QAClB,MAAM,IAAI9L,MAAM,mGAEpB,MAAO,CAAEmL,OAAQA,EAAO7L,MAAOA,MAAOgR,EACzC,CAEG,OAAO5L,KAAKwM,KAAKkC,OACZV,YAAY,CAAEnQ,KAAMoI,EAAIpI,KAAM0D,KAAM0E,EAAI1E,KAAMgK,OAAQtF,IACtDvH,MAAM+d,IACF,EAAIvR,EAAYtG,SAAS6X,GAEvBrV,QAAQ6G,QAAQjD,EAAOmC,UAAUsP,EAAK7hB,MAAOuhB,IAAWzd,MAAMkN,IAAM,CAAQnF,OAAQA,EAAO7L,MAAOA,MAAOgR,MADrG6Q,GAItB,CACDnd,EAAO9E,KAAKY,YAAY4P,EAC3B,EAELrQ,EAAA0N,WAAqBA,GACrB1N,EAAAyN,eAAyBC,GACzBA,GAAWtG,OAAS,CAAC2M,EAAQ1D,EAAQzF,IAC1B,IAAI8C,GAAW,CAClBqG,SACAC,SAAUjH,GAAsBW,WAChC2C,YACGe,EAAoBxG,KAG/B8C,GAAWqU,qBAAuB,CAACtS,EAAYsE,EAAQnJ,IAC5C,IAAI8C,GAAW,CAClBqG,SACA1D,OAAQ,CAAEzH,KAAM,aAAc4J,UAAW/C,GACzCuE,SAAUjH,GAAsBW,cAC7B0D,EAAoBxG,KAG/B,MAAMqJ,WAAoB/E,EACtBkE,OAAOL,GAEH,OADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcgD,WAC7B,EAAIoN,EAAYnG,SAAIjH,GAExBkC,KAAKwM,KAAKwC,UAAUjB,OAAOL,EACrC,CACD8H,SACI,OAAOxV,KAAKwM,KAAKwC,SACpB,EAELrU,EAAAiU,YAAsBA,GACtBA,GAAY7M,OAAS,CAACwB,EAAMgC,IACjB,IAAIqJ,GAAY,CACnBI,UAAWzL,EACXoL,SAAUjH,GAAsBkH,eAC7B7C,EAAoBxG,KAG/B,MAAM4C,WAAoB0B,EACtBkE,OAAOL,GAEH,OADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAc2D,MAC7B,EAAIyM,EAAYnG,IAAI,MAExB/E,KAAKwM,KAAKwC,UAAUjB,OAAOL,EACrC,CACD8H,SACI,OAAOxV,KAAKwM,KAAKwC,SACpB,EAELrU,EAAAwN,YAAsBA,GACtBA,GAAYpG,OAAS,CAACwB,EAAMgC,IACjB,IAAI4C,GAAY,CACnB6G,UAAWzL,EACXoL,SAAUjH,GAAsBS,eAC7B4D,EAAoBxG,KAG/B,MAAM2C,WAAmB2B,EACrBkE,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACzC,IAAI7P,EAAOoI,EAAIpI,KAIf,OAHIoI,EAAI2H,aAAetO,EAAOxE,cAAcgD,YACxCD,EAAOmC,KAAKwM,KAAKyC,gBAEdjP,KAAKwM,KAAKwC,UAAUjB,OAAO,CAC9BlQ,OACA0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,GAEf,CACD0W,gBACI,OAAO3c,KAAKwM,KAAKwC,SACpB,EAELrU,EAAAuN,WAAqBA,GACrBA,GAAWnG,OAAS,CAACwB,EAAMgC,IAChB,IAAI2C,GAAW,CAClB8G,UAAWzL,EACXoL,SAAUjH,GAAsBQ,WAChC+G,aAAwC,mBAAnB1J,EAAOrD,QACtBqD,EAAOrD,QACP,IAAMqD,EAAOrD,WAChB6J,EAAoBxG,KAG/B,MAAM0C,WAAiB4B,EACnBkE,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACnCkP,EAAS,IACR3W,EACHC,OAAQ,IACDD,EAAIC,OACPpG,OAAQ,KAGV8L,EAAS5L,KAAKwM,KAAKwC,UAAUjB,OAAO,CACtClQ,KAAM+e,EAAO/e,KACb0D,KAAMqb,EAAOrb,KACbgK,OAAQ,IACDqR,KAGX,OAAI,EAAI1R,EAAYvG,SAASiH,GAClBA,EAAOlN,MAAMkN,IACT,CACHnF,OAAQ,QACR7L,MAAyB,UAAlBgR,EAAOnF,OACRmF,EAAOhR,MACPoF,KAAKwM,KAAK2C,WAAW,CACfjO,YACA,OAAO,IAAI/B,EAAWC,SAASwd,EAAO1W,OAAOpG,OAChD,EACD4N,MAAOkP,EAAO/e,WAMvB,CACH4I,OAAQ,QACR7L,MAAyB,UAAlBgR,EAAOnF,OACRmF,EAAOhR,MACPoF,KAAKwM,KAAK2C,WAAW,CACfjO,YACA,OAAO,IAAI/B,EAAWC,SAASwd,EAAO1W,OAAOpG,OAChD,EACD4N,MAAOkP,EAAO/e,OAIjC,CACDgf,cACI,OAAO7c,KAAKwM,KAAKwC,SACpB,EAELrU,EAAAsN,SAAmBA,GACnBA,GAASlG,OAAS,CAACwB,EAAMgC,IACd,IAAI0C,GAAS,CAChB+G,UAAWzL,EACXoL,SAAUjH,GAAsBO,SAChCkH,WAAoC,mBAAjB5J,EAAO5G,MAAuB4G,EAAO5G,MAAQ,IAAM4G,EAAO5G,SAC1EoN,EAAoBxG,KAG/B,MAAMyC,WAAe6B,EACjBkE,OAAOL,GAEH,GADmB1N,KAAKyN,SAASC,KACdpO,EAAOxE,cAAcmD,IAAK,CACzC,MAAMgI,EAAMjG,KAAK2N,gBAAgBD,GAMjC,OALA,EAAIxC,EAAY/F,mBAAmBc,EAAK,CACpC9E,KAAMhC,EAAWM,aAAa2C,aAC9BE,SAAUhD,EAAOxE,cAAcmD,IAC/BoE,SAAU4D,EAAI2H,aAEX1C,EAAYjG,OACtB,CACD,MAAO,CAAEwB,OAAQ,QAAS7L,MAAO8S,EAAM7P,KAC1C,EAELlD,EAAAqN,OAAiBA,GACjBA,GAAOjG,OAAUwD,GACN,IAAIyC,GAAO,CACd2G,SAAUjH,GAAsBM,UAC7B+D,EAAoBxG,KAG/B5K,EAAAoN,MAAgB+U,OAAO,aACvB,MAAMhV,WAAmB+B,EACrBkE,OAAOL,GACH,MAAMzH,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACnC7P,EAAOoI,EAAIpI,KACjB,OAAOmC,KAAKwM,KAAKjJ,KAAKwK,OAAO,CACzBlQ,OACA0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,GAEf,CACDuP,SACI,OAAOxV,KAAKwM,KAAKjJ,IACpB,EAEL5I,EAAAmN,WAAqBA,GACrB,MAAMwH,WAAoBzF,EACtBkE,OAAOL,GACH,MAAMjH,OAAEA,EAAMR,IAAEA,GAAQjG,KAAK6N,oBAAoBH,GACjD,GAAIzH,EAAIC,OAAOiI,MAAO,CAqBlB,MApBoBA,WAChB,MAAM4O,QAAiB/c,KAAKwM,KAAKwQ,GAAGhP,YAAY,CAC5CnQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAEZ,MAAwB,YAApB8W,EAAStW,OACFyE,EAAYjG,QACC,UAApB8X,EAAStW,QACTA,EAAOH,SACA,EAAI4E,EAAYlG,OAAO+X,EAASniB,QAGhCoF,KAAKwM,KAAKyQ,IAAIjP,YAAY,CAC7BnQ,KAAMkf,EAASniB,MACf2G,KAAM0E,EAAI1E,KACVgK,OAAQtF,GAEf,EAEEiX,EACV,CACI,CACD,MAAMH,EAAW/c,KAAKwM,KAAKwQ,GAAGlP,WAAW,CACrCjQ,KAAMoI,EAAIpI,KACV0D,KAAM0E,EAAI1E,KACVgK,OAAQtF,IAEZ,MAAwB,YAApB8W,EAAStW,OACFyE,EAAYjG,QACC,UAApB8X,EAAStW,QACTA,EAAOH,QACA,CACHG,OAAQ,QACR7L,MAAOmiB,EAASniB,QAIboF,KAAKwM,KAAKyQ,IAAInP,WAAW,CAC5BjQ,KAAMkf,EAASniB,MACf2G,KAAM0E,EAAI1E,KACVgK,OAAQtF,GAGnB,CACJ,CACDO,cAAc+R,EAAGC,GACb,OAAO,IAAIlJ,GAAY,CACnB0N,GAAIzE,EACJ0E,IAAKzE,EACL7J,SAAUjH,GAAsB4H,aAEvC,EAEL3U,EAAA2U,YAAsBA,GAsBtB,IAAI5H,GAJJ/M,EAAAkJ,OAjBe,CAACwK,EAAO9I,EAAS,CAAA,EAAI8W,IAC5BhO,EACOwG,EAAO9S,SAASgL,aAAY,CAAClP,EAAMoI,KACtC,IAAIiI,EAAImI,EACR,IAAKhI,EAAMxQ,GAAO,CACd,MAAMsf,EAAsB,mBAAX5X,EACXA,EAAO1H,GACW,iBAAX0H,EACH,CAAEzE,QAASyE,GACXA,EACJ6X,EAA0E,QAAhE/G,EAAwB,QAAlBnI,EAAKiP,EAAEd,aAA0B,IAAPnO,EAAgBA,EAAKmO,SAA0B,IAAPhG,GAAgBA,EAClGgH,EAAkB,iBAANF,EAAiB,CAAErc,QAASqc,GAAMA,EACpDlX,EAAIhG,SAAS,CAAEkB,KAAM,YAAakc,EAAIhB,MAAOe,GAChD,KAEFvI,EAAO9S,SAGlBpH,EAAegN,KAAA,CACXtL,OAAQ4M,EAAUwO,YAGtB,SAAW/P,GACPA,EAAiC,UAAI,YACrCA,EAAiC,UAAI,YACrCA,EAA8B,OAAI,SAClCA,EAAiC,UAAI,YACrCA,EAAkC,WAAI,aACtCA,EAA+B,QAAI,UACnCA,EAAiC,UAAI,YACrCA,EAAoC,aAAI,eACxCA,EAA+B,QAAI,UACnCA,EAA8B,OAAI,SAClCA,EAAkC,WAAI,aACtCA,EAAgC,SAAI,WACpCA,EAA+B,QAAI,UACnCA,EAAgC,SAAI,WACpCA,EAAiC,UAAI,YACrCA,EAAgC,SAAI,WACpCA,EAA6C,sBAAI,wBACjDA,EAAuC,gBAAI,kBAC3CA,EAAgC,SAAI,WACpCA,EAAiC,UAAI,YACrCA,EAA8B,OAAI,SAClCA,EAA8B,OAAI,SAClCA,EAAmC,YAAI,cACvCA,EAA+B,QAAI,UACnCA,EAAkC,WAAI,aACtCA,EAA+B,QAAI,UACnCA,EAAkC,WAAI,aACtCA,EAAqC,cAAI,gBACzCA,EAAmC,YAAI,cACvCA,EAAmC,YAAI,cACvCA,EAAkC,WAAI,aACtCA,EAAgC,SAAI,WACpCA,EAAkC,WAAI,aACtCA,EAAkC,WAAI,aACtCA,EAAmC,YAAI,aAC1C,CApCD,CAoCGA,GAAwB/M,EAAQ+M,wBAA0B/M,EAAgC+M,sBAAA,CAAE,IAO/F/M,EAAA2iB,WAHuB,CAACC,EAAKhY,EAAS,CAClCzE,QAAS,yBAAyByc,EAAI/c,WACpC,EAAI7F,EAAQkJ,SAAShG,GAASA,aAAgB0f,GAAKhY,GAEzD,MAAMiY,GAAa5T,EAAU7H,OAC7BpH,EAAAoD,OAAiByf,GACjB,MAAMC,GAAanK,EAAUvR,OAC7BpH,EAAAuD,OAAiBuf,GACjB,MAAMC,GAAU1V,GAAOjG,OACvBpH,EAAAsD,IAAcyf,GACd,MAAMC,GAAahU,EAAU5H,OAC7BpH,EAAA0D,OAAiBsf,GACjB,MAAMC,GAAclU,EAAW3H,OAC/BpH,EAAAwD,QAAkByf,GAClB,MAAMC,GAAWpU,EAAQ1H,OACzBpH,EAAAsE,KAAe4e,GACf,MAAMC,GAAatU,EAAUzH,OAC7BpH,EAAA2D,OAAiBwf,GACjB,MAAMC,GAAgBxU,EAAaxH,OACnCpH,EAAAmD,UAAoBigB,GACpB,MAAMC,GAAW1U,EAAQvH,OACzBpH,EAAA8D,KAAeuf,GACf,MAAMC,GAAUpJ,EAAO9S,OACvBpH,EAAAujB,IAAcD,GACd,MAAME,GAAc9U,EAAWtH,OAC/BpH,EAAAuE,QAAkBif,GAClB,MAAMC,GAAYhV,EAASrH,OAC3BpH,EAAA+P,MAAgB0T,GAChB,MAAMC,GAAWlV,EAAQpH,OACzBpH,EAAAoP,KAAesU,GACf,MAAMC,GAAYpV,EAASnH,OAC3BpH,EAAAyC,MAAgBkhB,GAChB,MAAMC,GAAatV,EAAUlH,OAC7BpH,EAAA0B,OAAiBkiB,GACjB,MAAMC,GAAmBvV,EAAUuO,aACnC7c,EAAAuP,aAAuBsU,GACvB,MAAMC,GAAYzV,EAASjH,OAC3BpH,EAAAqP,MAAgByU,GAChB,MAAMC,GAAyB5G,EAAsB/V,OACrDpH,EAAA6M,mBAA6BkX,GAC7B,MAAMC,GAAmB5V,EAAgBhH,OACzCpH,EAAAmQ,aAAuB6T,GACvB,MAAMC,GAAY9V,EAAS/G,OAC3BpH,EAAAkkB,MAAgBD,GAChB,MAAME,GAAajW,EAAU9G,OAC7BpH,EAAAwP,OAAiB2U,GACjB,MAAMC,GAAUnW,EAAO7G,OACvBpH,EAAAuB,IAAc6iB,GACd,MAAMC,GAAUrW,EAAO5G,OACvBpH,EAAAoE,IAAcigB,GACd,MAAMC,GAAevW,EAAY3G,OACjCpH,EAAAyD,SAAmB6gB,GACnB,MAAMC,GAAWrH,EAAQ9V,OACzBpH,EAAAkQ,KAAeqU,GACf,MAAMC,GAAc1W,EAAW1G,OAC/BpH,EAAAiQ,QAAkBuU,GAClB,MAAMC,GAAW5W,EAAQzG,OACzBpH,EAAAoQ,KAAeqU,GACf,MAAMC,GAAiB9W,GAAcxG,OACrCpH,EAAAgQ,WAAqB0U,GACrB,MAAMC,GAAchX,GAAWvG,OAC/BpH,EAAAiE,QAAkB0gB,GAClB,MAAMC,GAAclX,GAAWtG,OAC/BpH,EAAAqQ,OAAiBuU,GACjB5kB,EAAAsP,YAAsBsV,GACtB,MAAMC,GAAe5Q,GAAY7M,OACjCpH,EAAA2P,SAAmBkV,GACnB,MAAMC,GAAetX,GAAYpG,OACjCpH,EAAA8P,SAAmBgV,GACnB,MAAMC,GAAiBrX,GAAWqU,qBAClC/hB,EAAAyP,WAAqBsV,GACrB,MAAMC,GAAerQ,GAAYvN,OACjCpH,EAAA0P,SAAmBsV,GAEnBhlB,EAAAilB,QADgB,IAAMpC,KAAalT,WAGnC3P,EAAA4P,QADgB,IAAMkT,KAAanT,WAGnC3P,EAAA6P,SADiB,IAAMoT,KAActT,WAErC3P,EAAiB8M,OAAA,CACb1J,OAAUqe,GAAQxS,EAAU7H,OAAO,IAAKqa,EAAK3U,QAAQ,IACrDvJ,OAAUke,GAAQ9I,EAAUvR,OAAO,IAAKqa,EAAK3U,QAAQ,IACrDtJ,QAAWie,GAAQ1S,EAAW3H,OAAO,IAC9Bqa,EACH3U,QAAQ,IAEZpJ,OAAU+d,GAAQzS,EAAU5H,OAAO,IAAKqa,EAAK3U,QAAQ,IACrDxI,KAAQmd,GAAQ3S,EAAQ1H,OAAO,IAAKqa,EAAK3U,QAAQ,KAErD9M,EAAgBmP,MAAAoB,EAAYjG,wBClrG5B,IAAI4a,EAAmB7f,GAAQA,EAAK6f,kBAAqBplB,OAAOsH,OAAM,SAAa+d,EAAGha,EAAG/J,EAAGgkB,QAC7EjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3BtB,OAAOC,eAAeolB,EAAGC,EAAI,CAAEC,YAAY,EAAM9H,IAAK,WAAa,OAAOpS,EAAE/J,EAAG,GAClF,EAAA,SAAc+jB,EAAGha,EAAG/J,EAAGgkB,QACTjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3B+jB,EAAEC,GAAMja,EAAE/J,EACb,GACGkkB,EAAgBjgB,GAAQA,EAAKigB,cAAiB,SAASna,EAAGnL,GAC1D,IAAK,IAAIwiB,KAAKrX,EAAa,YAANqX,GAAoB1iB,OAAO8B,UAAUC,eAAeC,KAAK9B,EAASwiB,IAAI0C,EAAgBllB,EAASmL,EAAGqX,EAC3H,EACA1iB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDqlB,EAAa1gB,EAAqB5E,GAClCslB,EAAahe,EAAgCtH,GAC7CslB,EAAa9U,EAAkCxQ,GAC/CslB,EAAa7U,EAA2BzQ,GACxCslB,EAAa5U,EAAoB1Q,GACjCslB,EAAaC,EAAuBvlB,mBChBpC,IAAIklB,EAAmB7f,GAAQA,EAAK6f,kBAAqBplB,OAAOsH,OAAM,SAAa+d,EAAGha,EAAG/J,EAAGgkB,QAC7EjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3BtB,OAAOC,eAAeolB,EAAGC,EAAI,CAAEC,YAAY,EAAM9H,IAAK,WAAa,OAAOpS,EAAE/J,EAAG,GAClF,EAAA,SAAc+jB,EAAGha,EAAG/J,EAAGgkB,QACTjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3B+jB,EAAEC,GAAMja,EAAE/J,EACb,GACGokB,EAAsBngB,GAAQA,EAAKmgB,qBAAwB1lB,OAAOsH,OAAM,SAAa+d,EAAGM,GACxF3lB,OAAOC,eAAeolB,EAAG,UAAW,CAAEE,YAAY,EAAMplB,MAAOwlB,GAClE,EAAI,SAASN,EAAGM,GACbN,EAAW,QAAIM,CACnB,GACIC,EAAgBrgB,GAAQA,EAAKqgB,cAAiB,SAAUjc,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIwH,EAAS,CAAA,EACb,GAAW,MAAPxH,EAAa,IAAK,IAAIrI,KAAKqI,EAAe,YAANrI,GAAmBtB,OAAO8B,UAAUC,eAAeC,KAAK2H,EAAKrI,IAAI8jB,EAAgBjU,EAAQxH,EAAKrI,GAEtI,OADAokB,EAAmBvU,EAAQxH,GACpBwH,CACX,EACIqU,EAAgBjgB,GAAQA,EAAKigB,cAAiB,SAASna,EAAGnL,GAC1D,IAAK,IAAIwiB,KAAKrX,EAAa,YAANqX,GAAoB1iB,OAAO8B,UAAUC,eAAeC,KAAK9B,EAASwiB,IAAI0C,EAAgBllB,EAASmL,EAAGqX,EAC3H,EACA1iB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAY2lB,OAAA,EACZ,MAAMA,EAAID,EAAa9gB,GACvB5E,EAAA2lB,EAAYA,EACZL,EAAa1gB,EAAuB5E,GACpCA,EAAAuH,QAAkBoe,4BCkGlB,IAAWC,EASAC,EAEIC,EAUJC,EAQAC,EAUAC,EApJXnmB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAAimB,IAAcjmB,UAAkBA,EAAc+lB,IAAA/lB,EAAA6lB,gBAA0B7lB,SAAiBA,EAAkBkmB,aAAA,EAE3G,SAAWA,GAEP,IAAIC,GACJ,SAAWA,GAEPA,EAA2B,gBAAI,mBAC/BA,EAA4B,iBAAI,qBAChCA,EAAuB,YAAI,gBAC3BA,EAAuB,YAAI,gBAC3BA,EAAwB,aAAI,iBAC5BA,EAAsB,WAAI,eAC1BA,EAAwB,aAAI,iBAC5BA,EAA6B,kBAAI,sBACjCA,EAA0B,eAAI,kBAC9BA,EAAwB,aAAI,gBAC5BA,EAAgC,qBAAI,uBAEvC,CAdD,CAcGA,EAAYD,EAAQC,YAAcD,EAAQC,UAAY,CAAE,IAC3D,MAAMC,EACF7f,MACAJ,QACAkgB,WACAnhB,YAAYqB,EAAOJ,EAASkgB,GACxBhhB,KAAKkB,MAAQA,EACblB,KAAKc,QAAUA,EACfd,KAAKghB,WAAaA,CACrB,CACDC,gBAAgBC,GACZ,MAAO,CACHC,GAAID,EACJhgB,MAAOlB,KAAKkB,MACZJ,QAASd,KAAKc,QACdkgB,WAAYhhB,KAAKghB,WAExB,EAELH,EAAQE,cAAgBA,EAMxBF,EAAQO,yBALR,cAAuCL,EACnClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUO,gBAAiBvgB,EAASkgB,EAC7C,GAQLH,EAAQS,sBALR,cAAoCP,EAChClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUS,aAAczgB,EAASkgB,EAC1C,GAQLH,EAAQW,0BALR,cAAwCT,EACpClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUW,iBAAkB3gB,EAASkgB,EAC9C,GAQLH,EAAQa,qBALR,cAAmCX,EAC/BlhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUa,YAAa7gB,EAASkgB,EACzC,GAQLH,EAAQe,qBALR,cAAmCb,EAC/BlhB,YAAYiB,GACRf,MAAM+gB,EAAUe,YAAa/gB,EAChC,GAQL+f,EAAQiB,oBALR,cAAkCf,EAC9BlhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUiB,WAAYjhB,EAASkgB,EACxC,GAQLH,EAAQmB,sBALR,cAAoCjB,EAChClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUmB,aAAcnhB,EAASkgB,EAC1C,GAQLH,EAAQqB,2BALR,cAAyCnB,EACrClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUqB,kBAAmBrhB,EAASkgB,EAC/C,GAQLH,EAAQuB,wBALR,cAAsCrB,EAClClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUuB,eAAgBvhB,EAASkgB,EAC5C,GAQLH,EAAQyB,sBALR,cAAoCvB,EAChClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAUyB,aAAczhB,EAASkgB,EAC1C,GAQLH,EAAQ2B,8BALR,cAA4CzB,EACxClhB,YAAYiB,EAASkgB,GACjBjhB,MAAM+gB,EAAU2B,qBAAsB3hB,EAASkgB,EAClD,EAGR,CAvGD,CAuGarmB,EAAQkmB,UAAYlmB,EAAkBkmB,QAAA,CAAA,MAGxCN,EAMC5lB,EAAQ4lB,SAAW5lB,EAAiB4lB,OAAA,CAAA,IAFrBE,aAAeF,EAAOE,WAAa,CAAA,IAD7B,aAAI,iBAEjCF,EAAOmC,UAAY,SAIZlC,EASU7lB,EAAQ6lB,kBAAoB7lB,EAA0B6lB,gBAAA,CAAA,IAP5DC,EAKKD,EAAgBC,aAAeD,EAAgBC,WAAa,CAAA,IAJlD,UAAI,uBAC1BA,EAAkC,sBAAI,mCACtCA,EAAgC,oBAAI,iCACpCA,EAAkC,sBAAI,mCAE1CD,EAAgBkC,UAAY,mBAIrBhC,EAMF/lB,EAAQ+lB,MAAQ/lB,EAAc+lB,IAAA,CAAA,IAL/BgC,UAAY,MAEhB,SAAWjC,GACPA,EAA+B,mBAAI,gBACtC,CAFD,CAEgBC,EAAID,aAAeC,EAAID,WAAa,CAAA,KAG7CE,EAQEhmB,EAAQgmB,UAAYhmB,EAAkBgmB,QAAA,CAAA,IAPvC+B,UAAY,UAEpB,SAAWjC,GACPA,EAAmC,uBAAI,4BACvCA,EAAmC,uBAAI,4BACvCA,EAA4B,gBAAI,oBACnC,CAJD,CAIgBE,EAAQF,aAAeE,EAAQF,WAAa,CAAA,KAGrDG,EAMFjmB,EAAQimB,MAAQjmB,EAAcimB,IAAA,CAAA,IAL/B8B,UAAY,MAEhB,SAAWjC,GACPA,EAA+B,mBAAI,mBACtC,CAFD,CAEgBG,EAAIH,aAAeG,EAAIH,WAAa,CAAA,oBCzJxDhmB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAAgoB,QAAkBhoB,MAAcA,EAA0B6lB,gBAAA7lB,EAAA4lB,OAAiB5lB,kBAA0BA,EAAsBioB,iBAAA,EAK3H,MAAMC,EAAQtjB,EACRujB,EAAgB7gB,EAEtB,SAAS2gB,EAAYnnB,EAAKiT,GACtB,MAAMqU,EAAcrU,EAAO/B,UAAUlR,GACrC,GAAIsnB,EAAYlX,QACZ,OAAOkX,EAAYllB,KAEvB,MAAM+H,EAAemd,EAAY7hB,MAAMT,OAClCvE,KAAKC,GAAM,GAAGA,EAAE2E,cACd3E,EAAEoF,KAAKrF,KAAKihB,GAAMzd,KAAKC,UAAUwd,KAAI7f,KAAK,UAC5CA,KAAK,KACV,MAAM,IAAIwlB,EAAcjC,QAAQO,yBAAyBxb,EAC5D,CAED,IAAIod,EADJroB,EAAAioB,YAAsBA,EAEtB,SAAWI,GACPA,EAAgBC,sBAAwBJ,EAAMvC,EAAEjkB,OAAO,CACnD6mB,SAAUL,EAAMvC,EAAEviB,SAASwS,IAAI,GAC/B4S,OAAQN,EAAMvC,EAAEviB,SAASuM,aAE7B0Y,EAAgBI,sBAAwBP,EAAMvC,EAAEjkB,OAAO,CACnD8mB,OAAQN,EAAMvC,EAAEviB,SAASwS,IAAI,KAKjC,MAAM8S,EAAuBR,EAAMvC,EAAEjkB,OAAO,CAAEkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,eAI9D0Y,EAAkBT,EAAMvC,EAAEjkB,OAAO,CAAEkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UAKzD2Y,EAAoBV,EAAMvC,EAAEjkB,OAAO,CACrCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UACtBhQ,MAAOioB,EAAMvC,EAAEviB,WAGbylB,EAAsBX,EAAMvC,EAAEvV,KAAK,CAAC,MAAO,KAAM,WAAY,cAK7D0Y,EAAoBZ,EAAMvC,EAAEjkB,OAAO,CACrCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UACtBhQ,MAAOioB,EAAMvC,EAAEtW,MAAM,CAACwZ,EAAqBX,EAAMvC,EAAEpiB,aAMjDwlB,EAAqBb,EAAMvC,EAAEjkB,OAAO,CACtCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,WACtBhQ,MAAOioB,EAAMvC,EAAEniB,YAMbwlB,EAAoBd,EAAMvC,EAAEjkB,OAAO,CACrCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UACtBhQ,MAAOioB,EAAMvC,EAAEviB,WAEb6lB,EAA+Bf,EAAMvC,EAAEtW,MAAM,CAC/CqZ,EACAC,EACAC,EACAE,EACAC,EACAC,IAEJX,EAAgBa,iBAAmBhB,EAAMvC,EAAEzV,MAAK,IAAMgY,EAAMvC,EAAEtW,MAAM,CAChE4Z,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,MAIJ,MAAMC,EAA2BvB,EAAMvC,EAAEtW,MAAM,CAC3CgZ,EAAgBC,sBAChBD,EAAgBI,sBAChBJ,EAAgBa,mBAGdQ,EAAuBxB,EAAMvC,EAAEljB,MAAMgnB,GAKrCN,EAAwBjB,EAAMvC,EAAEjkB,OAAO,CACzCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,SACtBhQ,MAAOypB,IAMLN,EAAuBlB,EAAMvC,EAAEjkB,OAAO,CACxCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,QACtBhQ,MAAOioB,EAAMvC,EAAEviB,SAASwS,IAAI,KAG1B+T,EAA0BzB,EAAMvC,EAAEzB,MAAM,CAC1CgE,EAAMvC,EAAEtW,MAAM,CAAC6Y,EAAMvC,EAAEviB,SAAUqmB,IACjCA,IAMEJ,EAAsBnB,EAAMvC,EAAEjkB,OAAO,CACvCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,OACtBhQ,MAAOioB,EAAMvC,EAAEljB,MAAMknB,KAMnBL,EAAyBpB,EAAMvC,EAAEjkB,OAAO,CAC1CkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UACtBhQ,MAAOioB,EAAMvC,EAAEljB,MAAMknB,KAMnBJ,EAAyBrB,EAAMvC,EAAEjkB,OAAO,CAC1CkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,UACtBhQ,MAAOioB,EAAMvC,EAAEjkB,OAAO,CAClBkoB,QAAS1B,EAAMvC,EAAEviB,SACjBymB,MAAO3B,EAAMvC,EAAEviB,SAASuM,eAO1B6Z,EAAsBtB,EAAMvC,EAAEzV,MAAK,IAAMgY,EAAMvC,EAAEjkB,OAAO,CAC1DkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,OACtBhQ,MAAOypB,MAGXrB,EAAgByB,sBAAwB5B,EAAMvC,EAAEviB,SAChDilB,EAAgB0B,eAAiB7B,EAAMvC,EAAEpiB,SAAS0V,MAAMI,cAAchC,IApJ1D,iBAqJf,CAvID,CAuIGgR,EAAkBroB,EAAQqoB,kBAAoBroB,EAA0BqoB,gBAAA,CAAE,IAG7E,SAAWzC,GACP,MAAMoE,EAAkB9B,EAAMvC,EAAEvV,KAAK,CACjC,SACA,mBACA,gBACA,iBACA,SACA,gBACA,gBACA,YAEJwV,EAAOqE,0BAA4B/B,EAAMvC,EAAEjkB,OAAO,CAC9CwoB,QAAS7B,EAAgByB,sBAAsBna,WAC/C/G,KAAMohB,EAAgBra,aAK1BiW,EAAOuE,qBAHP,SAA8Bvf,GAC1B,OAAOqd,EAAYrd,EAAQgb,EAAOqE,0BACrC,EAMD,MAAMG,EAAsBlC,EAAMvC,EAAEjkB,OAAO,CACvCwoB,QAAS7B,EAAgByB,sBACzBO,QAASnC,EAAMvC,EAAEviB,SAASuM,aAGxB2a,EAAoBpC,EAAMvC,EAAEjkB,OAAO,CACrC6oB,MAAOrC,EAAMvC,EAAEviB,SAASwS,IAAI,KAQ1B4U,EAAetC,EAAMvC,EAAEtW,MAAM,CAACib,EAAmBF,IAEjDK,EAAwBvC,EAAMvC,EAAEvV,KAAK,CAAC,OAAQ,SAO9Csa,EAA2BxC,EAAMvC,EAAEjkB,OAAO,CAC5CipB,WAAYzC,EAAMvC,EAAEviB,SACpBwnB,aAAc1C,EAAMvC,EAAEniB,UACtBkR,OAAQ8V,EACRK,gBAAiBJ,EAAsB9a,aAK3CiW,EAAOkF,oBAHP,SAA6BlgB,GACzB,OAAOqd,EAAYrd,EAAQ8f,EAC9B,EAMD,MAAMK,EAAyB7C,EAAMvC,EAAEjkB,OAAO,CAC1CgT,OAAQ8V,EACRQ,QAAS9C,EAAMvC,EAAEljB,MAAMylB,EAAMvC,EAAEviB,YAKnCwiB,EAAOqF,kBAHP,SAA2BrgB,GACvB,OAAOqd,EAAYrd,EAAQmgB,EAC9B,EAED,MAAMG,EAAgBhD,EAAMvC,EAAEviB,SACxB+nB,EAA0BjD,EAAMvC,EAAEjkB,OAAO,CAC3C0pB,QAASF,EAGTG,SAAUnD,EAAMvC,EAAEpiB,SAAS0V,MAAMrD,IAAI,GAAGyB,IAAI,GAAG1H,WAC/C2b,UAAWb,EAAsB9a,aAErCiW,EAAO2F,mBAAqBrD,EAAMvC,EAAEjkB,OAAO,CACvCkH,KAAMsf,EAAMvC,EAAE1V,QAAQ,WACtBhQ,MAAOkrB,IAEXvF,EAAO4F,oBAAsBtD,EAAMvC,EAAEviB,SACrCwiB,EAAO6F,iCAAmCvD,EAAMvC,EAAEjkB,OAAO,CACrDgqB,oBAAqBxD,EAAMvC,EAAEviB,SAC7BoS,UAAW0S,EAAMvC,EAAEljB,MAAMmjB,EAAO2F,oBAAoB5b,WACpD0a,QAASnC,EAAMvC,EAAEviB,SAASuM,WAC1Bua,QAAS7B,EAAgByB,sBAAsBna,aAKnDiW,EAAO+F,4BAHP,SAAqC/gB,GACjC,OAAOqd,EAAYrd,EAAQgb,EAAO6F,iCACrC,EAED7F,EAAOgG,oCAAsC1D,EAAMvC,EAAEjkB,OAAO,CACxDmqB,OAAQjG,EAAO4F,sBAKnB5F,EAAOkG,+BAHP,SAAwClhB,GACpC,OAAOqd,EAAYrd,EAAQgb,EAAOgG,oCACrC,EAOD,MAAMG,EAAsB7D,EAAMvC,EAAEtW,MAAM,CACtCgZ,EAAgBI,sBAChBJ,EAAgBC,sBAChBD,EAAgBa,iBAChBtD,EAAO2F,qBAULS,EAA+B9D,EAAMvC,EAAEjkB,OAAO,CAChDgqB,oBAAqBxD,EAAMvC,EAAEviB,SAC7BsR,OAAQ8V,EACRhV,UAAW0S,EAAMvC,EAAEljB,MAAMspB,GAAqBpc,WAC9CtK,KAAM0mB,EAAoBpc,WAC1Bib,aAAc1C,EAAMvC,EAAEniB,UACtBqnB,gBAAiBJ,EAAsB9a,aAK3CiW,EAAOqG,wBAHP,SAAiCrhB,GAC7B,OAAOqd,EAAYrd,EAAQohB,EAC9B,CAEJ,CAjID,CAiIYhsB,EAAQ4lB,SAAW5lB,EAAiB4lB,OAAA,CAAA,IAGhD,SAAWC,GAKP,MAAMqG,EAA0BhE,EAAMvC,EAAEjkB,OAAO,CAC3C2pB,SAAUhD,EAAgB0B,eAAepa,WACzCwc,KAAM9D,EAAgByB,sBAAsBna,aAKhDkW,EAAgBuG,mBAHhB,SAA4BxhB,GACxB,OAAOqd,EAAYrd,EAAQshB,EAC9B,EAGD,MAAMG,EAAuBnE,EAAMvC,EAAEvV,KAAK,CAAC,OAAQ,cAAe,aAO5Dkc,EAA2BpE,EAAMvC,EAAEjkB,OAAO,CAC5CwoB,QAAS7B,EAAgByB,sBACzBjT,IAAKqR,EAAMvC,EAAEviB,SAASyT,MACtB0V,KAAMF,EAAqB1c,aAK/BkW,EAAgB2G,oBAHhB,SAA6B5hB,GACzB,OAAOqd,EAAYrd,EAAQ0hB,EAC9B,EAMD,MAAMG,EAAyBvE,EAAMvC,EAAEjkB,OAAO,CAC1CkH,KAAMsf,EAAMvC,EAAEvV,KAAK,CAAC,MAAO,WAC3Bsc,iBAAkBrE,EAAgByB,sBAAsBna,aAK5DkW,EAAgB8G,kBAHhB,SAA2B/hB,GACvB,OAAOqd,EAAYrd,EAAQ6hB,EAC9B,EAKD,MAAMG,EAAwB1E,EAAMvC,EAAEjkB,OAAO,CACzCwoB,QAAS7B,EAAgByB,wBAK7BjE,EAAgBgH,iBAHhB,SAA0BjiB,GACtB,OAAOqd,EAAYrd,EAAQgiB,EAC9B,EAKD,MAAME,EAAoC5E,EAAMvC,EAAEjkB,OAAO,CACrDwoB,QAAS7B,EAAgByB,wBAK7BjE,EAAgBkH,6BAHhB,SAAsCniB,GAClC,OAAOqd,EAAYrd,EAAQkiB,EAC9B,EAOD,MAAME,EAA4B9E,EAAMvC,EAAEjkB,OAAO,CAC7CurB,OAAQ/E,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,OAAOoI,WACjDud,MAAOhF,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,OAAOoI,aAS9Cwd,EAA8BjF,EAAMvC,EAAEjkB,OAAO,CAC/C0rB,OAAQlF,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,GAAKoI,WAC/CgP,KAAMuJ,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,GAAKoI,WAC7CiP,MAAOsJ,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,GAAKoI,WAC9C0d,IAAKnF,EAAMvC,EAAEpiB,SAASqS,IAAI,GAAKrO,QAAQ,GAAKoI,aAG1C2d,EAAwBpF,EAAMvC,EAC/BljB,MAAMylB,EAAMvC,EAAEtW,MAAM,CAAC6Y,EAAMvC,EAAEviB,SAASwS,IAAI,GAAIsS,EAAMvC,EAAEpiB,SAAS0V,MAAMI,iBACrEnH,QAAQqb,GACFA,EAAWC,OAAOC,IACrB,MAAMC,EAAQxX,OAAOuX,GAAWC,MAEhC,wEAEMC,MAAEA,EAAKC,IAAEA,GAAQF,GAAOG,QAAU,CAAA,EACxC,QAAIF,GAASC,GAAOxrB,OAAOurB,GAASvrB,OAAOwrB,KAGpCF,CAAK,MAadI,EAAwB5F,EAAMvC,EAAEjkB,OAAO,CACzCwoB,QAAS7B,EAAgByB,sBACzBiE,WAAY7F,EAAMvC,EAAEniB,UAAU+D,SAAQ,GAAOoI,WAC7Cqe,OAAQb,EAA4Bxd,WACpCse,YAAa/F,EAAMvC,EACdvV,KAAK,CAAC,WAAY,cAClB7I,QAAQ,YACRoI,WACLue,KAAMlB,EAA0Brd,WAChC4d,WAAYD,EAAsB/lB,QAAQ,IAAIoI,WAC9Cwe,MAAOjG,EAAMvC,EAAEpiB,SAASqS,IAAI,IAAKyB,IAAI,GAAK9P,QAAQ,GAAKoI,WACvDye,YAAalG,EAAMvC,EAAEniB,UAAU+D,SAAQ,GAAMoI,aAKjDkW,EAAgBwI,iBAHhB,SAA0BzjB,GACtB,OAAOqd,EAAYrd,EAAQkjB,EAC9B,CAEJ,CA/HD,CA+HqB9tB,EAAQ6lB,kBAAoB7lB,EAA0B6lB,gBAAA,CAAA,IAE3E,SAAWI,GACP,MAAMqI,EAA0BpG,EAAMvC,EAAEjkB,OAAO,CAE3C6sB,UAAWrG,EAAMvC,EAAEviB,SAGnBorB,UAAWtG,EAAMvC,EAAEjkB,OAAO,CAAE,GAAEsZ,cAC9ByT,WAAYvG,EAAMvC,EAAEviB,SAASuM,aAKjCsW,EAAIyI,uBAHJ,SAAgC9jB,GAC5B,OAAOqd,EAAYrd,EAAQ0jB,EAC9B,EAED,MAAMK,EAAyBzG,EAAMvC,EAAEjkB,OAAO,CAC1CwoB,QAAS7B,EAAgByB,wBAK7B7D,EAAI2I,sBAHJ,SAA+BhkB,GAC3B,OAAOqd,EAAYrd,EAAQ+jB,EAC9B,CAEJ,CApBD,CAoBS3uB,EAAQimB,MAAQjmB,EAAcimB,IAAA,CAAA,IAGvC,SAAW+B,GACP,MAAM6G,EAA4C3G,EAAMvC,EAAEvV,KAAK,CAC3D+X,EAActC,gBAAgBkC,aAC3BjoB,OAAOigB,OAAOoI,EAActC,gBAAgBC,YAC/CqC,EAAcpC,IAAIgC,aACfjoB,OAAOigB,OAAOoI,EAAcpC,IAAID,YACnCqC,EAAclC,IAAI8B,aACfjoB,OAAOigB,OAAOoI,EAAclC,IAAIH,YACnCqC,EAAcnC,QAAQ+B,aACnBjoB,OAAOigB,OAAOoI,EAAcnC,QAAQF,YACvCqC,EAAcvC,OAAOmC,aAClBjoB,OAAOigB,OAAOoI,EAAcvC,OAAOE,cAMpCgJ,EAAsC5G,EAAMvC,EAAEjkB,OAAO,CACvDqtB,OAAQ7G,EAAMvC,EAAEljB,MAAMosB,GACtBG,SAAU9G,EAAMvC,EAAEljB,MAAM4lB,EAAgByB,uBAAuBna,aAKnEqY,EAAQiH,qBAHR,SAA8BrkB,GAC1B,OAAOqd,EAAYrd,EAAQkkB,EAC9B,CAEJ,CAzBD,CAyBa9uB,EAAQgoB,UAAYhoB,EAAkBgoB,QAAA,CAAA,sBCre/Cxe,EAAmBnE,GAAQA,EAAKmE,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAElC,QAAWkC,EACxD,EACA3J,OAAOC,eAAemvB,EAAS,aAAc,CAAEjvB,OAAO,IAClCivB,EAAAC,kBAAG,EAiBvB,MAAMC,EAAS5lB,GCtBA,SAAS6lB,GAAG,MAAM,CAAC/U,IAAI+U,EAAEA,GAAG,IAAInrB,IAAIorB,GAAG,SAAS9tB,EAAE+tB,GAAG,IAAIxoB,EAAEsoB,EAAE9R,IAAI/b,GAAGuF,EAAEA,EAAEhF,KAAKwtB,GAAGF,EAAEjrB,IAAI5C,EAAE,CAAC+tB,GAAG,EAAEC,IAAI,SAAShuB,EAAE+tB,GAAG,IAAIxoB,EAAEsoB,EAAE9R,IAAI/b,GAAGuF,IAAIwoB,EAAExoB,EAAE0oB,OAAO1oB,EAAEoX,QAAQoR,KAAK,EAAE,GAAGF,EAAEjrB,IAAI5C,EAAE,IAAI,EAAEkuB,KAAK,SAASluB,EAAE+tB,GAAG,IAAIxoB,EAAEsoB,EAAE9R,IAAI/b,GAAGuF,GAAGA,EAAEqE,QAAQ7J,KAAI,SAAS8tB,GAAGA,EAAEE,EAAE,KAAIxoB,EAAEsoB,EAAE9R,IAAI,OAAOxW,EAAEqE,QAAQ7J,KAAI,SAAS8tB,GAAGA,EAAE7tB,EAAE+tB,EAAE,GAAE,EAAE,IDyDrSI,EAAAR,aAlCpB,MACIS,IAAW,EAAIR,EAAO7nB,WACtB+nB,GAAG1mB,EAAMinB,GAEL,OADAxqB,MAAKuqB,EAASN,GAAG1mB,EAAMinB,GAChBxqB,IACV,CAODyqB,KAAKC,EAAOF,GACR,MAAMG,EAAeC,IACjBJ,EAAQI,GACR5qB,KAAKmqB,IAAIO,EAAOC,EAAY,EAEhC,OAAO3qB,KAAKiqB,GAAGS,EAAOC,EACzB,CACDR,IAAI5mB,EAAMinB,GAEN,OADAxqB,MAAKuqB,EAASJ,IAAI5mB,EAAMinB,GACjBxqB,IACV,CAQDqqB,KAAKK,EAAOE,GACR5qB,MAAKuqB,EAASF,KAAKK,EAAOE,EAC7B,yBEnCL,IAAWC,EAHXpwB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAkBkwB,aAAA,GAEPA,EAOElwB,EAAQkwB,UAAYlwB,EAAkBkwB,QAAA,CAAA,IALjC,KAAI,gBAClBA,EAA0B,iBAAI,oBAC9BA,EAAa,IAAI,MACjBA,EAAgB,OAAI,sBCRxBpwB,OAAOC,eAAeowB,EAAS,aAAc,CAAElwB,OAAO,IAC/BkwB,EAAAC,qBAAG,EAC1B,MAAMC,EAAWzrB,EAkCMurB,EAAAC,gBAjCvB,MACIE,GACAC,GACAC,GAAS,GAETC,IAAgB,EAChBvrB,YAAYqrB,EAAWD,GACnBjrB,MAAKkrB,EAAaA,EAClBlrB,MAAKirB,EAAUA,CAClB,CACDxQ,IAAI4Q,GACArrB,MAAKmrB,EAAOzuB,KAAK2uB,GAEZrrB,MAAKsrB,GACb,CACDnd,UACI,IAAInO,MAAKorB,EAAT,CAIA,IADAprB,MAAKorB,GAAgB,EACdprB,MAAKmrB,EAAO3pB,OAAS,GAAG,CAC3B,MAAM+pB,EAAevrB,MAAKmrB,EAAOK,aACZ1tB,IAAjBytB,SACMA,EACD7sB,MAAM2sB,GAAUrrB,MAAKkrB,EAAWG,KAChC1sB,OAAOxC,IACR6D,MAAKirB,IAAUD,EAASH,QAAQY,OAAQ,2BAA4BtvB,EAAE,GAGjF,CACD6D,MAAKorB,GAAgB,CAZpB,CAaJ,2BClCL3wB,OAAOC,eAAegxB,EAAS,aAAc,CAAE9wB,OAAO,IAClC8wB,EAAAC,kBAAG,EAKHD,EAAAC,aAHpB,SAAsBC,GAClB,OAAOA,EAAK,IAChB,WCLAnxB,OAAOC,eAAemxB,EAAS,aAAc,CAAEjxB,OAAO,IACtCixB,EAAAC,cAAG,EACnB,MAAMA,EACFC,IAAc,EACdntB,GACAqP,GAAW,OACX+d,GAAU,OACND,iBACA,OAAO/rB,MAAK+rB,CACf,CACDlsB,cACIG,MAAKpB,EAAW,IAAIwI,SAAQ,CAAC6G,EAAS+d,KAClChsB,MAAKiO,EAAWA,EAChBjO,MAAKgsB,EAAUA,CAAM,IAIzBhsB,MAAKpB,EAASD,OAAM,QACvB,CACDD,KAAKutB,EAAaC,GACd,OAAOlsB,MAAKpB,EAASF,KAAKutB,EAAaC,EAC1C,CACDvtB,MAAMutB,GACF,OAAOlsB,MAAKpB,EAASD,MAAMutB,EAC9B,CACDje,QAAQrT,GACJoF,MAAK+rB,GAAc,EACnB/rB,MAAKiO,EAASrT,EACjB,CACDoxB,OAAOG,GACHnsB,MAAK+rB,GAAc,EACnB/rB,MAAKgsB,EAAQG,EAChB,CACDC,QAAQC,GACJ,OAAOrsB,MAAKpB,EAASwtB,QAAQC,EAChC,CACD,CAACvP,OAAOwP,aAAe,UAEXT,EAAAC,SAAGA,6BCtDnBrxB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAA0B4xB,gBAAA5xB,EAAA6xB,uBAA4B,EACtD,MAAM1J,EAAgBvjB,EAKtB5E,EAAA6xB,kBAA4B,YAC5B,MAAMD,EACFE,GACA5sB,YAAY4sB,GACRzsB,MAAKysB,EAAgBA,CACxB,CAQDjmB,6BAA6BkmB,EAAWxH,GAUpC,aAT8BA,EAAMyH,UAAUC,YAAY,yBAA0B,CAChFvG,oBAAqBxV,QAAQpV,GAClBoV,OAAOpV,KAElB8pB,cAAc,EACdpV,UAAW,CAACuc,GACZG,eAAe,EACfC,mBAAoB5H,EAAM4H,sBAEPlhB,OAAOhR,KACjC,CAQDuT,yBAAyB4e,EAAiBvH,EAAiBN,GACvD,MAAM9I,EAAMmQ,GAAgBS,EAA+BD,GACrDE,QAA0B/H,EAAMyH,UAAUC,YAAY,yBAA0B,CAClFvG,oBAAqBxV,QAAQpV,GAAQA,IACrC8pB,cAAc,EACdpV,UAAW,CAACiM,GACZ8Q,wBAAwB,EACxBJ,mBAAoB5H,EAAM4H,qBAE9B,OAAO5H,EAAMiI,eAAeF,EAAmBzH,EAClD,CACDrX,qBAAqB+W,EAAOI,EAAYC,EAAcC,GAClD,MAAM4H,QAA0BlI,EAAMyH,UAAUC,YAAY,mBAAoB,CAC5ES,UAAWnI,EAAM4H,mBACjBxH,aACAC,eACA2H,wBAAwB,IAE5B,OAAIE,EAAkBE,iBAEX,CACHA,uBAAwBttB,MAAKutB,EAA8BH,EAAkBE,iBAtDrD,EAsDwG9H,EAAiBN,GACjJ3hB,KAAM,YACN2hB,MAAOA,EAAMsI,SAGd,CACHjqB,KAAM,UACNqI,OAAQsZ,EAAMiI,eAAeC,EAAmB5H,GAChDN,MAAOA,EAAMsI,QAEpB,CACDrf,mBAAmB+W,EAAOmB,EAAqBoH,EAAOC,EAAYnI,EAAcC,GAC5E,MAAMmI,EAAiC,wCAAwCtH,uNAMzEuH,EAAuB,OACnB5tB,MAAK6tB,EAAqBJ,EAAOvI,IAK3C,IAAI4I,EAHJF,EAAqBlxB,cAAe0K,QAAQ6N,IAAIyY,EAAWxxB,KAAIiS,MAAOoK,GAC3DvY,MAAK6tB,EAAqBtV,EAAG2M,OAGxC,IACI4I,QAA8B5I,EAAMyH,UAAUC,YAAY,yBAA0B,CAChFvG,oBAAqBsH,EACrBpI,eACApV,UAAWyd,EACXV,wBAAwB,EACxBJ,mBAAoB5H,EAAM4H,oBAEjC,CACD,MAAO3wB,GAIH,IAAgB,OAAZA,EAAEgF,MACF,CACI,sCACA,uEACA,4BACF+B,SAAS/G,EAAE2E,SACb,MAAM,IAAIgiB,EAAcjC,QAAQS,sBAAsB,yBAE1D,MAAMnlB,CACT,CACD,OAAI2xB,EAAsBR,iBAEf,CACHA,uBAAwBttB,MAAKutB,EAA8BO,EAAsBR,iBA1GpD,EA0G4G9H,EAAiBN,GAC1J3hB,KAAM,YACN2hB,MAAOA,EAAMsI,SAGd,CACHjqB,KAAM,UACNqI,OAAQsZ,EAAMiI,eAAeW,EAAuBtI,GACpDN,MAAOA,EAAMsI,QAEpB,CACDhnB,SAAsCumB,GAClC,YAAiCjvB,IAA7BivB,EAAgBgB,SACT,CAAEA,SAAUhB,EAAgBgB,eAEKjwB,IAAxCivB,EAAgBiB,oBACT,CAAEA,oBAAqBjB,EAAgBiB,qBAE3C,CAAEpzB,MAAOmyB,EAAgBnyB,MACnC,CACDuT,QAA2B8f,EAAe/I,GACtC,GAAI,aAAc+I,EAAe,CAC7B,MAAOC,EAAaC,GAAoBF,EAAc/K,SAASlQ,MAAMrY,EAAQ6xB,mBACvE4B,EAAgBjb,SAASgb,GAAoB,IACnD,GAAInwB,MAAMowB,SACYtwB,IAAlBswB,QACgBtwB,IAAhBowB,EACA,MAAM,IAAIpL,EAAcjC,QAAQO,yBAAyB,aAAa6M,EAAc/K,8CAA8CvoB,EAAQ6xB,sCAE9I,GAAItH,EAAMgJ,cAAgBA,EACtB,MAAM,IAAIpL,EAAcjC,QAAQiB,oBAAoB,aAAamM,EAAc/K,gEAAgEgC,EAAMgJ,gBAEzJ,IAMI,MAAO,CAAEH,gBALS7I,EAAMyH,UAAUC,YAAY,kBAAmB,CAC7DwB,gBACAtB,mBAAoB5H,EAAM4H,sBAGPzwB,OAAO0xB,SACjC,CACD,MAAO5xB,GAGH,IAAgB,OAAZA,EAAEgF,MAAiC,gCAAdhF,EAAE2E,QACvB,MAAM,IAAIgiB,EAAcjC,QAAQiB,oBAAoB,aAAamM,EAAc/K,4BAEnF,MAAM/mB,CACT,CACJ,CACD,GAAI,WAAY8xB,EACZ,MAAO,CAAEF,SAAUE,EAAc9K,QAErC,OAAQ8K,EAAc1qB,MAGlB,IAAK,YACD,MAAO,CAAEyqB,oBAAqB,aAClC,IAAK,OACD,MAAO,CAAEA,oBAAqB,QAClC,IAAK,SACD,MAAO,CAAEpzB,MAAOqzB,EAAcrzB,OAClC,IAAK,SACD,MAA4B,QAAxBqzB,EAAcrzB,MACP,CAAEozB,oBAAqB,OAED,OAAxBC,EAAcrzB,MACZ,CAAEozB,oBAAqB,MAED,aAAxBC,EAAcrzB,MACZ,CAAEozB,oBAAqB,YAED,cAAxBC,EAAcrzB,MACZ,CAAEozB,oBAAqB,aAE3B,CACHpzB,MAAOqzB,EAAcrzB,OAE7B,IAAK,UACD,MAAO,CAAEA,MAAO6Z,QAAQwZ,EAAcrzB,QAC1C,IAAK,SACD,MAAO,CACHozB,oBAAqB,UAAUtuB,KAAKC,UAAUsuB,EAAcrzB,WAEpE,IAAK,OACD,MAAO,CACHozB,oBAAqB,uBAAuBtuB,KAAKC,UAAUsuB,EAAcrzB,YAEjF,IAAK,SACD,MAAO,CACHozB,oBAAqB,cAActuB,KAAKC,UAAUsuB,EAAcrzB,MAAM2pB,aAAa7kB,KAAKC,UAAUsuB,EAAcrzB,MAAM4pB,WAE9H,IAAK,MAAO,CAGR,MAAM6J,QAAsBruB,MAAKsuB,EAAsBL,EAAcrzB,MAAOsqB,GACtEqJ,QAAsBrJ,EAAMyH,UAAUC,YAAY,yBAA0B,CAC9EvG,oBAAqBxV,QAAO,IAAIK,KAC5B,MAAMtF,EAAS,IAAI/M,IACnB,IAAK,IAAI6C,EAAI,EAAGA,EAAIwP,EAAK1P,OAAQE,GAAK,EAClCkK,EAAO7M,IAAImS,EAAKxP,GAAIwP,EAAKxP,EAAI,IAEjC,OAAOkK,CAAM,IAEjB2Z,cAAc,EACdpV,UAAWke,EACXxB,eAAe,EACfC,mBAAoB5H,EAAM4H,qBAG9B,MAAO,CAAEiB,SAAUQ,EAAc3iB,OAAOmiB,SAC3C,CACD,IAAK,SAAU,CAGX,MAAMM,QAAsBruB,MAAKsuB,EAAsBL,EAAcrzB,MAAOsqB,GACtEqJ,QAAsBrJ,EAAMyH,UAAUC,YAAY,yBAA0B,CAC9EvG,oBAAqBxV,QAAO,IAAIK,KAC5B,MAAMtF,EAAS,CAAA,EACf,IAAK,IAAIlK,EAAI,EAAGA,EAAIwP,EAAK1P,OAAQE,GAAK,EAAG,CAGrCkK,EADYsF,EAAKxP,IACHwP,EAAKxP,EAAI,EAC1B,CACD,OAAOkK,CAAM,IAEjB2Z,cAAc,EACdpV,UAAWke,EACXxB,eAAe,EACfC,mBAAoB5H,EAAM4H,qBAG9B,MAAO,CAAEiB,SAAUQ,EAAc3iB,OAAOmiB,SAC3C,CACD,IAAK,QAAS,CAGV,MAAM7c,QAAalR,MAAKwuB,EAAkBP,EAAcrzB,MAAOsqB,GAW/D,MAAO,CAAE6I,gBAVmB7I,EAAMyH,UAAUC,YAAY,yBAA0B,CAC9EvG,oBAAqBxV,QAAO,IAAIK,IACrBA,IAEXqU,cAAc,EACdpV,UAAWe,EACX2b,eAAe,EACfC,mBAAoB5H,EAAM4H,sBAGGlhB,OAAOmiB,SAC3C,CACD,IAAK,MAAO,CAGR,MAAM7c,QAAalR,MAAKwuB,EAAkBP,EAAcrzB,MAAOsqB,GAW/D,MAAO,CAAE6I,gBAVmB7I,EAAMyH,UAAUC,YAAY,yBAA0B,CAC9EvG,oBAAqBxV,QAAO,IAAIK,IACrB,IAAIpS,IAAIoS,KAEnBqU,cAAc,EACdpV,UAAWe,EACX2b,eAAe,EACfC,mBAAoB5H,EAAM4H,sBAGGlhB,OAAOmiB,SAC3C,CACD,IAAK,UAAW,CACZ,MAmCMU,SAnCkCvJ,EAAMyH,UAAUC,YAAY,yBAA0B,CAC1FvG,oBAAqBxV,QAAO,KACxB,MAAMsa,EAAQ,GACd,IAAIuD,EAAwB,KAC5B,MAAO,CAKHvgB,mBACI,MAAMwgB,EAAYxD,EAAM3pB,OAAS,EAC3B4F,QAAQ6G,UACR,IAAI7G,SAAS6G,IACXygB,EAAwBzgB,CAAO,IAGvC,aADM0gB,EACCxD,EAAMK,OAChB,EAKDoD,YAAY9tB,GACRqqB,EAAMzuB,KAAKoE,GACmB,OAA1B4tB,IACAA,IACAA,EAAwB,KAE/B,EACJ,IAEL7B,eAAe,EACfC,mBAAoB5H,EAAM4H,mBAC1BI,wBAAwB,KAEoBthB,OAAOmiB,SAElD/tB,MAAK6uB,EAAqBZ,EAAeQ,EAAevJ,GAc7D,MAAO,CAAE6I,gBAb0B7I,EAAMyH,UAAUC,YAAY,yBAA0B,CACrFvG,oBAAqBxV,QAAQ4d,GAClBA,EAAcG,cAEzBze,UAAW,CACP,CACI4d,SAAUU,IAGlB5B,eAAe,EACfC,mBAAoB5H,EAAM4H,mBAC1BI,wBAAwB,KAEYthB,OAAOmiB,SAClD,CAED,QACI,MAAM,IAAIzyB,MAAM,SAASoE,KAAKC,UAAUsuB,6BAEnD,CACD9f,QAA4B2gB,EAAS5J,GACjC,MAAMmJ,EAAgB,GACtB,IAAK,MAAO/xB,EAAK1B,KAAUk0B,EAAS,CAChC,IAAIC,EAGAA,EAFe,iBAARzyB,EAEE,CAAE1B,MAAO0B,SAIH0D,MAAK6tB,EAAqBvxB,EAAK4oB,GAElD,MAAM8J,QAAiBhvB,MAAK6tB,EAAqBjzB,EAAOsqB,GACxDmJ,EAAc3xB,KAAKqyB,GACnBV,EAAc3xB,KAAKsyB,EACtB,CACD,OAAOX,CACV,CACDlgB,QAAwB8gB,EAAM/J,GAC1B,OAAO9d,QAAQ6N,IAAIga,EAAK/yB,KAAKtB,GAAUoF,MAAK6tB,EAAqBjzB,EAAOsqB,KAC3E,CACD/W,QAA2B4X,EAAS0I,EAAevJ,GAC/C,MAAMgK,EAAYnJ,EAAQnrB,MAAMmrB,QAGhC,OAAS,CACL,MAAMjlB,QAAgBokB,EAAMyH,UAAUC,YAAY,yBAA0B,CACxEvG,oBAAqBxV,QAAO1C,MAAOsgB,GAAkBA,EAAcU,eACnEhf,UAAW,CACP,CACI4d,SAAUU,IAGlBlJ,cAAc,EACduH,mBAAoB5H,EAAM4H,mBAC1BI,wBAAwB,IAE5BltB,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,EAAcvC,OAAOE,WAAW6O,aACxC/pB,OAAQ,CACJwgB,QAASmJ,EACTrxB,KAAMqnB,EAAMiI,eAAersB,EAASilB,EAAQnrB,MAAMqrB,WAAa,QAC/DsJ,OAAQ,CACJrK,MAAOA,EAAMsI,QACb3I,QAASK,EAAMsK,qBAGxBtK,EAAMsK,kBACZ,CACJ,CACDrhB,QAAoCshB,EAAqBC,EAAYlK,EAAiBN,GAClF,MAAMyK,EAAaF,EAAoBG,YAAYD,WAAWzzB,KAAK2zB,IAAW,CAC1Ere,IAAKqe,EAAMre,IACXse,aAAcD,EAAMC,aAGpBC,WAAYF,EAAME,WAAaL,EAC/BM,aAAcH,EAAMG,iBAElBC,QAAkBjwB,KAAKkwB,mBAE7BT,EAAoBQ,UAAWzK,EAAiBN,GAC1CiL,QAAa5D,EAAgB6D,gBAAgBX,EAAoBQ,UAAW/K,GAClF,MAAO,CACH+K,YACAD,aAAcP,EAAoBO,aAGlCD,WAAYN,EAAoBM,WAAaL,EAC7CE,WAAY,CACRD,WAAYA,GAAc,IAE9BQ,KAAMA,GAAQV,EAAoBU,KAEzC,EAELx1B,EAAA4xB,gBAA0BA,MC3Y1B9xB,OAAOC,eAAewqB,EAAS,aAAc,CAAEtqB,OAAO,IACzCsqB,EAAAmL,WAAG,EAChB,MAAMrF,EAAWzrB,EACX+wB,EAAuBruB,EAiLhBijB,EAAAmL,MAhLb,MACIE,GACAC,GACAhD,GACAgC,GACA1C,GACA2D,GACAltB,GACAopB,GACAF,GACAiE,GACA1L,QACA2L,aACA1F,GACAprB,YAAY0wB,EAAcC,EAAwBhD,EAASgC,EAAmB1C,EAAoB2D,EAAQltB,EAAMyhB,EAAS2L,EAAchE,EAAWF,EAAcxB,GAC5JjrB,MAAKwtB,EAAWA,EAChBxtB,MAAKwvB,EAAqBA,EAC1BxvB,MAAK8sB,EAAsBA,EAC3B9sB,KAAKglB,QAAUA,EACfhlB,MAAKywB,EAAUA,EACfzwB,MAAKuD,EAAQA,EACbvD,KAAK2wB,aAAeA,EACpB3wB,MAAK2sB,EAAaA,EAClB3sB,MAAKuwB,EAAgBA,EACrBvwB,MAAKwwB,EAA0BA,EAC/BxwB,MAAKysB,EAAgBA,EACrBzsB,MAAK0wB,EAAmB,IAAIJ,EAAqB/D,gBAAgBvsB,MAAKysB,GACtEzsB,MAAKuwB,EAAcK,SAAS7xB,IAAIiB,MAAKwtB,EAAUxtB,MAC/CA,MAAKirB,EAAUA,CAClB,CACD9c,QAAqBgV,GACjB,UACUnjB,KAAK2sB,UAAUC,YAAY,wBAAyB,CACtDmB,SAAU5K,GAEjB,CACD,MAAOhnB,GAGH,IAAkB,OAAZA,EAAEgF,MAAiC,6BAAdhF,EAAE2E,QACzB,MAAM3E,CAEb,CACJ,CACDgS,aAAagV,GAELnjB,MAAKuwB,EAAcM,oBAAoB3Y,IAAIiL,KAAYnjB,KAAKwtB,gBAG1DxtB,MAAK8wB,EAAe3N,GAC1BnjB,MAAKuwB,EAAcM,oBAAoBE,OAAO5N,GACjD,CACDgK,eAAe6D,EAAUxL,GACrB,MAAMyH,EAAoB+D,EAASplB,OAAOqlB,eACpCC,EAAYlxB,KAAKmxB,qBAAqBlE,GAC5C,GAAI+D,EAASplB,OAAOmiB,SAAU,CAC1B,MAAMA,EAAWiD,EAASplB,OAAOmiB,SACT,SAApBvI,GAGA0L,EAAU/N,OAAS4K,EAEnB/tB,MAAKuwB,EAAcM,oBAAoB9xB,IAAIgvB,EAAU/tB,KAAKwtB,UAIrDxtB,MAAK8wB,EAAe/C,GAAUpvB,OAAOuC,GAAUlB,MAAKirB,IAAUD,EAASH,QAAQY,OAAQvqB,IAEnG,CACD,OAAOgwB,CACV,CACDC,qBAAqBF,GAGjB,MAAMrlB,EAASqlB,EAGf,GAAoB,mBAAhBrlB,EAAOrI,KACP,MAAO,CAAEA,KAAM,UAEnB,MAAM2tB,EAAYtlB,EAAOhR,MACzB,QAAkBkD,IAAdozB,EACA,OAAOtlB,EAEX,GAAoB,SAAhBA,EAAOrI,OACH9I,OAAO22B,OAAOF,EAAW,mBAEzBtlB,EAAOsX,SAAW,GAAGljB,KAAKkuB,cAAcoC,EAAqB9D,oBAAoB0E,EAAU9C,uBACpF8C,EAAyB,eAEhCz2B,OAAO22B,OAAOF,EAAW,aACzB,IAAK,MAAMxvB,KAAKwvB,EAAUG,SACtBH,EAAUG,SAAS3vB,GAAK1B,KAAKmxB,qBAAqBD,EAAUG,SAAS3vB,IAKjF,GAAI,CAAC,QAAS,OAAOwB,SAAS+tB,EAAe1tB,MACzC,IAAK,MAAM7B,KAAKwvB,EACZA,EAAUxvB,GAAK1B,KAAKmxB,qBAAqBD,EAAUxvB,IAG3D,GAAI,CAAC,SAAU,OAAOwB,SAAS+tB,EAAe1tB,MAC1C,IAAK,MAAM7B,KAAKwvB,EACZA,EAAUxvB,GAAK,CACX1B,KAAKmxB,qBAAqBD,EAAUxvB,GAAG,IACvC1B,KAAKmxB,qBAAqBD,EAAUxvB,GAAG,KAInD,OAAOkK,CACV,CACD0lB,SACI,MAAO,CACHpM,MAAOllB,KAAKwtB,QACZiD,OAAQzwB,KAAKywB,OACbltB,KAAMvD,KAAKuD,KACXshB,QAAS7kB,KAAKwvB,0BACO1xB,IAAjBkC,KAAKglB,QAAwB,CAAA,EAAK,CAAEA,QAAShlB,KAAKglB,SAE7D,CACGwI,cACA,OAAOxtB,MAAKwtB,CACf,CACGU,kBACA,OAAQluB,MAAKwwB,EAAwBe,YAAYvxB,MAAKwvB,IAChDtB,aAAe,SACxB,CACGsB,wBACA,OAAOxvB,MAAKwvB,CACf,CACG1C,yBACA,OAAO9sB,MAAK8sB,CACf,CACG2D,aACA,OAAOzwB,MAAKywB,CACf,CACGltB,WACA,OAAOvD,MAAKuD,CACf,CACGopB,gBACA,OAAO3sB,MAAK2sB,CACf,CACDxe,mBAAmBkY,EAAqBoH,EAAOC,EAAYnI,EAAcC,GACrE,MAAMX,EAAU7kB,MAAKwwB,EAAwBgB,WAAWxxB,KAAKwvB,mBAE7D,aADM3K,EAAQ4M,iBACP,CACH7lB,aAAc5L,MAAK0wB,EAAiBgB,aAAa1xB,KAAMqmB,EAAqBoH,EAAOC,EAAYnI,EAAcC,GAEpH,CACDrX,qBAAqBmX,EAAYC,EAAcC,GAC3C,MAAMX,EAAU7kB,MAAKwwB,EAAwBgB,WAAWxxB,KAAKwvB,mBAE7D,aADM3K,EAAQ4M,iBACP,CACH7lB,aAAc5L,MAAK0wB,EAAiBiB,eAAe3xB,KAAMslB,EAAYC,EAAcC,GAE1F,CAODrX,yBAAyBue,EAAWlH,GAChC,OAAOxlB,MAAK0wB,EAAiBR,mBAAmBxD,EAAWlH,EAAiBxlB,KAC/E,CAODmO,sBAAsBue,GAClB,OAAO4D,EAAqB/D,gBAAgB6D,gBAAgB1D,EAAW1sB,KAC1E,GClLLvF,OAAOC,eAAek3B,EAAS,aAAc,CAAEh3B,OAAO,IAC3Bg3B,EAAAC,yBAAG,EAC9B,MAAMC,EAAuBvyB,EACvBujB,EAAgB7gB,EAChB+oB,EAAW7f,EACX4mB,EAAgB3mB,EAChB4mB,EAAa3mB,EACnB,MAAMwmB,EAEF1Q,GAKA8Q,GAEAZ,GAAY,IAAIvyB,IAChB0xB,GACA0B,GAAU,CACNC,oBAAqB,IAAIJ,EAAcjG,SACvCsG,KAAM,CACFC,wBAAyB,IAAIN,EAAcjG,SAC3CwG,eAAgB,CACZC,iBAAkB,IAAIR,EAAcjG,SACpC0G,KAAM,IAAIT,EAAcjG,YAIpCta,GAAO,cACPib,GACA8D,GACAkC,GAAY,KACZC,GACAC,GACA1H,GACAprB,YAAY6yB,EAAWnC,EAAcpP,EAAI8Q,EAAUxF,EAAc+D,EAAwBvF,GACrFjrB,MAAK0yB,EAAaA,EAClB1yB,MAAKuwB,EAAgBA,EACrBvwB,MAAKmhB,EAAMA,EACXnhB,MAAKiyB,EAAYA,EACjBjyB,MAAKysB,EAAgBA,EACrBzsB,MAAKwwB,EAA0BA,EAC/BxwB,MAAKirB,EAAUA,CAClB,CACDzkB,cAAcksB,EAAWnC,EAAcpP,EAAI8Q,EAAUxF,EAAc+D,EAAwBvF,GACvF,MAAMpG,EAAU,IAAIgN,EAAoBa,EAAWnC,EAAcpP,EAAI8Q,EAAUxF,EAAc+D,EAAwBvF,GAUrH,OATApG,GAAQ+N,IACRpC,EAAuBqC,WAAWhO,GAC7BA,EAAQiO,qBACTjO,EAAQtZ,OAAOwnB,SAASlO,EAAQ1D,IAEpCsL,EAAa2C,cAAc,CACvBC,OAAQvM,EAActC,gBAAgBC,WAAWuS,oBACjDztB,OAAQsf,EAAQoO,wBACjBpO,EAAQ1D,IACJ0D,CACV,CAIGqJ,kBACA,OAAOluB,MAAKyyB,CACf,CACD1B,SACI/wB,MAAKkzB,IACLlzB,MAAKuwB,EAAc4C,aAAa,CAC5B3D,kBAAmBxvB,KAAKmhB,KAGvBnhB,KAAK8yB,qBACN9yB,KAAKuL,QAAO8lB,EAAUN,OAAO/wB,KAAKmhB,IAEtCnhB,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,EAActC,gBAAgBC,WAAW2S,sBACjD7tB,OAAQvF,KAAKizB,wBACdjzB,KAAKmhB,IACRnhB,MAAKwwB,EAAwB6C,kBAAkBrzB,KAAKmhB,GACvD,CAEGA,SACA,OAAOnhB,MAAKmhB,CACf,CAEG8Q,eACA,OAAOjyB,MAAKiyB,CACf,CAEG1mB,aACA,OAAsB,OAAlBvL,KAAKiyB,SACE,KAEJjyB,MAAKwwB,EAAwBgB,WAAWxxB,KAAKiyB,SACvD,CAEGqB,qBACA,MAAO,IAAItzB,MAAKqxB,GAAWn1B,KAAKilB,GAAOnhB,MAAKwwB,EAAwBgB,WAAWrQ,IAClF,CAEGoS,kBACA,MAAMlC,EAAWrxB,KAAKszB,eACtB,OAAOjC,EAASmC,UAAUnC,EAASn1B,KAAKu3B,GAAUA,EAAMF,cAC3D,CAKDT,oBACI,OAA0B,OAAnB9yB,MAAKiyB,CACf,CACDc,SAASW,GACL1zB,MAAKqxB,EAAU5W,IAAIiZ,EACtB,CACDR,KACIlzB,KAAKszB,eAAep3B,KAAKu3B,GAAUA,EAAM1C,UAC5C,CACG4C,QACA,QAAgC71B,IAA5BkC,MAAK2yB,EACL,MAAM,IAAIr3B,MAAM,yCAAyC0E,MAAKmhB,KAElE,OAAOnhB,MAAK2yB,CACf,CACGD,gBACA,OAAO1yB,MAAK0yB,CACf,CACDkB,gBAAgBlB,GACZ1yB,MAAK0yB,EAAaA,EAClB1yB,MAAK4yB,GACR,CACGphB,UACA,OAAOxR,MAAKwR,CACf,CACDrD,0BACUnO,MAAKkyB,EAAQE,KAAKE,eAAeE,IAC1C,CACDf,iBACI,OAAOzxB,MAAK0yB,EAAWmB,eAC1B,CACD1lB,yBAAyB6W,GACrB,QAAgBlnB,IAAZknB,GAAqC,KAAZA,EACzB,OAAOhlB,MAAK2zB,EAEhB,IAAIG,EAAiB9zB,MAAKuwB,EAAcwD,WAAW,CAC/CvE,kBAAmBxvB,KAAKmhB,GACxB6D,YAcJ,GAZ8B,IAA1B8O,EAAetyB,eACTxB,MAAK0yB,EAAW/F,UAAUC,YAAY,2BAA4B,CACpEoH,QAASh0B,KAAKmhB,GACd8S,UAAWjP,IAIf8O,EAAiB9zB,MAAKuwB,EAAcwD,WAAW,CAC3CvE,kBAAmBxvB,KAAKmhB,GACxB6D,aAGsB,IAA1B8O,EAAetyB,OACf,MAAMlG,MAAM,WAAW0pB,qBAE3B,OAAO8O,EAAe,EACzB,CACDb,qBAAqBjN,EAAW,EAAGkO,GAAiB,GAChD,MAAO,CACHrP,QAAS7kB,MAAKmhB,EACd3P,IAAKxR,KAAKwR,IACV6f,SAAUrL,EAAW,EACfhmB,KAAKszB,eAAep3B,KAAKi4B,GAAMA,EAAElB,qBAAqBjN,EAAW,GAAG,KACpE,QACFkO,EAAiB,CAAE3oB,OAAQvL,MAAKiyB,GAAc,CAAA,EAEzD,CACDW,KACI5yB,MAAK0yB,EAAW/F,UAAU1C,GAAG,4BAA6B1kB,IAClDvF,KAAKmhB,KAAO5b,EAAO6uB,WAAWC,WAGlCr0B,MAAKwR,EAAOjM,EAAO6uB,WAAW5iB,IAAG,IAErCxR,MAAK0yB,EAAW/F,UAAU1C,GAAG,uBAAwB1kB,IAC7CvF,KAAKmhB,KAAO5b,EAAOsqB,MAAM1O,KAG7BnhB,MAAKwR,EAAOjM,EAAOsqB,MAAMre,KAAOjM,EAAOsqB,MAAMyE,aAAe,IAI5Dt0B,MAAKkzB,IAAoB,IAE7BlzB,MAAK0yB,EAAW/F,UAAU1C,GAAG,gCAAiC1kB,IACtDvF,KAAKmhB,KAAO5b,EAAOyuB,UAGvBh0B,MAAKwR,EAAOjM,EAAOiM,IACnBxR,MAAKkyB,EAAQE,KAAKC,wBAAwBpkB,QAAQ1I,GAAO,IAE7DvF,MAAK0yB,EAAW/F,UAAU1C,GAAG,uBAAwB1kB,IACjD,GAAIvF,KAAKmhB,KAAO5b,EAAOyuB,QACnB,OAMJ,MAAMO,GAAY,IAAIv1B,MAAO0V,UAK7B,GAJoB,SAAhBnP,EAAO/E,OACPR,MAAKw0B,EAAiBjvB,EAAOktB,UAC7BzyB,MAAKkyB,EAAQC,oBAAoBlkB,WAEjB,WAAhB1I,EAAO/E,MAIX,GAAI+E,EAAOktB,WAAazyB,MAAKyyB,EAG7B,OAAQltB,EAAO/E,MACX,IAAK,mBACDR,MAAKkyB,EAAQE,KAAKE,eAAeC,iBAAiBtkB,QAAQ1I,GAC1DvF,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,EAActC,gBAAgBC,WAAWgU,sBACjDlvB,OAAQ,CACJsf,QAAS7kB,KAAKmhB,GACduT,WAAY10B,MAAKyyB,EACjB8B,YACA/iB,IAAKxR,MAAKwR,IAEfxR,KAAKmhB,IACR,MACJ,IAAK,OACDnhB,MAAKkyB,EAAQE,KAAKE,eAAeE,KAAKvkB,QAAQ1I,GAC9CvF,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,EAActC,gBAAgBC,WAAWkU,UACjDpvB,OAAQ,CACJsf,QAAS7kB,KAAKmhB,GACduT,WAAY10B,MAAKyyB,EACjB8B,YACA/iB,IAAKxR,MAAKwR,IAEfxR,KAAKmhB,UA7BZnhB,MAAKyyB,EAAYltB,EAAOktB,QA+B3B,IAELzyB,MAAK0yB,EAAW/F,UAAU1C,GAAG,mCAAoC1kB,IAC7D,GAAIA,EAAOsf,QAAQ+P,QAAQZ,UAAYh0B,KAAKmhB,GACxC,OAGJ,IAAK,CAAC,UAAW,YAAYje,SAASqC,EAAOsf,QAAQ+P,QAAQrxB,MACzD,OAEJ,MAAM2hB,EAAQ,IAAI8M,EAAW3B,MAAMrwB,MAAKuwB,EAAevwB,MAAKwwB,EAAyBjrB,EAAOsf,QAAQgQ,SAAU70B,KAAKmhB,GAAI5b,EAAOsf,QAAQ1D,GAAInhB,MAAK80B,EAAWvvB,GAE1J,SAEgC,aAAhCA,EAAOsf,QAAQ+P,QAAQrxB,KACjBgC,EAAOsf,QAAQrkB,UACf1C,EAAWkC,MAAK0yB,EAAW/B,aAAc3wB,MAAK0yB,EAAW/F,UAAW3sB,MAAKysB,EAAezsB,MAAKirB,GAC/F1lB,EAAOsf,QAAQ+P,QAAQG,YACvB/0B,MAAK2yB,EAAqBzN,EAC7B,IAELllB,MAAK0yB,EAAW/F,UAAU1C,GAAG,qCAAsC1kB,IAC/DvF,MAAKuwB,EAAc4C,aAAa,CAC5BxC,aAAc3wB,MAAK0yB,EAAW/B,aAC9B7D,mBAAoBvnB,EAAOunB,oBAC7B,IAEN9sB,MAAK0yB,EAAW/F,UAAU1C,GAAG,oCAAoC,KAC7DjqB,MAAKuwB,EAAc4C,aAAa,CAC5BxC,aAAc3wB,MAAK0yB,EAAW/B,cAChC,GAET,CACDmE,GAAWvvB,GACP,MAAoC,aAAhCA,EAAOsf,QAAQ+P,QAAQrxB,KAGhBvD,MAAK2zB,EAAclD,OAGvB,CAAC,MAAO,IAAIvtB,SAASqC,EAAOsf,QAAQ4L,QACrC,OACAlrB,EAAOsf,QAAQ4L,MACxB,CACD+D,GAAiB/B,QAEI30B,IAAb20B,GAA0BzyB,MAAKyyB,IAAcA,GAO7CzyB,MAAKkyB,EAAQC,oBAAoBpG,WACjC/rB,MAAKkyB,EAAQC,oBAAsB,IAAIJ,EAAcjG,SAGrD9rB,MAAKirB,IAAUD,EAASH,QAAQmK,iBAAkB,oBAElDh1B,MAAKkyB,EAAQE,KAAKE,eAAeC,iBAAiBxG,WAClD/rB,MAAKkyB,EAAQE,KAAKE,eAAeC,iBAC7B,IAAIR,EAAcjG,SAGtB9rB,MAAKirB,IAAUD,EAASH,QAAQmK,iBAAkB,oBAElDh1B,MAAKkyB,EAAQE,KAAKE,eAAeE,KAAKzG,WACtC/rB,MAAKkyB,EAAQE,KAAKE,eAAeE,KAC7B,IAAIT,EAAcjG,SAGtB9rB,MAAKirB,IAAUD,EAASH,QAAQmK,iBAAkB,oBAEtDh1B,MAAKyyB,EAAYA,GA1BTzyB,MAAKkyB,EAAQE,KAAKC,wBAAwBtG,aAC1C/rB,MAAKkyB,EAAQE,KAAKC,wBACd,IAAIN,EAAcjG,SAyBjC,CACD3d,eAAeqD,EAAK0V,SACVlnB,KAAKyxB,iBAEX,MAAMwD,QAA0Bj1B,MAAK0yB,EAAW/F,UAAUC,YAAY,gBAAiB,CACnFpb,MACAwiB,QAASh0B,KAAKmhB,KAElB,GAAI8T,EAAkBC,UAClB,MAAM,IAAIpS,EAAcjC,QAAQyB,sBAAsB2S,EAAkBC,WAI5E,OAFAl1B,MAAKw0B,EAAiBS,EAAkBxC,UAEhCvL,GACJ,IAAK,OACD,MACJ,IAAK,mBAEkCppB,IAA/Bm3B,EAAkBxC,eACZzyB,MAAKkyB,EAAQE,KAAKC,8BAGlBryB,MAAKkyB,EAAQE,KAAKE,eAAeC,iBAE3C,MACJ,IAAK,gBAEkCz0B,IAA/Bm3B,EAAkBxC,eACZzyB,MAAKkyB,EAAQE,KAAKC,8BAGlBryB,MAAKkyB,EAAQE,KAAKE,eAAeE,KAInD,MAAO,CACH5mB,OAAQ,CACJ8oB,WAAYO,EAAkBxC,UAAY,KAC1CjhB,OAGX,CACDrD,0BACI,OAASvC,SAAgBxE,QAAQ6N,IAAI,CAIjCjV,MAAK0yB,EAAW/F,UAAUC,YAAY,qBACtC5sB,MAAK0yB,EAAW/F,UAAUC,YAAY,yBAA0B,CAAA,KAEpE,MAAO,CACHhhB,OAAQ,CACJ/N,KAAM+N,EAAO/N,MAGxB,CACDsQ,YAAY5I,GACR,MAAM4vB,EAAsB,CACxBC,gBAAiB7vB,EAAOmjB,WACxB2M,UAAkC,cAAvB9vB,EAAOqjB,YAClBV,WAAY3iB,EAAO2iB,YAAY5qB,KAAK,MAAQ,GAC5CwrB,MAAOvjB,EAAOujB,MACdwM,mBAAoB/vB,EAAOwjB,aAE3BxjB,EAAOojB,QAAQZ,SACfoN,EAAoBI,cAAe,EAAIzD,EAAqBnG,cAAcpmB,EAAOojB,OAAOZ,SAExFxiB,EAAOojB,QAAQrP,OACf6b,EAAoBK,YAAa,EAAI1D,EAAqBnG,cAAcpmB,EAAOojB,OAAOrP,OAEtF/T,EAAOojB,QAAQpP,QACf4b,EAAoBM,aAAc,EAAI3D,EAAqBnG,cAAcpmB,EAAOojB,OAAOpP,QAEvFhU,EAAOojB,QAAQX,MACfmN,EAAoBO,WAAY,EAAI5D,EAAqBnG,cAAcpmB,EAAOojB,OAAOX,MAErFziB,EAAOsjB,MAAMjB,SACbuN,EAAoBQ,aAAc,EAAI7D,EAAqBnG,cAAcpmB,EAAOsjB,KAAKjB,SAErFriB,EAAOsjB,MAAMhB,QACbsN,EAAoBS,YAAa,EAAI9D,EAAqBnG,cAAcpmB,EAAOsjB,KAAKhB,QAGxF,MAAO,CACHjc,OAAQ,CACJ/N,YAHamC,MAAK0yB,EAAW/F,UAAUC,YAAY,kBAAmBuI,IAGzDt3B,MAGxB,EAEsB+zB,EAAAC,oBAAGA,qBCrZ9Bp3B,OAAOC,eAAem7B,EAAS,aAAc,CAAEj7B,OAAO,IACtDi7B,EAAAC,oBAA8BD,EAAAE,yBAA8B,EAC5D,MAAMC,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACxD,SAASC,EAAmBC,GACxB,OAAOF,EAAWG,MAAMC,GAASF,EAAIhzB,SAASkzB,IAClD,CAKA,SAASL,EAAoB7kB,GACzB,IAAImlB,EAAS,GACb,MAAMC,EAAYplB,EAAK,GAAGtW,MAAM6C,WAC1B84B,EAAYrlB,EAAKnL,MAAM,OAAGjI,GAC1B04B,EAASF,EAAUtjB,MAAM,IAAI3B,OAAO2kB,EAAW95B,KAAKk6B,GAAS,IAAIA,OAAS94B,KAAK,KAAM,MAC3F,IAAK,MAAMm5B,KAASD,EAChB,QAAc14B,IAAV24B,GAAiC,KAAVA,EAG3B,GAAIR,EAAmBQ,GAAQ,CAC3B,MAAMra,EAAMma,EAAU/K,QAEtB,QAAY1tB,IAARse,EACA,MAAM,IAAI9gB,MAAM,4BAA4Bw6B,GAAoB5kB,GAAM,OAE5D,OAAVulB,EACAJ,GAAUK,EAActa,GAET,OAAVqa,GAA4B,OAAVA,EACN,WAAbra,EAAI7Y,MACS,WAAb6Y,EAAI7Y,MACS,WAAb6Y,EAAI7Y,KACJ8yB,GAAUljB,SAASiJ,EAAIxhB,MAAM6C,WAAY,IAGzC44B,GAAU,MAGC,OAAVI,EACY,WAAbra,EAAI7Y,MACS,WAAb6Y,EAAI7Y,MACS,WAAb6Y,EAAI7Y,KACJ8yB,GAAUM,WAAWva,EAAIxhB,MAAM6C,YAG/B44B,GAAU,MAKdA,GAAUO,EAAOxa,EAExB,MAEGia,GAAUI,EAIlB,GAAIF,EAAU/0B,OAAS,EACnB,MAAM,IAAIlG,MAAM,4BAA4Bw6B,GAAoB5kB,GAAM,OAE1E,OAAOmlB,CACX,CAkBA,SAASO,EAAOxa,GAEZ,GAAiB,UAAbA,EAAI7Y,MACS,WAAb6Y,EAAI7Y,MACS,SAAb6Y,EAAI7Y,MACS,WAAb6Y,EAAI7Y,MACS,WAAb6Y,EAAI7Y,MACS,WAAb6Y,EAAI7Y,KACJ,OAAOmzB,EAActa,GAEzB,GAAiB,WAAbA,EAAI7Y,KACJ,MAAO,GAAG6Y,EAAIxhB,MAAM6C,cAExB,GAAiB,WAAb2e,EAAI7Y,KACJ,OAAO6Y,EAAIxhB,MAAM6C,WAErB,GAAI,CAAC,OAAQ,UAAUyF,SAASkZ,EAAI7Y,MAChC,OAAO7D,KAAKC,UAAUyc,EAAIxhB,OAE9B,GAAiB,WAAbwhB,EAAI7Y,KACJ,MAAO,IAAI6Y,EAAIxhB,MACVsB,KAAK6K,GACC,GAAGrH,KAAKC,UAAUoH,EAAK,OAAO6vB,EAAO7vB,EAAK,QAEhDzJ,KAAK,QAEd,GAAiB,UAAb8e,EAAI7Y,KACJ,MAAO,IAAI6Y,EAAIxhB,OAAOsB,KAAKjB,GAAQ27B,EAAO37B,KAAMqC,KAAK,MAAQ,MAEjE,MAAMhC,MAAM,uBAAuB8gB,EAAI3e,aAC3C,CACA,SAASi5B,EAActa,GACnB,IAAK3hB,OAAO22B,OAAOhV,EAAK,SACpB,OAAOA,EAAI7Y,KAEf,OAAQ6Y,EAAI7Y,MACR,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,SACD,OAAOsN,OAAOuL,EAAIxhB,OACtB,IAAK,SACD,MAAO,IAAIwhB,EAAIxhB,MAAM2pB,WAAWnI,EAAIxhB,MAAM4pB,OAAS,KACvD,IAAK,OACD,OAAO,IAAIxlB,KAAKod,EAAIxhB,OAAO6C,WAC/B,IAAK,SACD,MAAO,UAAU2e,EAAIxhB,OAAO4G,QAAU,MAC1C,IAAK,QACD,MAAO,SAAS4a,EAAIxhB,OAAO4G,QAAU,MACzC,IAAK,MACD,MAAO,OAAO4a,EAAIxhB,MAAM4G,UAC5B,IAAK,MACD,MAAO,OAAO4a,EAAIxhB,MAAM4G,UAC5B,IAAK,OACD,MAAO,OACX,QACI,OAAO4a,EAAI7Y,KAEvB,CACA,SAASuyB,GAAoB5kB,EAAM2lB,GAC/B,MAAMza,EAAMlL,EAAK,GACjB,OAAKkL,EAIY,WAAbA,EAAI7Y,MACJ0yB,EAAmB7Z,EAAIxhB,MAAM6C,aAC7Bo5B,EACOd,EAAoB7kB,GAGxBA,EACFhV,KAAKkgB,GACCsa,EAActa,KAEpB9e,KAAK,KAbC,EAcf,CA7F2Bu4B,EAAAE,oBAAGA,EA8FHF,EAAAC,oBAAGA,GC7K9Br7B,OAAOC,eAAeo8B,EAAS,aAAc,CAAEl8B,OAAO,IACpCk8B,EAAAC,gBAAG,EACrB,MAAMjU,GAAgBvjB,EAChBy3B,GAAiB/0B,EAEvB,SAASg1B,GAAkBC,GACvB,MAAMC,EAAcD,GAAevH,WAAWzzB,KAAKk7B,IACxC,CACHpH,aAAcoH,EAAUpH,aACxBF,aAAcsH,EAAUtH,aACxBC,WAAYqH,EAAUrH,WACtBve,IAAK4lB,EAAU5lB,QAGvB,OAAO2lB,EAAc,CAAExH,WAAYwH,QAAgBr5B,CACvD,CAaA,MAAMi5B,GACFtK,GACA8D,GACAmC,GACA7yB,YAAY6yB,EAAWnC,EAAc9D,GACjCzsB,MAAK0yB,EAAaA,EAClB1yB,MAAKuwB,EAAgBA,EACrBvwB,MAAKysB,EAAgBA,CACxB,CACDjmB,cAAcksB,EAAWnC,EAAc9D,GACnC,MAAMqK,EAAa,IAAIC,GAAWrE,EAAWnC,EAAc9D,GAE3D,OADAqK,GAAWO,IACJP,CACV,CACDO,KACIr3B,MAAKs3B,GACR,CACDA,KACIt3B,MAAK0yB,EAAW/F,UAAU1C,GAAG,4BAA6B1kB,IAGtD,MAAM2f,EAAQllB,MAAKuwB,EAAcgH,UAAU,CACvC5G,aAAc3wB,MAAK0yB,EAAW/B,aAC9B7D,mBAAoBvnB,EAAOunB,qBAEzB0K,OAAwB15B,IAAVonB,EACd9d,QAAQ6G,QAAQ1I,EAAO2L,MAErB9J,QAAQ6N,IAAI1P,EAAO2L,KAAKhV,KAAKkgB,GAClB8I,EAAMgL,mBAAmB9T,EAAK,WAEjDpc,MAAKysB,EAAcgL,qBAAqBD,EAAY94B,MAAMwS,IAAU,OAChEme,OAAQvM,GAAcpC,IAAID,WAAWiX,mBACrCnyB,OAAQ,CACJoyB,OA9CCC,EA8CkBryB,EAAOhC,KA7CtC,CAAC,SAAU,SAASL,SAAS00B,GACtB,QAEP,CAAC,QAAS,SAAS10B,SAAS00B,GACrB,QAEP,CAAC,OAAQ,WAAW10B,SAAS00B,GACtB,OAEJ,QAqCSrI,OAAQ,CACJrK,MAAOA,GAAOsI,SAAW,UACzB3I,QAASK,GAAOsK,mBAAqB,WAEzCW,MAAM,EAAI6G,GAAelB,qBAAqB5kB,GAAM,GACpDqjB,UAAWt3B,KAAK46B,MAAMtyB,EAAOgvB,WAC7B3E,WAAYqH,GAAkB1xB,EAAOqqB,YACrCrsB,KAAM,UAEN8rB,OAAwB,YAAhB9pB,EAAOhC,KAAqB,OAASgC,EAAOhC,KACpD2N,SAzDpB,IAAqB0mB,CA2DP,IAAG1S,GAAOsK,mBAAqB,UAAW1M,GAAcpC,IAAID,WAAWiX,mBAAmB,IAEhG13B,MAAK0yB,EAAW/F,UAAU1C,GAAG,2BAA4B1kB,IAGrD,MAAM2f,EAAQllB,MAAKuwB,EAAcgH,UAAU,CACvC5G,aAAc3wB,MAAK0yB,EAAW/B,aAC9B7D,mBAAoBvnB,EAAO+nB,iBAAiBR,qBAG1CgL,EAAc,UACXvyB,EAAO+nB,iBAAiB2C,eAGfnyB,IAAVonB,EACOxlB,KAAKC,UAAU4F,EAAO+nB,iBAAiB2C,WAE3C/K,EAAMkL,gBAAgB7qB,EAAO+nB,iBAAiB2C,WAL1C1qB,EAAO+nB,iBAAiB6C,KAFnB,GASpBnwB,MAAKysB,EAAcgL,qBAAqBK,EAAYp5B,MAAMyxB,IAAU,CAChEd,OAAQvM,GAAcpC,IAAID,WAAWiX,mBACrCnyB,OAAQ,CACJoyB,MAAO,QACPpI,OAAQ,CACJrK,MAAOA,GAAOsI,SAAW,UACzB3I,QAASK,GAAOsK,mBAAqB,WAEzCW,OACAoE,UAAWt3B,KAAK46B,MAAMtyB,EAAOgvB,WAC7B3E,WAAYqH,GAAkB1xB,EAAO+nB,iBAAiBsC,YACtDrsB,KAAM,kBAET2hB,GAAOsK,mBAAqB,UAAW1M,GAAcpC,IAAID,WAAWiX,mBAAmB,GAEnG,EAEaZ,EAAAC,WAAGA,mBC/FrBt8B,OAAOC,eAAeq9B,GAAS,aAAc,CAAEn9B,OAAO,IACpCm9B,GAAAC,gBAAG,EAMrB,MAAMA,WAAmBn5B,IAErBo5B,GACAp4B,YAAYo4B,EAAiBhe,GACzBla,MAAMka,GACNja,MAAKi4B,EAAmBA,CAC3B,CACD/f,IAAI5b,GAIA,OAHK0D,KAAKqY,IAAI/b,IACV0D,KAAKjB,IAAIzC,EAAK0D,MAAKi4B,EAAiB37B,IAEjCyD,MAAMmY,IAAI5b,EACpB,EAEa47B,GAAAF,WAAGA,aCpBrBv9B,OAAOC,eAAey9B,GAAS,aAAc,CAAEv9B,OAAO,IAChCu9B,GAAAC,oBAAG,EACzB,MAAMrG,GAAgBxyB,EAChBujB,GAAgB7gB,EACtB,MAAMm2B,GACF5xB,SAAkB,UAClB6xB,UACA5L,GACA6L,GACAC,GACAC,GACAC,GACAC,GACAC,GACA94B,YAAYw4B,EAAW5L,GACnBzsB,KAAKq4B,UAAYA,EACjBr4B,MAAKysB,EAAgBA,EACrBzsB,MAAK04B,EAA6B,IAAI3G,GAAcjG,SACpD9rB,MAAK24B,EAA4B,IAAI5G,GAAcjG,QACtD,CACD8M,yBAAyBN,QACgBx6B,IAAjCkC,MAAKs4B,IAITt4B,MAAKs4B,EAA0BA,OACex6B,IAA1CkC,MAAKu4B,GACLv4B,MAAK04B,EAA2BzqB,UAEpCjO,MAAK64B,IACR,CACDC,kCAAkCP,QACgBz6B,IAA1CkC,MAAKu4B,IAITv4B,MAAKu4B,EAAmCA,OACHz6B,IAAjCkC,MAAKs4B,GACLt4B,MAAK04B,EAA2BzqB,UAEvC,CACD8qB,wBAAwBP,QACgB16B,IAAhCkC,MAAKw4B,IAITx4B,MAAKw4B,EAAyBA,GACa,IAAvCA,EAAsBQ,cACrBh5B,MAAK04B,EAA2B3M,YACjC/rB,MAAK04B,EAA2BzqB,WAEO,IAAvCuqB,EAAsBQ,mBACmBl7B,IAAzCkC,MAAKy4B,GACLz4B,MAAK24B,EAA0B1qB,UAEnCjO,MAAKi5B,IACR,CACDC,iCAAiCT,QACgB36B,IAAzCkC,MAAKy4B,IAITz4B,MAAKy4B,EAAkCA,OACH36B,IAAhCkC,MAAKw4B,GACLx4B,MAAK24B,EAA0B1qB,UAEtC,CACDkrB,qBAAqBC,GACjBp5B,MAAK04B,EAA2BzqB,UAChCjO,MAAK24B,EAA0B3M,OAAOoN,GACtC,MAAM7zB,EAAS,IACRvF,MAAKq5B,IACRnE,UAAWkE,EAAmBlE,WAElCl1B,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,GAAcnC,QAAQF,WAAW6Y,gBACzC/zB,UACDvF,MAAKs4B,GAAyBtE,SAAW,KAC/C,CACD6E,KACS74B,MAAKu5B,KACNv5B,MAAKysB,EAAcgL,qBAAqBz3B,MAAK04B,EAA2Bh6B,MAAK,IAAMsB,MAAKw5B,OAA2Bx5B,MAAKs4B,GAAyBtE,SAAW,KAAMlR,GAAcnC,QAAQF,WAAWgZ,uBAE1M,CACDD,MACI,QAAqC17B,IAAjCkC,MAAKs4B,EACL,MAAM,IAAIh9B,MAAM,qCAEpB,MAAMiK,EAAS,IACRvF,MAAKq5B,IACRK,UAAW,CAAEn2B,KAAMvD,MAAK25B,OAE5B,MAAO,CACHtK,OAAQvM,GAAcnC,QAAQF,WAAWgZ,uBACzCl0B,SAEP,CACD8zB,KACI,MAAO,CACHxU,QAAS7kB,MAAKs4B,GAAyBtE,SAAW,KAClDU,WAAY10B,MAAKs4B,GAAyB7F,UAAY,KAEtDmH,cAAe,EACfC,QAAS75B,MAAK85B,KAEdvF,UAAWt3B,KAAK46B,MAAsD,KAA/C73B,MAAKs4B,GAAyByB,UAAY,IAExE,CACDD,MACI,MAAME,OAAoDl8B,IAA1CkC,MAAKu4B,EACf,GACAH,IAAe6B,GAAYj6B,MAAKu4B,EAAiC2B,mBACvE,MAAO,CACHL,QAAS75B,MAAKs4B,GAAyBD,WAAaD,IAAel5B,EACnEsS,IAAKxR,MAAKs4B,GAAyBuB,QAAQroB,KAAO4mB,IAAel5B,EACjEmwB,OAAQrvB,MAAKs4B,GAAyBuB,QAAQxK,QAAU+I,IAAel5B,EACvEi7B,QAAS1/B,OAAO2B,KAAK4D,MAAKs4B,GAAyBuB,QAAQM,SAAW,IAAIj+B,KAAKI,IAAS,CACpFkE,KAAMlE,EACN1B,MAAOoF,MAAKs4B,GAAyBuB,QAAQM,QAAQ79B,OAEzD09B,UAEAI,aAAc,EAEdC,SAAU,EACVC,QAAS,CAELC,WAAY,EAEZC,YAAa,EAEbC,cAAe,EAEfC,YAAa,EAEbC,WAAY,EAEZC,SAAU,EAEVC,OAAQ,EAERC,aAAc,EAEdC,WAAY,EAEZC,SAAU,EAEVC,OAAQ,EAERC,aAAc,EAEdC,cAAe,EAEfC,YAAa,GAGxB,CACDzB,MACI,OAAQ35B,MAAKs4B,GAAyBoB,UAAUn2B,MAC5C,IAAK,SACL,IAAK,SACL,IAAK,YACD,OAAOvD,MAAKs4B,EAAwBoB,UAAUn2B,KAClD,QACI,MAAO,QAElB,CACDiD,UAA2B60B,GACvB,OAAQA,GACJ,IAAK,SACD,MAAO,SACX,IAAK,MACD,MAAO,MACX,QACI,MAAO,OAElB,CACD70B,UAAmB0zB,GACf,OAAOA,EAAkBh+B,KAAKo/B,IACnB,CACH96B,KAAM86B,EAAWC,OAAO/6B,KACxB5F,MAAO0gC,EAAWC,OAAO3gC,MACzB4gC,OAAQF,EAAWC,OAAOC,OAC1Bj6B,KAAM+5B,EAAWC,OAAOh6B,KACxBk6B,QAASH,EAAWC,OAAOE,QAC3BrhB,KAAMkhB,EAAWC,OAAOnhB,KACxBshB,SAAUJ,EAAWC,OAAOG,SAC5BC,OAAQL,EAAWC,OAAOI,OAC1BC,SAAUxD,IAAeyD,GAAoBP,EAAWC,OAAOK,aAG1E,CACD3C,KACSj5B,MAAKu5B,KAENv5B,MAAKysB,EAAcgL,qBAAqBz3B,MAAK24B,EAA0Bj6B,MAAK,IAAMsB,MAAK87B,OAA8B97B,MAAKw4B,GAAwBxE,SAAW,KAAMlR,GAAcnC,QAAQF,WAAWsb,uBAE3M,CACDD,MACI,QAAoCh+B,IAAhCkC,MAAKw4B,EACL,MAAM,IAAIl9B,MAAM,oCAEpB,QAAqCwC,IAAjCkC,MAAKs4B,EACL,MAAM,IAAIh9B,MAAM,qCAEpB,MAAO,CACH+zB,OAAQvM,GAAcnC,QAAQF,WAAWsb,uBACzCx2B,OAAQ,IACDvF,MAAKq5B,IACR2C,SAAU,CACNxqB,IAAKxR,MAAKw4B,EAAuBwD,SAASxqB,IAC1CyqB,SAAUj8B,MAAKw4B,EAAuBwD,SAASC,SAC/Cx1B,OAAQzG,MAAKw4B,EAAuBwD,SAASv1B,OAC7Cy1B,WAAYl8B,MAAKw4B,EAAuBwD,SAASE,WAEjDC,UAAWn8B,MAAKw4B,EAAuBwD,SAASI,eAC5Cp8B,MAAKw4B,EAAuBwD,SAASK,kBAEzClC,QAASn6B,MAAKs8B,GAAYt8B,MAAKw4B,EAAuBwD,SAAS7B,SAC/DoC,SAAUv8B,MAAKw4B,EAAuBwD,SAASO,SAC/CC,cAAex8B,MAAKw4B,EAAuBwD,SAASS,kBACpDrC,YAAap6B,MAAKy4B,GAAiCiE,aAAal7B,SAAW,EAE3E64B,UAAW,EACXsC,QAAS,CAELviB,MAAO,KAK1B,CACDkiB,IAAYnC,GACR,OAAO1/B,OAAO2B,KAAK+9B,GAASj+B,KAAKI,IAAS,CACtCkE,KAAMlE,EACN1B,MAAOu/B,EAAQ79B,MAEtB,CACDi9B,KACI,OAAQv5B,MAAKs4B,GAAyBuB,QAAQroB,IAAInO,SAAS,kBACvD,CACP,EAEiB80B,GAAAC,eAAGA,GCpPzB39B,OAAOC,eAAekiC,GAAS,aAAc,CAAEhiC,OAAO,IAC9BgiC,GAAAC,sBAAG,EAC3B,MAAMC,GAAkBv9B,GAClBw9B,GAAsB96B,GAC5B,MAAM46B,GACFpQ,GAKAuQ,IACAn9B,YAAY4sB,GACRzsB,MAAKysB,EAAgBA,EACrBzsB,MAAKg9B,GAAc,IAAIF,GAAgB9E,YAAYK,GAAc,IAAI0E,GAAoB3E,eAAeC,EAAWr4B,MAAKysB,IAC3H,CACDjmB,oBAAoBmmB,EAAWF,GAC3B,MAAMmQ,EAAmB,IAAIC,GAAiBpQ,GA2B9C,OA1BAE,EAAU1C,GAAG,6BAA8B1kB,IACvCq3B,GACKK,GAA2B13B,EAAO8yB,WAClCO,yBAAyBrzB,EAAO,IAEzConB,EAAU1C,GAAG,sCAAuC1kB,IAChDq3B,GACKK,GAA2B13B,EAAO8yB,WAClCS,kCAAkCvzB,EAAO,IAElDonB,EAAU1C,GAAG,4BAA6B1kB,IACtCq3B,GACKK,GAA2B13B,EAAO8yB,WAClCU,wBAAwBxzB,EAAO,IAExConB,EAAU1C,GAAG,qCAAsC1kB,IAC/Cq3B,GACKK,GAA2B13B,EAAO8yB,WAClCa,iCAAiC3zB,EAAO,IAEjDonB,EAAU1C,GAAG,yBAA0B1kB,IACnCq3B,GACKK,GAA2B13B,EAAO8yB,WAClCc,qBAAqB5zB,EAAO,UAE/BonB,EAAUC,YAAY,kBACrBgQ,CACV,CACDK,IAA2B5E,GACvB,OAAOr4B,MAAKg9B,GAAY9kB,IAAImgB,EAC/B,EAEmBuE,GAAAC,iBAAGA,GCjE3BpiC,OAAOC,eAAeg4B,EAAS,aAAc,CAAE93B,OAAO,IACrC83B,EAAAwK,eAAG,EACpB,MAAMC,GAAkB59B,EAClBujB,GAAgB7gB,EAChB8vB,GAAgB5mB,EAChBiyB,GAAwBhyB,GAC9B,MAAM8xB,GACF7I,IACAgJ,IACA1Q,GACAgE,IACAlE,GACA6Q,IACAzJ,IACA0J,IACA/2B,cAAc6tB,EAAUgJ,EAAgB1Q,EAAWgE,EAAcJ,EAAc9D,EAAc6Q,GACzF,MAAM5K,EAAY,IAAIwK,GAAU7I,EAAUgJ,EAAgB1Q,EAAWgE,EAAclE,EAAc6Q,GAMjG,OALAH,GAAgBpG,WAAWh1B,OAAO2wB,EAAWnC,EAAc9D,GAC3DiG,GAAU8K,KAGL9K,GAAU+K,KACR/K,CACV,CACD7yB,YAAYw0B,EAAUgJ,EAAgB1Q,EAAWgE,EAAclE,EAAc6Q,GACzEt9B,MAAKq0B,GAAYA,EACjBr0B,MAAKq9B,GAAkBA,EACvBr9B,MAAK2sB,EAAaA,EAClB3sB,MAAK2wB,GAAgBA,EACrB3wB,MAAKysB,EAAgBA,EACrBzsB,MAAKs9B,GAAwBA,EAC7Bt9B,MAAKu9B,IAA0B,EAC/Bv9B,MAAK6zB,GAAmB,IAAI9B,GAAcjG,QAC7C,CAEG+H,sBACA,OAAO7zB,MAAK6zB,EACf,CACGQ,eACA,OAAOr0B,MAAKq0B,EACf,CACG1H,gBACA,OAAO3sB,MAAK2sB,CACf,CAIGgE,mBACA,OAAO3wB,MAAK2wB,EACf,CAIDxiB,WACI,IAGQnO,MAAKysB,EAAciR,8BACb19B,KAAK29B,4BAET39B,MAAK2sB,EAAWC,YAAY,wBAC5B5sB,MAAK2sB,EAAWC,YAAY,qBAC5B5sB,MAAK2sB,EAAWC,YAAY,iCAAkC,CAChEgR,SAAS,UAEP59B,MAAK2sB,EAAWC,YAAY,uBAAwB,CACtDiR,YAAY,EACZC,wBAAwB,EACxBj8B,SAAS,UAEP7B,KAAK+9B,2BACL/9B,MAAK2sB,EAAWC,YAAY,kCACrC,CACD,MAAO1rB,GAEH,IAAKA,EAAMJ,QAAQoC,SAAS,iBACxB,MAAMhC,CAEb,CACDlB,MAAK6zB,GAAiB5lB,SACzB,CAKDE,4BACSnO,MAAKu9B,KACNv9B,MAAKu9B,IAA0B,QACzBH,GAAsBP,iBAAiB96B,OAAO/B,KAAK2sB,UAAW3sB,MAAKysB,GAEhF,CACD+Q,MACIx9B,MAAK2sB,EAAW1C,GAAG,KAAK,CAACf,EAAW3jB,KAChCvF,MAAKysB,EAAc2C,cAAc,CAC7BC,OAAQvM,GAAclC,IAAIH,WAAWud,mBACrCz4B,OAAQ,CACJ2jB,UAAWA,EACXC,UAAW5jB,GAAU,CAAE,EACvB6jB,WAAYppB,MAAK2wB,KAEtB,KAAK,GAEf,CAEDxiB,2BACI,IAAK,MAAMqY,KAAUxmB,MAAKs9B,GAAsBW,mBAAmB,CAC/DC,WAAY,CAAC,KAAMl+B,MAAKq9B,MACxB,CACA,MAAMhX,EAAsBG,EAAOH,oBAC7BrB,EAAUwB,EAAOxB,QAEjBmZ,QAA2Bn+B,KAAKo+B,iBAAiB,IAAI/X,QAA2BrB,GACtFhlB,MAAKs9B,GAAsBe,uBAAuB7X,EAAQ,CACtDnX,OAAQrP,KACRs+B,gBAAiBH,GAExB,CACJ,CAODhwB,uBAAuBowB,EAAcvZ,GAKjC,aAJqBhlB,KAAK2sB,UAAUC,YAAY,wCAAyC,CACrF2C,OAAQgP,EACRtK,UAAWjP,KAEDwZ,UACjB,CAKDrwB,0BAA0BgwB,SAChBn+B,KAAK2sB,UAAUC,YAAY,2CAA4C,CACzE4R,WAAYL,GAEnB,EAEYzL,EAAAwK,UAAGA,OC3IhBuB,SACAC,GAAQ,IAAIC,WAAW,IACZ,SAASC,KAEtB,IAAKH,MAGHA,GAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgB/xB,KAAKmyB,SAA+B,oBAAbC,UAAgE,mBAA7BA,SAASL,iBAAkCK,SAASL,gBAAgB/xB,KAAKoyB,WAGrO,MAAM,IAAIxjC,MAAM,4GAIpB,OAAOmjC,GAAgBC,GACzB,CClBA,IAAAK,GAAe,sHCEf,SAASpkB,GAASjJ,GAChB,MAAuB,iBAATA,GAAqBqtB,GAAM7uB,KAAKwB,EAChD,CCIA,IAFA,ICAIstB,GAEAC,GDFAC,GAAY,GAEPx9B,GAAI,EAAGA,GAAI,MAAOA,GACzBw9B,GAAUxiC,MAAMgF,GAAI,KAAOjE,SAAS,IAAI0hC,OAAO,IAGjD,SAASx/B,GAAU/C,GACjB,IAAIwU,EAASjB,UAAU3O,OAAS,QAAsB1D,IAAjBqS,UAAU,GAAmBA,UAAU,GAAK,EAG7EuB,GAAQwtB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM8tB,GAAUtiC,EAAIwU,EAAS,IAAM,IAAM8tB,GAAUtiC,EAAIwU,EAAS,KAAO8tB,GAAUtiC,EAAIwU,EAAS,KAAO8tB,GAAUtiC,EAAIwU,EAAS,KAAO8tB,GAAUtiC,EAAIwU,EAAS,KAAO8tB,GAAUtiC,EAAIwU,EAAS,KAAO8tB,GAAUtiC,EAAIwU,EAAS,MAAMT,cAMzf,IAAKgK,GAASjJ,GACZ,MAAM0tB,UAAU,+BAGlB,OAAO1tB,CACT,CChBA,IAAI2tB,GAAa,EACbC,GAAa,ECVjB,SAAS7yB,GAAMiF,GACb,IAAKiJ,GAASjJ,GACZ,MAAM0tB,UAAU,gBAGlB,IAAIhf,EACAxjB,EAAM,IAAI+hC,WAAW,IAuBzB,OArBA/hC,EAAI,IAAMwjB,EAAIjN,SAASzB,EAAK3L,MAAM,EAAG,GAAI,OAAS,GAClDnJ,EAAI,GAAKwjB,IAAM,GAAK,IACpBxjB,EAAI,GAAKwjB,IAAM,EAAI,IACnBxjB,EAAI,GAAS,IAAJwjB,EAETxjB,EAAI,IAAMwjB,EAAIjN,SAASzB,EAAK3L,MAAM,EAAG,IAAK,OAAS,EACnDnJ,EAAI,GAAS,IAAJwjB,EAETxjB,EAAI,IAAMwjB,EAAIjN,SAASzB,EAAK3L,MAAM,GAAI,IAAK,OAAS,EACpDnJ,EAAI,GAAS,IAAJwjB,EAETxjB,EAAI,IAAMwjB,EAAIjN,SAASzB,EAAK3L,MAAM,GAAI,IAAK,OAAS,EACpDnJ,EAAI,GAAS,IAAJwjB,EAGTxjB,EAAI,KAAOwjB,EAAIjN,SAASzB,EAAK3L,MAAM,GAAI,IAAK,KAAO,cAAgB,IACnEnJ,EAAI,IAAMwjB,EAAI,WAAc,IAC5BxjB,EAAI,IAAMwjB,IAAM,GAAK,IACrBxjB,EAAI,IAAMwjB,IAAM,GAAK,IACrBxjB,EAAI,IAAMwjB,IAAM,EAAI,IACpBxjB,EAAI,IAAU,IAAJwjB,EACHxjB,CACT,CCfe,SAAA2iC,GAAU/+B,EAAMyP,EAASuvB,GACtC,SAASC,EAAa7kC,EAAO8kC,EAAWC,EAAKvuB,GAS3C,GARqB,iBAAVxW,IACTA,EAjBN,SAAuBs7B,GACrBA,EAAM0J,SAASC,mBAAmB3J,IAIlC,IAFA,IAAI4J,EAAQ,GAEHp+B,EAAI,EAAGA,EAAIw0B,EAAI10B,SAAUE,EAChCo+B,EAAMpjC,KAAKw5B,EAAI6J,WAAWr+B,IAG5B,OAAOo+B,CACT,CAOcE,CAAcplC,IAGC,iBAAd8kC,IACTA,EAAYjzB,GAAMizB,IAGK,KAArBA,EAAUl+B,OACZ,MAAM49B,UAAU,oEAMlB,IAAIU,EAAQ,IAAInB,WAAW,GAAK/jC,EAAM4G,QAOtC,GANAs+B,EAAM/gC,IAAI2gC,GACVI,EAAM/gC,IAAInE,EAAO8kC,EAAUl+B,SAC3Bs+B,EAAQN,EAASM,IACX,GAAgB,GAAXA,EAAM,GAAY7vB,EAC7B6vB,EAAM,GAAgB,GAAXA,EAAM,GAAY,IAEzBH,EAAK,CACPvuB,EAASA,GAAU,EAEnB,IAAK,IAAI1P,EAAI,EAAGA,EAAI,KAAMA,EACxBi+B,EAAIvuB,EAAS1P,GAAKo+B,EAAMp+B,GAG1B,OAAOi+B,CACR,CAED,OAAOhgC,GAAUmgC,EAClB,CAGD,IACEL,EAAaj/B,KAAOA,CACxB,CAAI,MAAOy/B,GAAO,CAKhB,OAFAR,EAAaS,IA7CE,uCA8CfT,EAAazuB,IA7CE,uCA8CRyuB,CACT,CCPA,SAASU,GAAgBC,GACvB,OAAwC,IAAhCA,EAAe,KAAO,GAAK,GAAU,CAC/C,CAsHA,SAASC,GAAQh6B,EAAGi6B,GAClB,IAAIC,GAAW,MAAJl6B,IAAmB,MAAJi6B,GAE1B,OADWj6B,GAAK,KAAOi6B,GAAK,KAAOC,GAAO,KAC5B,GAAW,MAANA,CACrB,CAcA,SAASC,GAAOC,EAAGloB,EAAGC,EAAGnS,EAAGO,EAAGsjB,GAC7B,OAAOmW,IATcK,EASQL,GAAQA,GAAQ9nB,EAAGkoB,GAAIJ,GAAQh6B,EAAG6jB,OATrCyW,EAS0C/5B,GARhD85B,IAAQ,GAAKC,EAQuCnoB,GAT1E,IAAuBkoB,EAAKC,CAU5B,CAEA,SAASC,GAAMroB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAGO,EAAGsjB,GAC/B,OAAOsW,GAAOhoB,EAAI2b,GAAK3b,EAAIqoB,EAAGtoB,EAAGC,EAAGnS,EAAGO,EAAGsjB,EAC5C,CAEA,SAAS4W,GAAMvoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAGO,EAAGsjB,GAC/B,OAAOsW,GAAOhoB,EAAIqoB,EAAI1M,GAAK0M,EAAGtoB,EAAGC,EAAGnS,EAAGO,EAAGsjB,EAC5C,CAEA,SAAS6W,GAAMxoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAGO,EAAGsjB,GAC/B,OAAOsW,GAAOhoB,EAAI2b,EAAI0M,EAAGtoB,EAAGC,EAAGnS,EAAGO,EAAGsjB,EACvC,CAEA,SAAS8W,GAAMzoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAGO,EAAGsjB,GAC/B,OAAOsW,GAAOrM,GAAK3b,GAAKqoB,GAAItoB,EAAGC,EAAGnS,EAAGO,EAAGsjB,EAC1C,CClNA,IAAI+W,GAAK1B,GAAI,KAAM,IDkBnB,SAAaO,GACX,GAAqB,iBAAVA,EAAoB,CAC7B,IAAIoB,EAAMtB,SAASC,mBAAmBC,IAEtCA,EAAQ,IAAInB,WAAWuC,EAAI1/B,QAE3B,IAAK,IAAIE,EAAI,EAAGA,EAAIw/B,EAAI1/B,SAAUE,EAChCo+B,EAAMp+B,GAAKw/B,EAAInB,WAAWr+B,EAE7B,CAED,OAOF,SAA8BgM,GAK5B,IAJA,IAAI2oB,EAAS,GACT8K,EAA0B,GAAfzzB,EAAMlM,OACjB4/B,EAAS,mBAEJ1/B,EAAI,EAAGA,EAAIy/B,EAAUz/B,GAAK,EAAG,CACpC,IAAI2E,EAAIqH,EAAMhM,GAAK,KAAOA,EAAI,GAAK,IAC/B2/B,EAAMluB,SAASiuB,EAAOE,OAAOj7B,IAAM,EAAI,IAAQ+6B,EAAOE,OAAW,GAAJj7B,GAAW,IAC5EgwB,EAAO35B,KAAK2kC,EACb,CAED,OAAOhL,CACT,CAnBSkL,CAiCT,SAAoBl7B,EAAG6L,GAErB7L,EAAE6L,GAAO,IAAM,KAAQA,EAAM,GAC7B7L,EAAE85B,GAAgBjuB,GAAO,GAAKA,EAM9B,IALA,IAAIqG,EAAI,WACJC,GAAK,UACL2b,GAAK,WACL0M,EAAI,UAECn/B,EAAI,EAAGA,EAAI2E,EAAE7E,OAAQE,GAAK,GAAI,CACrC,IAAI8/B,EAAOjpB,EACPkpB,EAAOjpB,EACPkpB,EAAOvN,EACPwN,EAAOd,EACXtoB,EAAIqoB,GAAMroB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,GAAI,GAAI,WAChCm/B,EAAID,GAAMC,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,IAAK,WACrCyyB,EAAIyM,GAAMzM,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,GAAI,WACpC8W,EAAIooB,GAAMpoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,YACrC6W,EAAIqoB,GAAMroB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,WACpCm/B,EAAID,GAAMC,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,GAAI,YACpCyyB,EAAIyM,GAAMzM,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,IAAK,YACrC8W,EAAIooB,GAAMpoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,UACrC6W,EAAIqoB,GAAMroB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,EAAG,YACnCm/B,EAAID,GAAMC,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,IAAK,YACrCyyB,EAAIyM,GAAMzM,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,IAAK,OACtC8W,EAAIooB,GAAMpoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,IAAK,YACtC6W,EAAIqoB,GAAMroB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,IAAK,EAAG,YACpCm/B,EAAID,GAAMC,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,IAAK,UACtCyyB,EAAIyM,GAAMzM,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,IAAK,YAEtC6W,EAAIuoB,GAAMvoB,EADVC,EAAIooB,GAAMpoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,GAAI,YACrByyB,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,WACpCm/B,EAAIC,GAAMD,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,GAAI,YACpCyyB,EAAI2M,GAAM3M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,GAAI,WACrC8W,EAAIsoB,GAAMtoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,GAAI,IAAK,WACjC6W,EAAIuoB,GAAMvoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,WACpCm/B,EAAIC,GAAMD,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,EAAG,UACpCyyB,EAAI2M,GAAM3M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,IAAK,WACtC8W,EAAIsoB,GAAMtoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,WACrC6W,EAAIuoB,GAAMvoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,EAAG,WACnCm/B,EAAIC,GAAMD,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,GAAI,YACrCyyB,EAAI2M,GAAM3M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,IAAK,WACrC8W,EAAIsoB,GAAMtoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,GAAI,YACpC6W,EAAIuoB,GAAMvoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,IAAK,GAAI,YACrCm/B,EAAIC,GAAMD,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,GAAI,UACpCyyB,EAAI2M,GAAM3M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,GAAI,YAEpC6W,EAAIwoB,GAAMxoB,EADVC,EAAIsoB,GAAMtoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,IAAK,YACtByyB,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,QACpCm/B,EAAIE,GAAMF,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,IAAK,YACrCyyB,EAAI4M,GAAM5M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,GAAI,YACrC8W,EAAIuoB,GAAMvoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,IAAK,UACtC6W,EAAIwoB,GAAMxoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,YACpCm/B,EAAIE,GAAMF,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,GAAI,YACpCyyB,EAAI4M,GAAM5M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,IAAK,WACrC8W,EAAIuoB,GAAMvoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,IAAK,YACtC6W,EAAIwoB,GAAMxoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,IAAK,EAAG,WACpCm/B,EAAIE,GAAMF,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,GAAI,IAAK,WACjCyyB,EAAI4M,GAAM5M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,IAAK,WACrC8W,EAAIuoB,GAAMvoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,GAAI,UACpC6W,EAAIwoB,GAAMxoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,WACpCm/B,EAAIE,GAAMF,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,IAAK,WACtCyyB,EAAI4M,GAAM5M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,GAAI,WAErC6W,EAAIyoB,GAAMzoB,EADVC,EAAIuoB,GAAMvoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,WACrByyB,EAAG0M,EAAGx6B,EAAE3E,GAAI,GAAI,WAChCm/B,EAAIG,GAAMH,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,GAAI,YACpCyyB,EAAI6M,GAAM7M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,IAAK,YACtC8W,EAAIwoB,GAAMxoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,UACrC6W,EAAIyoB,GAAMzoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,IAAK,EAAG,YACpCm/B,EAAIG,GAAMH,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,GAAI,IAAK,YACrCyyB,EAAI6M,GAAM7M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,IAAK,IAAK,SACtC8W,EAAIwoB,GAAMxoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,YACrC6W,EAAIyoB,GAAMzoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,EAAG,YACnCm/B,EAAIG,GAAMH,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,IAAK,UACtCyyB,EAAI6M,GAAM7M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,IAAK,YACrC8W,EAAIwoB,GAAMxoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,IAAK,GAAI,YACrC6W,EAAIyoB,GAAMzoB,EAAGC,EAAG2b,EAAG0M,EAAGx6B,EAAE3E,EAAI,GAAI,GAAI,WACpCm/B,EAAIG,GAAMH,EAAGtoB,EAAGC,EAAG2b,EAAG9tB,EAAE3E,EAAI,IAAK,IAAK,YACtCyyB,EAAI6M,GAAM7M,EAAG0M,EAAGtoB,EAAGC,EAAGnS,EAAE3E,EAAI,GAAI,GAAI,WACpC8W,EAAIwoB,GAAMxoB,EAAG2b,EAAG0M,EAAGtoB,EAAGlS,EAAE3E,EAAI,GAAI,IAAK,WACrC6W,EAAI8nB,GAAQ9nB,EAAGipB,GACfhpB,EAAI6nB,GAAQ7nB,EAAGipB,GACftN,EAAIkM,GAAQlM,EAAGuN,GACfb,EAAIR,GAAQQ,EAAGc,EAChB,CAED,MAAO,CAACppB,EAAGC,EAAG2b,EAAG0M,EACnB,CAtH8Be,CA6H9B,SAAsBl0B,GACpB,GAAqB,IAAjBA,EAAMlM,OACR,MAAO,GAMT,IAHA,IAAIqgC,EAAyB,EAAfn0B,EAAMlM,OAChB60B,EAAS,IAAIyL,YAAY3B,GAAgB0B,IAEpCngC,EAAI,EAAGA,EAAImgC,EAASngC,GAAK,EAChC20B,EAAO30B,GAAK,KAAsB,IAAfgM,EAAMhM,EAAI,KAAcA,EAAI,GAGjD,OAAO20B,CACT,CA1IyC0L,CAAajC,GAAuB,EAAfA,EAAMt+B,QACpE,IC7BAwgC,GAAef,GCDf,SAASgB,GAAEr7B,EAAGP,EAAGi6B,EAAGhgB,GAClB,OAAQ1Z,GACN,KAAK,EACH,OAAOP,EAAIi6B,GAAKj6B,EAAIia,EAEtB,KAAK,EAML,KAAK,EACH,OAAOja,EAAIi6B,EAAIhgB,EAJjB,KAAK,EACH,OAAOja,EAAIi6B,EAAIj6B,EAAIia,EAAIggB,EAAIhgB,EAKjC,CAEA,SAAS4hB,GAAK77B,EAAG2jB,GACf,OAAO3jB,GAAK2jB,EAAI3jB,IAAM,GAAK2jB,CAC7B,CClBA,IAAImY,GAAK5C,GAAI,KAAM,IDoBnB,SAAcO,GACZ,IAAIsC,EAAI,CAAC,WAAY,WAAY,WAAY,YACzCC,EAAI,CAAC,WAAY,WAAY,WAAY,UAAY,YAEzD,GAAqB,iBAAVvC,EAAoB,CAC7B,IAAIoB,EAAMtB,SAASC,mBAAmBC,IAEtCA,EAAQ,GAER,IAAK,IAAIp+B,EAAI,EAAGA,EAAIw/B,EAAI1/B,SAAUE,EAChCo+B,EAAMpjC,KAAKwkC,EAAInB,WAAWr+B,GAE7B,MAAWnD,MAAMC,QAAQshC,KAExBA,EAAQvhC,MAAMhC,UAAUwJ,MAAMtJ,KAAKqjC,IAGrCA,EAAMpjC,KAAK,KAKX,IAJA,IAAI4lC,EAAIxC,EAAMt+B,OAAS,EAAI,EACvB+gC,EAAItlC,KAAKulC,KAAKF,EAAI,IAClBG,EAAI,IAAIlkC,MAAMgkC,GAETG,EAAK,EAAGA,EAAKH,IAAKG,EAAI,CAG7B,IAFA,IAAI9lC,EAAM,IAAIklC,YAAY,IAEjBa,EAAI,EAAGA,EAAI,KAAMA,EACxB/lC,EAAI+lC,GAAK7C,EAAW,GAAL4C,EAAc,EAAJC,IAAU,GAAK7C,EAAW,GAAL4C,EAAc,EAAJC,EAAQ,IAAM,GAAK7C,EAAW,GAAL4C,EAAc,EAAJC,EAAQ,IAAM,EAAI7C,EAAW,GAAL4C,EAAc,EAAJC,EAAQ,GAGvIF,EAAEC,GAAM9lC,CACT,CAED6lC,EAAEF,EAAI,GAAG,IAA2B,GAApBzC,EAAMt+B,OAAS,GAASvE,KAAKoW,IAAI,EAAG,IACpDovB,EAAEF,EAAI,GAAG,IAAMtlC,KAAKC,MAAMulC,EAAEF,EAAI,GAAG,KACnCE,EAAEF,EAAI,GAAG,IAA2B,GAApBzC,EAAMt+B,OAAS,GAAS,WAExC,IAAK,IAAIohC,EAAM,EAAGA,EAAML,IAAKK,EAAK,CAGhC,IAFA,IAAIC,EAAI,IAAIf,YAAY,IAEf5X,EAAI,EAAGA,EAAI,KAAMA,EACxB2Y,EAAE3Y,GAAKuY,EAAEG,GAAK1Y,GAGhB,IAAK,IAAI4Y,EAAK,GAAIA,EAAK,KAAMA,EAC3BD,EAAEC,GAAMZ,GAAKW,EAAEC,EAAK,GAAKD,EAAEC,EAAK,GAAKD,EAAEC,EAAK,IAAMD,EAAEC,EAAK,IAAK,GAShE,IANA,IAAIvqB,EAAI8pB,EAAE,GACN7pB,EAAI6pB,EAAE,GACNlO,EAAIkO,EAAE,GACNxB,EAAIwB,EAAE,GACNlmC,EAAIkmC,EAAE,GAEDU,EAAM,EAAGA,EAAM,KAAMA,EAAK,CACjC,IAAIn8B,EAAI3J,KAAKC,MAAM6lC,EAAM,IACrBC,EAAId,GAAK3pB,EAAG,GAAK0pB,GAAEr7B,EAAG4R,EAAG2b,EAAG0M,GAAK1kC,EAAIimC,EAAEx7B,GAAKi8B,EAAEE,KAAS,EAC3D5mC,EAAI0kC,EACJA,EAAI1M,EACJA,EAAI+N,GAAK1pB,EAAG,MAAQ,EACpBA,EAAID,EACJA,EAAIyqB,CACL,CAEDX,EAAE,GAAKA,EAAE,GAAK9pB,IAAM,EACpB8pB,EAAE,GAAKA,EAAE,GAAK7pB,IAAM,EACpB6pB,EAAE,GAAKA,EAAE,GAAKlO,IAAM,EACpBkO,EAAE,GAAKA,EAAE,GAAKxB,IAAM,EACpBwB,EAAE,GAAKA,EAAE,GAAKlmC,IAAM,CACrB,CAED,MAAO,CAACkmC,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GAAWA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,GAAK,IAAMA,EAAE,IAAM,EAAI,IAAa,IAAPA,EAAE,GACxV,IC1FAY,GAAed,4CCHA,gEPcf,SAAYx/B,EAASg9B,EAAKvuB,GACxB,IAAI1P,EAAIi+B,GAAOvuB,GAAU,EACrBoH,EAAImnB,GAAO,IAAIphC,MAAM,IAErB2kC,GADJvgC,EAAUA,GAAW,IACFugC,MAAQlE,GACvBmE,OAAgCrlC,IAArB6E,EAAQwgC,SAAyBxgC,EAAQwgC,SAAWlE,GAInE,GAAY,MAARiE,GAA4B,MAAZC,EAAkB,CACpC,IAAIC,EAAYzgC,EAAQ0gC,SAAW1gC,EAAQi8B,KAAOA,MAEtC,MAARsE,IAEFA,EAAOlE,GAAU,CAAgB,EAAfoE,EAAU,GAAWA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAG3F,MAAZD,IAEFA,EAAWlE,GAAiD,OAApCmE,EAAU,IAAM,EAAIA,EAAU,IAEzD,CAMD,IAAIE,OAA0BxlC,IAAlB6E,EAAQ2gC,MAAsB3gC,EAAQ2gC,MAAQtkC,KAAKukC,MAG3DC,OAA0B1lC,IAAlB6E,EAAQ6gC,MAAsB7gC,EAAQ6gC,MAAQlE,GAAa,EAEnEmE,EAAKH,EAAQjE,IAAcmE,EAAQlE,IAAc,IAarD,GAXImE,EAAK,QAA0B3lC,IAArB6E,EAAQwgC,WACpBA,EAAWA,EAAW,EAAI,QAKvBM,EAAK,GAAKH,EAAQjE,UAAiCvhC,IAAlB6E,EAAQ6gC,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAIloC,MAAM,mDAGlB+jC,GAAaiE,EACbhE,GAAakE,EACbvE,GAAYkE,EAIZ,IAAIO,GAA4B,KAAb,WAFnBJ,GAAS,cAE+BE,GAAS,WACjDhrB,EAAE9W,KAAOgiC,IAAO,GAAK,IACrBlrB,EAAE9W,KAAOgiC,IAAO,GAAK,IACrBlrB,EAAE9W,KAAOgiC,IAAO,EAAI,IACpBlrB,EAAE9W,KAAY,IAALgiC,EAET,IAAIC,EAAML,EAAQ,WAAc,IAAQ,UACxC9qB,EAAE9W,KAAOiiC,IAAQ,EAAI,IACrBnrB,EAAE9W,KAAa,IAANiiC,EAETnrB,EAAE9W,KAAOiiC,IAAQ,GAAK,GAAM,GAE5BnrB,EAAE9W,KAAOiiC,IAAQ,GAAK,IAEtBnrB,EAAE9W,KAAOyhC,IAAa,EAAI,IAE1B3qB,EAAE9W,KAAkB,IAAXyhC,EAET,IAAK,IAAInZ,EAAI,EAAGA,EAAI,IAAKA,EACvBxR,EAAE9W,EAAIsoB,GAAKkZ,EAAKlZ,GAGlB,OAAO2V,GAAOhgC,GAAU6Y,EAC1B,WQzFA,SAAY7V,EAASg9B,EAAKvuB,GAExB,IAAIwyB,GADJjhC,EAAUA,GAAW,IACF0gC,SAAW1gC,EAAQi8B,KAAOA,MAK7C,GAHAgF,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBjE,EAAK,CACPvuB,EAASA,GAAU,EAEnB,IAAK,IAAI1P,EAAI,EAAGA,EAAI,KAAMA,EACxBi+B,EAAIvuB,EAAS1P,GAAKkiC,EAAKliC,GAGzB,OAAOi+B,CACR,CAED,OAAOhgC,GAAUikC,EACnB,4BCnBA,SAAiBlyB,GACf,IAAKiJ,GAASjJ,GACZ,MAAM0tB,UAAU,gBAGlB,OAAOjsB,SAASzB,EAAKytB,OAAO,GAAI,GAAI,GACtC,aCPA1kC,OAAOC,eAAempC,GAAS,aAAc,CAAEjpC,OAAO,IAC1BipC,GAAAC,0BAAG,EAiB/B,MAAMC,GAASxkC,GA0FaykC,GAAAF,qBA3E5B,MAEIG,IAAW,IAAInlC,IAEfm/B,mBAAmBniC,GACf,OAAKA,EAGE,IAAIkE,MAAKikC,IAAUnoC,QAAQ0qB,SACX1oB,IAAfhC,GAAQqlB,IAAoBrlB,GAAQqlB,KAAOqF,EAAOrF,YAG5BrjB,IAAtBhC,GAAQuxB,WACRvxB,GAAQuxB,YAAc7G,EAAO6G,mBAGNvvB,IAAvBhC,GAAQoiC,aACPpiC,GAAQoiC,WAAWh7B,SAASsjB,EAAO6G,eAXjC,IAAIrtB,MAAKikC,GAgBvB,CAUDC,kBAAkB7W,EAAW8W,EAAmB9d,EAAqBrB,GAEjE,MACMof,EAAgB,CAClBjjB,IAFW,EAAI4iB,GAAOM,MAGtBhX,YACA8W,oBACA9d,sBACArB,WAGJ,OADAhlB,MAAKikC,GAASxpB,IAAI2pB,GACXA,CACV,CAKD/F,uBAAuB7X,EAAQ8d,GAC3B9d,EAAO2d,kBAAkBznC,KAAK4nC,EACjC,CAEDC,yBAAyBzoC,GACrB,IAAK,MAAMsoC,KAAiBpkC,KAAKi+B,mBAAmBniC,GAChDkE,MAAKikC,GAASlT,OAAOqT,EAE5B,CAEDI,wBAAwB1oC,GACpB,IAAK,MAAMsoC,KAAiBpkC,MAAKikC,GAC7BG,EAAcD,kBAAoBC,EAAcD,kBAAkBroC,QAAQwoC,QAC7CxmC,IAArBhC,GAAQu4B,UACRv4B,GAAQu4B,WAAaiQ,EAAiBj1B,OAAOglB,eAGvBv2B,IAAtBhC,GAAQ2oC,WACR3oC,GAAQ2oC,YAAcH,EAAiBj1B,OAAOshB,cAM7D,GC1GLl2B,OAAOC,eAAegqC,EAAS,aAAc,CAAE9pC,OAAO,IACtB8pC,EAAAC,8BAAG,EACnC,MAAM7hB,GAAgBvjB,EAChByrB,GAAW/oB,EACX2iC,GAA2Bz5B,EAC3B05B,GAAiBz5B,EACjB05B,GAA4Bz5B,GA6QFq5B,EAAAC,yBA5QhC,MACInU,GACAuU,IACAtY,GACAxB,GACAsF,GACAyU,IACA1H,IACAz9B,YAAY0wB,EAAcwU,EAAeC,EAAcvY,EAAc+D,EAAwBvF,GACzFjrB,MAAKwwB,EAA0BA,EAC/BxwB,MAAK+kC,GAAiBA,EACtB/kC,MAAKysB,EAAgBA,EACrBzsB,MAAKirB,EAAUA,EACfjrB,MAAKuwB,EAAgBA,EACrBvwB,MAAKglC,GAAgBA,EACrBhlC,MAAKs9B,GAAwB,IAAIwH,GAA0BhB,qBAC3D9jC,MAAKw9B,GAAmBx9B,MAAK+kC,GAAeE,gBAC/C,CAKDzH,IAAmB7Q,GACfA,EAAU1C,GAAG,2BAA4B1kB,IACrCvF,MAAKklC,GAA6B3/B,EAAQonB,EAAU,IAExDA,EAAU1C,GAAG,6BAA8B1kB,IACvCvF,MAAKmlC,GAA+B5/B,EAAO,IAE/ConB,EAAU1C,GAAG,sBAAuB1kB,IAChCvF,MAAKolC,GAA0B7/B,EAAO,IAE1ConB,EAAU1C,GAAG,sBAAuB1kB,IAChCvF,MAAKqlC,GAA0B9/B,EAAO,GAE7C,CACD6/B,IAA0B7/B,GACtB,MAAM+/B,EAAwBtlC,MAAKwwB,EAAwBe,YAAYhsB,EAAOggC,oBAChDznC,IAA1BwnC,GACAV,GAAyB/S,oBAAoB9vB,OAAOujC,EAAsB5S,UAAW1yB,MAAKuwB,EAAehrB,EAAOyuB,QAASzuB,EAAOggC,cAAevlC,MAAKysB,EAAezsB,MAAKwwB,EAAyBxwB,MAAKirB,EAE7M,CACDoa,IAA0B9/B,GAEA,SAAlBA,EAAO4mB,QAGXnsB,MAAKwwB,EAAwBe,YAAYhsB,EAAOyuB,UAAUjD,QAC7D,CACDmU,IAA6B3/B,EAAQigC,GACjC,MAAMf,UAAEA,EAASrQ,WAAEA,GAAe7uB,EAC5BkgC,EAAkBzlC,MAAK+kC,GAAeW,aAAajB,GACzD,IAAKzkC,MAAK2lC,GAAevR,GAOrB,YAJAqR,EACK7Y,YAAY,mCACZluB,MAAK,IAAM8mC,EAAuB5Y,YAAY,0BAA2BrnB,KACzE5G,OAAOuC,GAAUlB,MAAKirB,IAAUD,GAASH,QAAQY,OAAQvqB,KAGlElB,MAAKirB,IAAUD,GAASH,QAAQmK,iBAAkB,mCAAoCt1B,KAAKC,UAAU4F,EAAQ,KAAM,IACnHvF,MAAKw9B,GAAmBiI,GACxB,MAAMG,EAAe5lC,MAAKwwB,EAAwBe,YAAY6C,EAAWC,UACnE3B,EAAYmS,GAAe3H,UAAUn7B,OAAOqyB,EAAWC,SAAUuR,GAAc3T,UAAY,KAAMwT,EAAiBhB,EAAWzkC,MAAKuwB,EAAevwB,MAAKysB,EAAezsB,MAAKs9B,IAC5KsI,EAEAA,EAAahS,gBAAgBlB,GAI7BkS,GAAyB/S,oBAAoB9vB,OAAO2wB,EAAW1yB,MAAKuwB,EAAe6D,EAAWC,SAAU,KAAMr0B,MAAKysB,EAAezsB,MAAKwwB,EAAyBxwB,MAAKirB,EAE5K,CACDka,IAA+B5/B,GAI3B,MAAM8nB,EAAY9nB,EAAO8uB,SACzBr0B,MAAKwwB,EAAwBe,YAAYlE,IAAY0D,SACrD/wB,MAAKs9B,GAAsBkH,wBAAwB,CAAEnQ,SAAUhH,GAClE,CACDlf,SAAgBkB,GACZ,GAAI,UAAWA,EACX,OAAOrP,MAAKuwB,EAAcsV,SAAS,CAC/BrY,QAASne,EAAO6V,QAIxB,OADgBllB,MAAKwwB,EAAwBgB,WAAWniB,EAAOwV,SAChDihB,mBAAmBz2B,EAAO2V,QAC5C,CACD+gB,gCAAgCxgC,GAI5B,MAAO,CACHqG,OAAQ,CACJ+d,eAL+B7rB,IAAhByH,EAAOuhB,KACxB9mB,MAAKwwB,EAAwBwV,sBAC7B,CAAChmC,MAAKwwB,EAAwBgB,WAAWjsB,EAAOuhB,QAGrB5qB,KAAKi4B,GAAMA,EAAElB,qBAAqB1tB,EAAOygB,UAAYjpB,OAAOkpC,cAGhG,CACD93B,qCAAqC5I,GACjC,MAAM2gC,EAAmBlmC,MAAK+kC,GAAeE,gBAC7C,IAAI5d,EACJ,QAAgCvpB,IAA5ByH,EAAO8hB,mBACPA,EAAmBrnB,MAAKwwB,EAAwBgB,WAAWjsB,EAAO8hB,mBAC7DA,EAAiByL,qBAClB,MAAM,IAAIhQ,GAAcjC,QAAQO,yBAAyB,kDAGjE,MASMiM,SATe6Y,EAAiBtZ,YAAY,sBAAuB,CACrEpb,IAAK,cACL20B,UAA2B,WAAhB5gC,EAAOhC,QAOG8wB,SACnBxP,EAAU7kB,MAAKwwB,EAAwBgB,WAAWnE,GAExD,aADMxI,EAAQuhB,cACP,CACHx6B,OAAQiZ,EAAQoO,qBAAqB,GAE5C,CACDoT,iCAAiC9gC,GAE7B,OADgBvF,MAAKwwB,EAAwBgB,WAAWjsB,EAAOsf,SAChDyhB,SAAS/gC,EAAOiM,SAAqB1T,IAAhByH,EAAO2hB,KAAqB,OAAS3hB,EAAO2hB,KACnF,CACD/Y,gDAAgD5I,GAE5C,OADgBvF,MAAKwwB,EAAwBgB,WAAWjsB,EAAOsf,SAChD0hB,mBAClB,CACDp4B,oCAAoC5I,GAEhC,OADgBvF,MAAKwwB,EAAwBgB,WAAWjsB,EAAOsf,SAChD2hB,MAAMjhC,EACxB,CACD4I,sCAAsC5I,GAClC,QAAyBzH,IAArByH,EAAO4K,WAA2B5K,EAAO4K,UAAU3O,OAAS,EAE5D,MAAM,IAAIlG,MAAM,kDAEpB,MAAMmrC,EAAa,IAAI3nC,SAIJhB,IAAnByH,EAAOsf,SAA4C,OAAnBtf,EAAOsf,QACjC7kB,MAAKwwB,EACFwV,sBACA9pC,KAAK2oB,GAAYA,EAAQ6N,YAC5B,CAAC1yB,MAAKwwB,EAAwBgB,WAAWjsB,EAAOsf,SAAS6N,YACzDyR,EAAoB,GAC1B,IAAK,MAAMzR,KAAa+T,EAAY,CAChC,MAAMtI,QAA2BzL,EAAU0L,iBAE3C,IAAI74B,EAAO8gB,0BAA2B9gB,EAAOyf,SAC7Cmf,EAAkBznC,KAAK,CACnB2S,OAAQqjB,EACR4L,gBAAiBH,GAExB,CAED,MAAO,CACHvyB,OAAQ,CACJ4a,OAHcxmB,MAAKs9B,GAAsB4G,kBAAkB3+B,EAAOsf,SAAW,KAAMsf,EAAmB5+B,EAAO8gB,oBAAqB9gB,EAAOyf,SAGnH7D,IAGjC,CACDhT,yCAAyC5I,GACrC,MAAMmhC,EAASnhC,EAAOihB,OAChByd,EAAUjkC,MAAKs9B,GAAsBW,mBAAmB,CAC1D9c,GAAIulB,IAER,GAAuB,IAAnBzC,EAAQziC,OACR,MAAM,IAAIshB,GAAcjC,QAAQmB,sBAAsB,mCAAmC0kB,MAE7F,IAAK,MAAMlgB,KAAUyd,EACjB,IAAK,MAAMK,KAAoB9d,EAAO2d,kBAAmB,CACrD,MAAMzR,EAAY4R,EAAiBj1B,OAC7B8uB,EAAqBmG,EAAiBhG,sBACtC5L,EAAUiU,oBAAoBxI,EACvC,CAKL,OAHAn+B,MAAKs9B,GAAsBiH,yBAAyB,CAChDpjB,GAAIulB,IAED,CAAE96B,OAAQ,CAAA,EACpB,CACDuC,8BAA8B5I,GAE1B,aADoBvF,MAAK6lC,GAAUtgC,EAAO8J,SAC7BsiB,eAAepsB,EAAO+f,WAAY/f,EAAOggB,aAAchgB,EAAOigB,iBAAmB,OACjG,CACDohB,yBAAyBrhC,QACEzH,IAAnByH,EAAOsf,SAEP7kB,MAAKwwB,EAAwBgB,WAAWjsB,EAAOsf,SAEnD,MAAMgiB,EAAS7mC,MAAKuwB,EACfwD,WAAW,CACZvE,kBAAmBjqB,EAAOsf,QAC1BthB,KAAMgC,EAAOhC,OAEZrH,KAAKgpB,GAAUA,EAAMoM,WAC1B,MAAO,CAAE1lB,OAAQ,CAAEi7B,UACtB,CACD14B,kCAAkC5I,GAE9B,aADoBvF,MAAK6lC,GAAUtgC,EAAO8J,SAC7BqiB,aAAansB,EAAO8gB,oBAAqB9gB,EAAOvF,MAAQ,CACjEuD,KAAM,aAEVgC,EAAO4K,WAAa,GACpB5K,EAAOggB,aAAchgB,EAAOigB,iBAAmB,OAClD,CACDrX,4BAA4B5I,GACxB,MAAM2f,QAAcllB,MAAK6lC,GAAUtgC,EAAO8J,QAE1C,aADMjI,QAAQ6N,IAAI1P,EAAOogB,QAAQzpB,KAAIiS,MAAO24B,GAAM5hB,EAAM6hB,OAAOD,MACxD,CAAEl7B,OAAQ,CAAA,EACpB,CACDuC,oCAAoC64B,GAChC,MAAMd,EAAmBlmC,MAAK+kC,GAAeE,gBAE7C,IADgBjlC,MAAKwwB,EAAwBgB,WAAWwV,EAAcniB,SACzDiO,oBACT,MAAM,IAAIhQ,GAAcjC,QAAQO,yBAAyB,kDAE7D,MAAM6lB,EAA4B,IAAI7/B,SAAS6G,IAC3C,MAAMi5B,EAAsBC,IACpBA,EAAY9S,WAAa2S,EAAcniB,UACvCqhB,EAAiB/b,IAAI,4BAA6B+c,GAClDj5B,IACH,EAELi4B,EAAiBjc,GAAG,4BAA6Bid,EAAmB,IASxE,aAPMhB,EAAiBtZ,YAAY,qBAAsB,CACrDyH,SAAU2S,EAAcniB,gBAKtBoiB,EACC,CAAEr7B,OAAQ,CAAA,EACpB,CACD+5B,IAAet2B,GACX,OAAIA,EAAOglB,WAAar0B,MAAKglC,IAGtB,CAAC,OAAQ,UAAU9hC,SAASmM,EAAO9L,KAC7C,CACD4K,8BAA8B5I,GAC1B,MAAM6hC,EAAS7hC,EAAO6jB,WAChBppB,MAAK+kC,GAAeW,aAAangC,EAAO6jB,YACxCppB,MAAK+kC,GAAeE,gBAE1B,MAAO,CACHr5B,aAF+Bw7B,EAAOxa,YAAYrnB,EAAO2jB,UAAW3jB,EAAO4jB,WAG3EC,WAAY7jB,EAAO6jB,WAE1B,CACDie,uBAAuB9hC,GACnB,MAAMsf,EAAUtf,EAAOsf,QACjB4f,EAAYzkC,MAAKwwB,EAAwBgB,WAAW3M,GAAS6N,UAAU/B,aAC7E,YAAkB7yB,IAAd2mC,EACO,CAAE74B,OAAQ,CAAEwd,WAAY,OAE5B,CAAExd,OAAQ,CAAEwd,WAAYqb,GAClC,aCjQLhqC,OAAOC,eAAe4sC,GAAS,aAAc,CAAE1sC,OAAO,IAC3B0sC,GAAAC,yBAAG,EAC9B,MAAMA,GACFzmC,IACAilB,IACAlmB,YAAYiB,EAASilB,GACjB/lB,MAAKc,GAAWA,EAChBd,MAAK+lB,GAAWA,CACnB,CACDvf,+BAA+BghC,EAAgBzhB,GAC3C,OAAOyhB,EAAe9oC,MAAMoC,GAAY,IAAIymC,GAAoBzmC,EAASilB,IAC5E,CACDvf,sBAAsB1F,EAASilB,GAC3B,OAAO3e,QAAQ6G,QAAQ,IAAIs5B,GAAoBzmC,EAASilB,GAC3D,CACGjlB,cACA,OAAOd,MAAKc,EACf,CACGilB,cACA,OAAO/lB,MAAK+lB,EACf,EAEsB0hB,GAAAF,oBAAGA,GCtB9B9sC,OAAOC,eAAegtC,EAAS,aAAc,CAAE9sC,OAAO,IAC9B8sC,EAAAC,sBAAG,EAC3B,MAAM7kB,GAAgBvjB,EAChByrB,GAAW/oB,EACX2lC,GAAoBz8B,EACpB08B,GAAgCz8B,EAChC08B,GAA2Bz8B,GACjC,MAAM08B,GACFzhB,4BAA4B/gB,GACxB,OAAOA,CACV,CACDkhB,+BAA+BlhB,GAC3B,OAAOA,CACV,CACDuf,qBAAqBvf,GACjB,OAAOA,CACV,CACDqhB,wBAAwBrhB,GACpB,OAAOA,CACV,CACDkgB,oBAAoBlgB,GAChB,OAAOA,CACV,CACDqgB,kBAAkBrgB,GACd,OAAOA,CACV,CACD8jB,uBAAuB9jB,GACnB,OAAOA,CACV,CACDgkB,sBAAsBhkB,GAClB,OAAOA,CACV,CACDqkB,qBAAqBrkB,GACjB,OAAOA,CACV,CACD4hB,oBAAoB5hB,GAChB,OAAOA,CACV,CACDwhB,mBAAmBxhB,GACf,OAAOA,CACV,CACD+hB,kBAAkB/hB,GACd,OAAOA,CACV,CACDiiB,iBAAiBjiB,GACb,OAAOA,CACV,CACDmiB,6BAA6BniB,GACzB,OAAOA,CACV,CACDyjB,iBAAiBzjB,GACb,OAAOA,CACV,EAEL,MAAMoiC,WAAyBC,GAAkB9d,aAC7Cke,IACAvb,GACAwb,IACAhd,GACAprB,YAAY0wB,EAAcwU,EAAetY,EAAcuY,EAAciD,EAAS,IAAIF,GAAkBvX,EAAwBvF,GACxHlrB,QACAC,MAAKysB,EAAgBA,EACrBzsB,MAAKirB,EAAUA,EACfjrB,MAAKgoC,GAAoB,IAAIH,GAA8BlD,yBAAyBpU,EAAcwU,EAAeC,EAAcvY,EAAc+D,EAAwBvF,GACrKjrB,MAAKioC,GAAUA,CAClB,CACDzhC,YACI,MAAO,CAAEoF,OAAQ,CAAEs8B,OAAO,EAAOpnC,QAAS,qBAC7C,CACDqN,SAAiC5I,EAAQwgB,GAErC,aADM/lB,MAAKysB,EAAc0b,UAAU5iC,EAAOmkB,OAAQnkB,EAAOokB,UAAY,CAAC,MAAO5D,GACtE,CAAEna,OAAQ,CAAA,EACpB,CACDuC,SAAmC5I,EAAQwgB,GAEvC,aADM/lB,MAAKysB,EAAc2b,YAAY7iC,EAAOmkB,OAAQnkB,EAAOokB,UAAY,CAAC,MAAO5D,GACxE,CAAEna,OAAQ,CAAA,EACpB,CACDuC,SAAsBk6B,GAClB,OAAQA,EAAYhZ,QAChB,IAAK,iBACD,OAAOsY,IAAiBW,KAC5B,IAAK,oBACD,OAAOtoC,MAAKuoC,GAA2BvoC,MAAKioC,GAAQre,qBAAqBye,EAAY9iC,QAAS8iC,EAAYtiB,SAAW,MACzH,IAAK,sBACD,OAAO/lB,MAAKwoC,GAA6BxoC,MAAKioC,GAAQre,qBAAqBye,EAAY9iC,QAAS8iC,EAAYtiB,SAAW,MAC3H,IAAK,yBACD,OAAO/lB,MAAKgoC,GAAkBS,+BAA+BzoC,MAAKioC,GAAQ3gB,kBAAkB+gB,EAAY9iC,SAC5G,IAAK,wBACD,OAAOvF,MAAKgoC,GAAkBU,8BAA8B1oC,MAAKioC,GAAQzgB,iBAAiB6gB,EAAY9iC,SAC1G,IAAK,0BACD,OAAOvF,MAAKgoC,GAAkBjC,gCAAgC/lC,MAAKioC,GAAQlhB,mBAAmBshB,EAAY9iC,SAC9G,IAAK,2BACD,OAAOvF,MAAKgoC,GAAkB3B,iCAAiCrmC,MAAKioC,GAAQ9gB,oBAAoBkhB,EAAY9iC,SAChH,IAAK,oCACD,OAAOvF,MAAKgoC,GAAkBW,0CAA0C3oC,MAAKioC,GAAQvgB,6BAA6B2gB,EAAY9iC,SAClI,IAAK,wBACD,OAAOvF,MAAKgoC,GAAkBY,8BAA8B5oC,MAAKioC,GAAQjf,iBAAiBqf,EAAY9iC,SAC1G,IAAK,0BACD,OAAOvF,MAAKgoC,GAAkBa,gCAAgC7oC,MAAKioC,GAAQ3hB,4BAA4B+hB,EAAY9iC,SACvH,IAAK,6BACD,OAAOvF,MAAKgoC,GAAkBc,mCAAmC9oC,MAAKioC,GAAQxhB,+BAA+B4hB,EAAY9iC,SAC7H,IAAK,mBACD,OAAOvF,MAAKgoC,GAAkBpB,yBAAyB5mC,MAAKioC,GAAQnjB,qBAAqBujB,EAAY9iC,SACzG,IAAK,sBACD,OAAOvF,MAAKgoC,GAAkBe,4BAA4B/oC,MAAKioC,GAAQrhB,wBAAwByhB,EAAY9iC,SAC/G,IAAK,kBACD,OAAOvF,MAAKgoC,GAAkBgB,wBAAwBhpC,MAAKioC,GAAQxiB,oBAAoB4iB,EAAY9iC,SACvG,IAAK,gBACD,OAAOvF,MAAKgoC,GAAkBiB,sBAAsBjpC,MAAKioC,GAAQriB,kBAAkByiB,EAAY9iC,SACnG,IAAK,kBACD,OAAOvF,MAAKgoC,GAAkBkB,wBAAwBlpC,MAAKioC,GAAQ5e,uBAAuBgf,EAAY9iC,SAC1G,IAAK,iBACD,OAAOvF,MAAKgoC,GAAkBX,uBAAuBrnC,MAAKioC,GAAQ1e,sBAAsB8e,EAAY9iC,SAK5G,MAAM,IAAIud,GAAcjC,QAAQuB,wBAAwB,oBAAoBimB,EAAYhZ,WAC3F,CACDlhB,qBAAqBg7B,GACjB,IACI,MAAMv9B,QAAe5L,MAAKopC,GAAgBD,GACpCnN,EAAW,CACb7a,GAAIgoB,EAAQhoB,MACTvV,GAEP5L,KAAKqqB,KAAK,WAAYyd,GAAyBP,oBAAoB8B,eAAerN,EAAUmN,EAAQpjB,SAAW,MAClH,CACD,MAAO5pB,GACH,GAAIA,aAAa2mB,GAAcjC,QAAQE,cAAe,CAClD,MAAMuoB,EAAgBntC,EACtB6D,KAAKqqB,KAAK,WAAYyd,GAAyBP,oBAAoB8B,eAAeC,EAAcroB,gBAAgBkoB,EAAQhoB,IAAKgoB,EAAQpjB,SAAW,MACnJ,KACI,CACD,MAAM7kB,EAAQ/E,EACd6D,MAAKirB,IAAUD,GAASH,QAAQ0e,KAAMroC,GACtClB,KAAKqqB,KAAK,WAAYyd,GAAyBP,oBAAoB8B,eAAe,IAAIvmB,GAAcjC,QAAQyB,sBAAsBphB,EAAMJ,SAASmgB,gBAAgBkoB,EAAQhoB,IAAKgoB,EAAQpjB,SAAW,MACpM,CACJ,CACJ,EAEmByjB,EAAA7B,iBAAGA,aC7I3BltC,OAAOC,eAAe81B,GAAS,aAAc,CAAE51B,OAAO,IACxB41B,GAAAiZ,4BAAG,EACjC,MAAM3mB,GAAgBvjB,EA8DQixB,GAAAiZ,uBA5D9B,MAEI9f,IAAY,IAAI9qB,IAEhBmnC,sBACI,OAAOhmC,KAAK0pC,iBAAiB5tC,QAAQ+oB,GAAYA,EAAQiO,qBAC5D,CAED4W,iBACI,OAAOnrC,MAAM4Z,KAAKnY,MAAK2pB,GAAUjP,SACpC,CAED2Y,kBAAkBlS,GACdnhB,MAAK2pB,GAAUoH,OAAO5P,EACzB,CAEDwoB,cAAc9kB,GACV7kB,MAAK2pB,GAAUoH,OAAOlM,EAAQ1D,GACjC,CAED0R,WAAWhO,GACP7kB,MAAK2pB,GAAU5qB,IAAI8lB,EAAQ1D,GAAI0D,EAClC,CAED+kB,WAAWzoB,GACP,OAAOnhB,MAAK2pB,GAAUtR,IAAI8I,EAC7B,CAEDoQ,YAAYpQ,GACR,OAAOnhB,MAAK2pB,GAAUzR,IAAIiJ,EAC7B,CAED0oB,sBAAsB1oB,GAClB,GAAW,OAAPA,EACA,OAAO,KAEX,MAAMykB,EAAe5lC,KAAKuxB,YAAYpQ,GAChC8Q,EAAW2T,GAAc3T,UAAY,KAC3C,OAAiB,OAAbA,EACO9Q,EAEJnhB,KAAK6pC,sBAAsB5X,EACrC,CAED6X,oBAAoB3oB,GAChB,MAAM4oB,EAAoB/pC,KAAK6pC,sBAAsB1oB,GACrD,OAA0B,OAAtB4oB,EACO,KAEJ/pC,KAAKuxB,YAAYwY,EAC3B,CAEDvY,WAAWrQ,GACP,MAAMvV,EAAS5L,KAAKuxB,YAAYpQ,GAChC,QAAerjB,IAAX8N,EACA,MAAM,IAAIkX,GAAcjC,QAAQe,qBAAqB,WAAWT,eAEpE,OAAOvV,CACV,mBC9DLnR,OAAOC,eAAesvC,GAAS,aAAc,CAAEpvC,OAAO,IACxCovC,GAAAC,YAAG,EA6BHD,GAAAC,OAzBd,MACIC,IACAjwB,IAAW,GACXkwB,IAKAtqC,YAAYqqC,EAAUC,EAAgB,UAClCnqC,MAAKkqC,GAAYA,EACjBlqC,MAAKmqC,GAAiBA,CACzB,CACDjyB,MACI,OAAOlY,MAAKia,EACf,CACDQ,IAAI7f,GAEA,IADAoF,MAAKia,GAASvd,KAAK9B,GACZoF,MAAKia,GAASzY,OAASxB,MAAKkqC,IAAW,CAC1C,MAAMxuC,EAAOsE,MAAKia,GAASuR,aACd1tB,IAATpC,GACAsE,MAAKmqC,GAAezuC,EAE3B,CACJ,aC5BLjB,OAAOC,eAAe0vC,GAAS,aAAc,CAAExvC,OAAO,IACrCwvC,GAAAC,eAAG,EAIpB,MAAMA,GACF7jC,UAAkB,EAClB2a,GACAthB,cACIG,MAAKmhB,IAAQkpB,IAAUC,EAC1B,CACGnpB,SACA,OAAOnhB,MAAKmhB,CACf,EAEYipB,GAAAC,UAAGA,aCfpB5vC,OAAOC,eAAe6vC,GAAS,aAAc,CAAE3vC,OAAO,IACtD2vC,GAAAC,oBAAkDD,GAAAE,sCAA8B,EAChF,MAAM3nB,GAAgBvjB,EAOtB,SAASmrC,MAAoBnyB,GACzB,OAAOA,EAAEoyB,QAAO,CAACpyB,EAAGC,IAAMD,EAAEqyB,SAAS/J,GAAMroB,EAAEtc,KAAKC,GAAM,CAAC0kC,EAAG1kC,GAAG0uC,YACnE,CAGA,SAASJ,GAAa/gB,GAClB,MAAMohB,EAAY,GAClB,IAAK,MAAMpgB,KAAShB,EAChB,OAAQgB,GACJ,KAAK5H,GAActC,gBAAgBkC,UAC/BooB,EAAUpuC,QAAQjC,OAAOigB,OAAOoI,GAActC,gBAAgBC,aAC9D,MACJ,KAAKqC,GAAclC,IAAI8B,UACnBooB,EAAUpuC,QAAQjC,OAAOigB,OAAOoI,GAAclC,IAAIH,aAClD,MACJ,KAAKqC,GAAcpC,IAAIgC,UACnBooB,EAAUpuC,QAAQjC,OAAOigB,OAAOoI,GAAcpC,IAAID,aAClD,MACJ,KAAKqC,GAAcnC,QAAQ+B,UACvBooB,EAAUpuC,QAAQjC,OAAOigB,OAAOoI,GAAcnC,QAAQF,aACtD,MACJ,KAAKqC,GAAcvC,OAAOmC,UACtBooB,EAAUpuC,QAAQjC,OAAOigB,OAAOoI,GAAcvC,OAAOE,aACrD,MACJ,QACIqqB,EAAUpuC,KAAKguB,GAG3B,OAAOogB,CACX,CA1BwBC,GAAAL,iBAAGA,GA2BPK,GAAAN,aAAGA,GAiIIM,GAAAP,oBAhI3B,MACIQ,IAAwB,EAIxBC,IAA8B,IAAIpsC,IAClC2xB,GACA3wB,YAAY2wB,GACRxwB,MAAKwwB,EAA0BA,CAClC,CACD0a,6BAA6BC,EAAa9d,GAQtC,OAP8B9uB,MAAM4Z,KAAKnY,MAAKirC,GAA4B7uC,QACrEF,KAAK6pB,IAAa,CACnBqlB,SAAUprC,MAAKqrC,GAAwCF,EAAa9d,EAAWtH,GAC/EA,cAECjqB,QAAO,EAAGsvC,cAA4B,OAAbA,IAGzBE,MAAK,CAAC/yB,EAAGC,IAAMD,EAAE6yB,SAAW5yB,EAAE4yB,WAC9BlvC,KAAI,EAAG6pB,aAAcA,GAC7B,CACDslB,IAAwCF,EAAa9d,EAAWtH,GAC5D,MAAMwlB,EAAoBvrC,MAAKirC,GAA4B/yB,IAAI6N,GAC/D,QAA0BjoB,IAAtBytC,EACA,OAAO,KAEX,MAAMC,EAAyBxrC,MAAKwwB,EAAwBqZ,sBAAsBxc,GAI5Eoe,EAFmB,IAAI,IAAI3sC,IAAI,CAAC,KAAM0sC,KAGvCtvC,KAAKi4B,GAAMoX,EAAkBrzB,IAAIic,IAAIjc,IAAIizB,KACzCrvC,QAAQqhB,QAAYrf,IAANqf,IACnB,OAA0B,IAAtBsuB,EAAWjqC,OAEJ,KAGJvE,KAAKsT,OAAOk7B,EACtB,CACDtD,UAAUzd,EAAO2C,EAAWtH,GAGxB,GADAsH,EAAYrtB,MAAKwwB,EAAwBqZ,sBAAsBxc,GAC3D3C,IAAU5H,GAActC,gBAAgBkC,UAExC,YADAjoB,OAAOigB,OAAOoI,GAActC,gBAAgBC,YAAYvkB,KAAKwvC,GAAkB1rC,KAAKmoC,UAAUuD,EAAere,EAAWtH,KAG5H,GAAI2E,IAAU5H,GAAclC,IAAI8B,UAE5B,YADAjoB,OAAOigB,OAAOoI,GAAclC,IAAIH,YAAYvkB,KAAKwvC,GAAkB1rC,KAAKmoC,UAAUuD,EAAere,EAAWtH,KAGhH,GAAI2E,IAAU5H,GAAcpC,IAAIgC,UAE5B,YADAjoB,OAAOigB,OAAOoI,GAAcpC,IAAID,YAAYvkB,KAAKwvC,GAAkB1rC,KAAKmoC,UAAUuD,EAAere,EAAWtH,KAGhH,GAAI2E,IAAU5H,GAAcnC,QAAQ+B,UAEhC,YADAjoB,OAAOigB,OAAOoI,GAAcnC,QAAQF,YAAYvkB,KAAKwvC,GAAkB1rC,KAAKmoC,UAAUuD,EAAere,EAAWtH,KAGpH,GAAI2E,IAAU5H,GAAcvC,OAAOmC,UAE/B,YADAjoB,OAAOigB,OAAOoI,GAAcvC,OAAOE,YAAYvkB,KAAKwvC,GAAkB1rC,KAAKmoC,UAAUuD,EAAere,EAAWtH,KAG9G/lB,MAAKirC,GAA4B5yB,IAAI0N,IACtC/lB,MAAKirC,GAA4BlsC,IAAIgnB,EAAS,IAAIlnB,KAEtD,MAAM0sC,EAAoBvrC,MAAKirC,GAA4B/yB,IAAI6N,GAC1DwlB,EAAkBlzB,IAAIgV,IACvBke,EAAkBxsC,IAAIsuB,EAAW,IAAIxuB,KAEzC,MAAM8sC,EAAWJ,EAAkBrzB,IAAImV,GAEnCse,EAAStzB,IAAIqS,IAGjBihB,EAAS5sC,IAAI2rB,EAAO1qB,MAAKgrC,KAC5B,CAIDY,eAAeliB,EAAQwU,EAAYnY,GAE/B,IAAK,MAAMsH,KAAa6Q,EACF,OAAd7Q,GACArtB,MAAKwwB,EAAwBgB,WAAWnE,GAGtBqd,GAAiBD,GAAa/gB,GAASwU,GAI5DhiC,KAAI,EAAEwuB,EAAO2C,KAAertB,MAAK6rC,GAAkBnhB,EAAO2C,EAAWtH,KACrE/O,SAASoxB,GAAgBA,KACjC,CAKDA,YAAY0D,EAAWze,EAAWtH,GAC9B/lB,KAAK4rC,eAAe,CAACE,GAAY,CAACze,GAAYtH,EACjD,CACD8lB,IAAkBnhB,EAAO2C,EAAWtH,GAGhC,GADAsH,EAAYrtB,MAAKwwB,EAAwBqZ,sBAAsBxc,IAC1DrtB,MAAKirC,GAA4B5yB,IAAI0N,GACtC,MAAM,IAAIjD,GAAcjC,QAAQO,yBAAyB,2BAA2BsJ,MAAwB,OAAd2C,EAAqB,OAASA,6BAEhI,MAAMke,EAAoBvrC,MAAKirC,GAA4B/yB,IAAI6N,GAC/D,IAAKwlB,EAAkBlzB,IAAIgV,GACvB,MAAM,IAAIvK,GAAcjC,QAAQO,yBAAyB,2BAA2BsJ,MAAwB,OAAd2C,EAAqB,OAASA,6BAEhI,MAAMse,EAAWJ,EAAkBrzB,IAAImV,GACvC,IAAKse,EAAStzB,IAAIqS,GACd,MAAM,IAAI5H,GAAcjC,QAAQO,yBAAyB,2BAA2BsJ,MAAwB,OAAd2C,EAAqB,OAASA,6BAEhI,MAAO,KACHse,EAAS5a,OAAOrG,GAEM,IAAlBihB,EAASvxB,MACTmxB,EAAkBxa,OAAOrG,GAEE,IAA3B6gB,EAAkBnxB,MAClBpa,MAAKirC,GAA4Bla,OAAOhL,EAC3C,CAER,GCtKLtrB,OAAOC,eAAeqxC,GAAS,aAAc,CAAEnxC,OAAO,IAClCmxC,GAAAC,kBAAG,EACvB,MAAMlpB,GAAgBvjB,EAChB0sC,GAAchqC,GACdiqC,GAAiB/gC,GACjB28B,GAA2B18B,GAC3B0xB,GAAkBzxB,GAClB8gC,GAA2BjsB,GACjC,MAAMksB,GACFhC,IACA/c,IACA3C,IACA7qB,YAAY6qB,EAAO2C,GACfrtB,MAAKoqC,GAAa,IAAI8B,GAAe7B,UACrCrqC,MAAKqtB,GAAaA,EAClBrtB,MAAK0qB,GAASA,CACjB,CACGvJ,SACA,OAAOnhB,MAAKoqC,GAAWjpB,EAC1B,CACGkM,gBACA,OAAOrtB,MAAKqtB,EACf,CACG3C,YACA,OAAO1qB,MAAK0qB,EACf,EAKL,MAAM2hB,GAAoB,IAAIxtC,IAAI,CAC9B,CAACikB,GAAcpC,IAAID,WAAWiX,mBAAoB,OAEtD,MAAMsU,GACFxlC,UAAgC,UAMhC8lC,IAAsB,IAAIxP,GAAgB9E,YAAW,IAAM,IAAIl5B,MAK/DytC,IAAgB,IAAI1tC,IAMpB2tC,IAAmB,IAAI3tC,IACvB4tC,IACAC,IACAhP,IACA79B,YAAY6sC,GACR1sC,MAAK0sC,GAAcA,EACnB1sC,MAAKysC,GAAuB,IAAIN,GAAyB3B,oBAAoBkC,EAAWC,6BACxF3sC,MAAK09B,IAA0B,CAClC,CACGA,6BACA,OAAO19B,MAAK09B,EACf,CAIDl3B,UAAkBslC,EAAWc,EAAiB7mB,GAC1C,OAAOrmB,KAAKC,UAAU,CAAEmsC,YAAWc,kBAAiB7mB,WACvD,CACDqJ,cAAc1E,EAAO2C,GACjBrtB,KAAKy3B,qBAAqBrwB,QAAQ6G,QAAQyc,GAAQ2C,EAAW3C,EAAM2E,OACtE,CACDoI,qBAAqB/M,EAAO2C,EAAWye,GACnC,MAAMe,EAAe,IAAIT,GAAa1hB,EAAO2C,GACvCyf,EAAiB9sC,MAAKysC,GAAqBvB,6BAA6BY,EAAWze,GACzFrtB,MAAK+sC,GAAaF,EAAcf,GAEhC,IAAK,MAAM/lB,KAAW+mB,EAClB9sC,MAAK0sC,GAAYM,oBAAoBlF,GAAyBP,oBAAoB0F,kBAAkBviB,EAAO3E,IAC3G/lB,MAAKktC,GAAeL,EAAc9mB,EAAS+lB,EAElD,CACD39B,gBAAgBg/B,EAAYjP,EAAYnY,GAEpC,IAAK,MAAMsH,KAAa6Q,EACF,OAAd7Q,GAEArtB,MAAK0sC,GAAYC,4BAA4Bnb,WAAWnE,GAGhE,IAAK,MAAMye,KAAaqB,EACpB,IAAK,MAAM9f,KAAa6Q,EAAY,OAC1Bl+B,MAAKotC,GAAetB,EAAWze,GACrCrtB,MAAKysC,GAAqBtE,UAAU2D,EAAWze,EAAWtH,GAC1D,IAAK,MAAM8mB,KAAgB7sC,MAAKqtC,GAAmBvB,EAAWze,EAAWtH,GAErE/lB,MAAK0sC,GAAYM,oBAAoBlF,GAAyBP,oBAAoB0F,kBAAkBJ,EAAaniB,MAAO3E,IACxH/lB,MAAKktC,GAAeL,EAAc9mB,EAAS+lB,EAElD,CAER,CAKD39B,SAAqB29B,EAAWze,GAExBye,EAAU1oC,WAAW4oC,IAAasB,MAEhB,OAAdjgB,GACArtB,MAAK09B,IAA0B,QACzBt2B,QAAQ6N,IAAIjV,MAAK0sC,GAClBC,4BACAjD,iBACAxtC,KAAK2oB,GAAYA,EAAQ6N,UAAUiL,gCAGlC39B,MAAK0sC,GACNC,4BACAnb,WAAWnE,GACXqF,UAAUiL,sBAG1B,CACDyK,YAAY+E,EAAYjP,EAAYnY,GAChC/lB,MAAKysC,GAAqBb,eAAeuB,EAAYjP,EAAYnY,EACpE,CAIDgnB,IAAaF,EAAcf,GACvB,IAAKO,GAAkBh0B,IAAIyzB,GAEvB,OAEJ,MAAMyB,EAAevB,IAAawB,GAAW1B,EAAWe,EAAaxf,WAChErtB,MAAKusC,GAAcl0B,IAAIk1B,IACxBvtC,MAAKusC,GAAcxtC,IAAIwuC,EAAc,IAAItB,GAAYhC,OAAOoC,GAAkBn0B,IAAI4zB,KAEtF9rC,MAAKusC,GAAcr0B,IAAIq1B,GAAc9yB,IAAIoyB,GAEzC7sC,MAAKssC,GAAoBp0B,IAAI4zB,GAAWrxB,IAAIoyB,EAAaxf,UAC5D,CAID6f,IAAeL,EAAc9mB,EAAS+lB,GAClC,IAAKO,GAAkBh0B,IAAIyzB,GAEvB,OAEJ,MAAM2B,EAAiBzB,IAAawB,GAAW1B,EAAWe,EAAaxf,UAAWtH,GAClF/lB,MAAKwsC,GAAiBztC,IAAI0uC,EAAgBxwC,KAAK+U,IAAIhS,MAAKwsC,GAAiBt0B,IAAIu1B,IAAmB,EAAGZ,EAAa1rB,IACnH,CAIDksB,IAAmBvB,EAAWze,EAAWtH,GACrC,MAAMwnB,EAAevB,IAAawB,GAAW1B,EAAWze,GAClDogB,EAAiBzB,IAAawB,GAAW1B,EAAWze,EAAWtH,GAC/D2nB,EAAoB1tC,MAAKwsC,GAAiBt0B,IAAIu1B,KAAoBE,IAClE/hC,EAAS5L,MAAKusC,GACfr0B,IAAIq1B,IACHr1B,MACDpc,QAAQ8xC,GAAYA,EAAQzsB,GAAKusB,KAAsB,GAY5D,OAXkB,OAAdrgB,GAEA9uB,MAAM4Z,KAAKnY,MAAKssC,GAAoBp0B,IAAI4zB,GAAW1vC,QAC9CN,QAAQ+xC,GAEE,OAAfA,GAEI7tC,MAAK0sC,GAAYC,4BAA4B/C,WAAWiE,KACvD3xC,KAAK2xC,GAAe7tC,MAAKqtC,GAAmBvB,EAAW+B,EAAY9nB,KACnE/O,SAAS0S,GAAW9d,EAAOlP,QAAQgtB,KAErC9d,EAAO0/B,MAAK,CAACwC,EAAIC,IAAOD,EAAG3sB,GAAK4sB,EAAG5sB,IAC7C,EAEe6sB,GAAAhC,aAAGA,aCpMvBvxC,OAAOC,eAAe61B,GAAS,aAAc,CAAE31B,OAAO,IAClC21B,GAAA0d,kBAAG,EACvB,MAAMnrB,GAAgBvjB,EAwEFgxB,GAAA0d,aAtEpB,MAEIpd,IAAuB,IAAIhyB,IAE3B+xB,IAAY,IAAI/xB,IACZgyB,0BACA,OAAO7wB,MAAK6wB,EACf,CACGD,eACA,OAAO5wB,MAAK4wB,EACf,CAEDmD,WAAWj4B,GACP,OAAOyC,MAAM4Z,KAAKnY,MAAK4wB,GAAUlW,UAAU5e,QAAQopB,SACxBpnB,IAAnBhC,EAAO0xB,SAAyB1xB,EAAO0xB,UAAYtI,EAAMsI,iBAG5B1vB,IAA7BhC,EAAO0zB,mBACP1zB,EAAO0zB,oBAAsBtK,EAAMsK,2BAGZ1xB,IAAvBhC,EAAOoyB,aACPpyB,EAAOoyB,cAAgBhJ,EAAMgJ,qBAGCpwB,IAA9BhC,EAAOgxB,oBACPhxB,EAAOgxB,qBAAuB5H,EAAM4H,4BAGlBhvB,IAAlBhC,EAAO20B,QAAwB30B,EAAO20B,SAAWvL,EAAMuL,gBAGvC3yB,IAAhBhC,EAAOyH,MAAsBzH,EAAOyH,OAAS2hB,EAAM3hB,cAGhCzF,IAAnBhC,EAAOkpB,SAAyBlpB,EAAOkpB,UAAYE,EAAMF,gBAGjClnB,IAAxBhC,EAAO60B,cACP70B,EAAO60B,eAAiBzL,EAAMyL,qBAKzC,CACD4G,UAAUz7B,GACN,MAAMoyC,EAAcluC,KAAK+zB,WAAWj4B,GACpC,GAA2B,IAAvBoyC,EAAY1sC,OAGhB,OAAO0sC,EAAY,EACtB,CAEDrI,SAAS/pC,GACL,MAAMqyC,EAAanuC,KAAKu3B,UAAUz7B,GAClC,QAAmBgC,IAAfqwC,EACA,MAAM,IAAIrrB,GAAcjC,QAAQe,qBAAqB,SAASliB,KAAKC,UAAU7D,gBAEjF,OAAOqyC,CACV,CAEDhb,aAAar3B,GACTkE,KAAK+zB,WAAWj4B,GAAQI,KAAKgpB,IACzBllB,MAAK4wB,GAAUG,OAAO7L,EAAMsI,SAC5BjvB,MAAM4Z,KAAKnY,MAAK6wB,GAAqB5W,WAChCne,QAAO,EAAC,CAAGsyC,KAAOA,IAAMlpB,EAAMsI,UAC9BtxB,KAAI,EAAEinB,KAAYnjB,MAAK6wB,GAAqBE,OAAO5N,IAAQ,GAEvE,GCxDL1oB,OAAOC,eAAe2zC,EAAS,aAAc,CAAEzzC,OAAO,IACpCyzC,EAAAC,gBAAG,EACrB,MAAM1G,GAAoBroC,EACpByrB,GAAW/oB,EACXssC,GAAuBpjC,EACvBqjC,GAAwBpjC,EACxBqjC,GAA8BpjC,GAC9BqjC,GAAoBxuB,GACpByuB,GAAoBC,GAC1B,MAAMN,WAAmB1G,GAAkB9d,aACvC+kB,IACAC,IACAC,IACAve,GACAD,GACAtF,GACA+jB,IAA0BluC,IACjBd,MAAK+uC,GAAkB3F,eAAetoC,GAASnC,OAAOuC,IACvDlB,MAAKirB,IAAUD,GAASH,QAAQY,OAAQvqB,EAAM,GAChD,EAEN+tC,IAA0B9gC,MAAO+gC,IAC7B,MAAMpuC,EAAUouC,EAAapuC,QACA,OAAzBouC,EAAanpB,UACbjlB,EAAiB,QAAIouC,EAAanpB,eAEhC/lB,MAAK8uC,GAAWlgB,YAAY9tB,EAAQ,EAE9CjB,YAAYsvC,EAAepK,EAAeC,EAAciD,EAAQhd,GAC5DlrB,QACAC,MAAKirB,EAAUA,EACfjrB,MAAKwwB,EAA0B,IAAIie,GAA4BhF,uBAC/DzpC,MAAKuwB,EAAgB,IAAIoe,GAAkBV,aAC3CjuC,MAAK6uC,GAAgB,IAAIN,GAAqBxjB,gBAAgB/qB,MAAKivC,GAAyBjvC,MAAKirB,GACjGjrB,MAAK8uC,GAAaK,EAClBnvC,MAAK8uC,GAAWM,aAAapvC,MAAKgvC,IAClChvC,MAAK+uC,GAAoB,IAAIP,GAAsB7G,iBAAiB3nC,MAAKuwB,EAAewU,EAAe,IAAI2J,GAAkB1C,aAAahsC,MAAOglC,EAAciD,EAAQjoC,MAAKwwB,EAAyBxwB,MAAKirB,GAC1MjrB,MAAK+uC,GAAkB9kB,GAAG,YAAa+R,IACnCh8B,KAAKgtC,oBAAoBhR,EAAS,GAEzC,CACDx1B,4BAA4B2oC,EAAepK,EAAeC,EAAciD,EAAQhd,GAC5E,MAAMokB,EAAS,IAAIf,GAAWa,EAAepK,EAAeC,EAAciD,EAAQhd,GAC5E0B,EAAYoY,EAAcE,gBAUhC,aARMtY,EAAUC,YAAY,4BAA6B,CAAE0iB,UAAU,UAE/D3iB,EAAUC,YAAY,uBAAwB,CAChDiR,YAAY,EACZC,wBAAwB,EACxBj8B,SAAS,UAEPwtC,EAAOE,yBACNF,CACV,CACDlhC,qCACU/G,QAAQ6N,IAAIjV,MAAKwwB,EAClBwV,sBACA9pC,KAAKi4B,GAAMA,EAAEiS,gBACrB,CAID4G,oBAAoBkC,GAChBlvC,MAAK6uC,GAAcp0B,IAAIy0B,EAC1B,CACDM,QACIxvC,MAAK8uC,GAAWU,OACnB,CACD7C,4BACI,OAAO3sC,MAAKwwB,CACf,EAEaif,EAAAnB,WAAGA,mBCzErB7zC,OAAOC,eAAeiyB,GAAS,aAAc,CAAE/xB,OAAO,IACrC+xB,GAAA+iB,eAAG,EACpB,MAAM9H,GAAoBroC,EAC1B,MAAMmwC,WAAkB9H,GAAkB9d,aACtCib,IACAN,IACA5kC,YAAYklC,EAAeN,GACvB1kC,QACAC,MAAK+kC,GAAiBA,EACtB/kC,MAAKykC,GAAaA,CACrB,CAODj+B,cAAcu+B,EAAeN,GACzB,OAAO,IAAIiL,GAAU3K,EAAeN,EACvC,CAMD7X,YAAYyC,KAAW9pB,GACnB,MAAMoqC,EAAQpqC,EAAO,GACrB,OAAOvF,MAAK+kC,GAAenY,YAAYyC,EAAQsgB,EAAO3vC,MAAKykC,GAC9D,EAEY9X,GAAA+iB,UAAGA,aC9CpBj1C,OAAOC,eAAeqqC,GAAS,aAAc,CAAEnqC,OAAO,IACjCmqC,GAAA6K,mBAAG,EACxB,MAAMC,GAAiBtwC,GA6GFwlC,GAAA6K,cAxGrB,MACId,IACA5I,IAEA4J,IAAqB,IAAIjxC,IACzBkxC,IAAoB,IAAIlxC,IACxBmxC,IACAC,IAAU,EACVpwC,YAAYivC,EAAWkB,EAAM,UACzBhwC,MAAK8uC,GAAaA,EAClB9uC,MAAKgwC,GAAOA,EACZhwC,MAAK8uC,GAAWM,aAAapvC,MAAK2uB,IAClC3uB,MAAKkmC,GAAoB2J,GAAeH,UAAU3tC,OAAO/B,KAAM,KAClE,CAIDwvC,QACIxvC,MAAK8uC,GAAWU,QAChB,IAAK,MAAS,EAAAxjB,OAAEA,EAAM9qB,MAAEA,MAAYlB,MAAK+vC,GACrC/jB,EAAO9qB,GAEXlB,MAAK+vC,GAAkBG,QACvBlwC,MAAK8vC,GAAmBI,OAC3B,CAIDjL,gBACI,OAAOjlC,MAAKkmC,EACf,CAMDR,aAAajB,GACT,MAAM9X,EAAY3sB,MAAK8vC,GAAmB53B,IAAIusB,GAC9C,IAAK9X,EACD,MAAM,IAAIrxB,MAAM,0BAEpB,OAAOqxB,CACV,CACDC,YAAYyC,EAAQ9pB,EAAQk/B,GACxB,OAAO,IAAIr9B,SAAQ,CAAC6G,EAAS+d,KACzB,MAAM7K,EAAKnhB,MAAKiwC,KAChBjwC,MAAK+vC,GAAkBhxC,IAAIoiB,EAAI,CAC3BlT,UACA+d,SACA9qB,MAAO,IAAI5F,MAAM,GAAG+zB,KAAU3vB,KAAKC,UAAU4F,MAAWk/B,GAAa,8DAEzE,MAAM0L,EAAa,CAAEhvB,KAAIkO,SAAQ9pB,UAC7Bk/B,IACA0L,EAAW1L,UAAYA,GAE3B,MAAM2L,EAAa1wC,KAAKC,UAAUwwC,GAC5BE,EAAgB3wC,KAAKC,UAAUwwC,EAAY,KAAM,GAClDnwC,MAAK8uC,GAAWlgB,YAAYwhB,IAAazxC,OAAOuC,IACjDlB,MAAKgwC,GAAK,QAAS9uC,GACnBlB,MAAK8uC,GAAWU,OAAO,IAE3BxvC,MAAKgwC,GAAK,SAAUK,EAAc,GAEzC,CACD1hB,IAAc7tB,IACV,MAAMwvC,EAAS5wC,KAAK+M,MAAM3L,GACpBuvC,EAAgB3wC,KAAKC,UAAU2wC,EAAQ,KAAM,GAInD,GAHAtwC,MAAKgwC,GAAK,aAAcK,GAGF,4BAAlBC,EAAOjhB,OAAsC,CAC7C,MAAMoV,UAAEA,GAAc6L,EAAO/qC,OAC7BvF,MAAK8vC,GAAmB/wC,IAAI0lC,EAAWoL,GAAeH,UAAU3tC,OAAO/B,KAAMykC,GAChF,MACI,GAAsB,8BAAlB6L,EAAOjhB,OAAwC,CACpD,MAAMoV,UAAEA,GAAc6L,EAAO/qC,OACdvF,MAAK8vC,GAAmB53B,IAAIusB,IAEvCzkC,MAAK8vC,GAAmB/e,OAAO0T,EAEtC,CACD,QAAkB3mC,IAAdwyC,EAAOnvB,GAAkB,CAEzB,MAAMovB,EAAYvwC,MAAK+vC,GAAkB73B,IAAIo4B,EAAOnvB,IACpDnhB,MAAK+vC,GAAkBhf,OAAOuf,EAAOnvB,IACjCovB,IACID,EAAO1kC,OACP2kC,EAAUtiC,QAAQqiC,EAAO1kC,QAEpB0kC,EAAOpvC,OACZqvC,EAAUvkB,OAAOskB,EAAOpvC,OAGnC,MACI,GAAIovC,EAAOjhB,OAAQ,CACpB,MAAM+X,EAASkJ,EAAO7L,UAChBzkC,MAAK8vC,GAAmB53B,IAAIo4B,EAAO7L,WACnCzkC,MAAKkmC,GACPkB,GACAA,EAAO/c,KAAKimB,EAAOjhB,OAAQihB,EAAO/qC,QAAU,CAAA,EAEnD,cC5FT9K,OAAOC,eAAe81C,GAAS,aAAc,CAAE51C,OAAO,IAC5B41C,GAAAC,wBAAG,EAqBHD,GAAAC,mBApB1B,MACI9hB,IAAa,KACb+hB,IACA7wC,YAAY6wC,GACR1wC,MAAK0wC,GAAaA,EAClB1wC,MAAK0wC,GAAWzmB,GAAG,WAAYnpB,IAC3Bd,MAAK2uB,KAAa7tB,EAAQ,GAEjC,CACDsuC,aAAazgB,GACT3uB,MAAK2uB,GAAaA,CACrB,CACDC,YAAY9tB,GACRd,MAAK0wC,GAAWC,KAAK7vC,EACxB,CACD0uC,QACIxvC,MAAK2uB,GAAa,KAClB3uB,MAAK0wC,GAAWlB,OACnB,eCpBL/0C,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAA81C,mBAA6B91C,EAAwBi1C,cAAAj1C,EAAA+0C,eAAoB,EACzE,IAAIG,EAAiBtwC,GACrB9E,OAAOC,eAAeC,EAAS,YAAa,CAAEqlB,YAAY,EAAM9H,IAAK,WAAc,OAAO23B,EAAeH,SAAU,IACnH,IAAIkB,EAAqB3uC,GACzBxH,OAAOC,eAAeC,EAAS,gBAAiB,CAAEqlB,YAAY,EAAM9H,IAAK,WAAc,OAAO04B,EAAmBhB,aAAc,IAC/H,IAAIiB,EAA0B1lC,GAC9B1Q,OAAOC,eAAeC,EAAS,qBAAsB,CAAEqlB,YAAY,EAAM9H,IAAK,WAAc,OAAO24B,EAAwBJ,kBAAmB,mBCvB9Ih2C,OAAOC,eAAeo2C,GAAS,aAAc,CAAEl2C,OAAO,IACtDk2C,GAAAd,IAAcc,GAAAC,kBAAuB,EAiBrC,MAAM/lB,GAAWzrB,EAWjB,SAASyxC,GAA6BC,GAClC,MAAMC,EAAc,GAAGD,QACjBE,EAAoBC,SAASC,eAAeH,GAClD,GAAIC,EACA,OAAOA,EAEX,MAAMG,EAAeF,SAASC,eAAe,WACvCE,EAAUH,SAASI,cAAc,OACvCD,EAAQE,UAAY,UACpBH,EAAaI,YAAYH,GACzB,MAAMI,EAAWP,SAASI,cAAc,OAIxC,OAHAG,EAASF,UAAY,OACrBE,EAASC,UAAY,OAAOX,kBAAwBC,wBACpDI,EAAaI,YAAYC,GAClBP,SAASC,eAAeH,EACnC,CAaoBJ,GAAAC,aAZpB,WAESc,WAAWT,SAASU,kBAGzBD,WAAWT,SAASU,gBAAgBF,UA9Bf,y8BAgCrBZ,GAA6BhmB,GAASH,QAAQY,QAC9CulB,GAA6BhmB,GAASH,QAAQ0e,MAC9CyH,GAA6BhmB,GAASH,QAAQmK,kBAC9Cgc,GAA6BhmB,GAASH,QAAQknB,KAClD,EAiBWjB,GAAAd,IAfX,SAAaiB,KAAYe,GAErB,IAAKH,WAAWT,SAASU,gBACrB,OAGJG,EAAOC,QAAQC,mBAAmBzyC,KAAKC,UAAU,CAAEsxC,UAASe,cAC5D,MAAMI,EAAmBpB,GAA6BC,GAGhDoB,EAAcjB,SAASI,cAAc,OAC3Ca,EAAYZ,UAAY,MACxBY,EAAYC,YAAcN,EAAS10C,KAAK,KACxC80C,EAAiBV,YAAYW,EACjC;;;;;;;;;;;;;;;;;;;ACtDA,IAAIxyB,GAAmB7f,GAAQA,EAAK6f,kBAAqBplB,OAAOsH,OAAM,SAAa+d,EAAGha,EAAG/J,EAAGgkB,QAC7EjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3B,IAAIw2C,EAAO93C,OAAO+3C,yBAAyB1sC,EAAG/J,GACzCw2C,KAAS,QAASA,GAAQzsC,EAAEzB,WAAakuC,EAAKE,UAAYF,EAAKG,gBAClEH,EAAO,CAAEvyB,YAAY,EAAM9H,IAAK,WAAa,OAAOpS,EAAE/J,EAAG,IAE3DtB,OAAOC,eAAeolB,EAAGC,EAAIwyB,EAChC,EAAA,SAAczyB,EAAGha,EAAG/J,EAAGgkB,QACTjiB,IAAPiiB,IAAkBA,EAAKhkB,GAC3B+jB,EAAEC,GAAMja,EAAE/J,EACb,GACGokB,GAAsBngB,GAAQA,EAAKmgB,qBAAwB1lB,OAAOsH,OAAM,SAAa+d,EAAGM,GACxF3lB,OAAOC,eAAeolB,EAAG,UAAW,CAAEE,YAAY,EAAMplB,MAAOwlB,GAClE,EAAI,SAASN,EAAGM,GACbN,EAAW,QAAIM,CACnB,GACIC,GAAgBrgB,GAAQA,EAAKqgB,cAAiB,SAAUjc,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIwH,EAAS,CAAA,EACb,GAAW,MAAPxH,EAAa,IAAK,IAAIrI,KAAKqI,EAAe,YAANrI,GAAmBtB,OAAO8B,UAAUC,eAAeC,KAAK2H,EAAKrI,IAAI8jB,GAAgBjU,EAAQxH,EAAKrI,GAEtI,OADAokB,GAAmBvU,EAAQxH,GACpBwH,CACX,EACAnR,OAAOC,eAAei4C,EAAS,aAAc,CAAE/3C,OAAO,IACtD,MAAMg4C,GAASvyB,GAAa9gB,GACtBszC,GAAa5wC,EACb6wC,GAAkB3nC,EAClB4nC,GAAa3nC,GACb4f,GAAW3f,EACXy8B,GAA2B5nB,GAC3B8yB,GAAqBpE,GAErBqE,GAuMN9kC,iBACI,OAAO,IAAI/G,SAAS6G,IAChBikC,OAAOgB,gBAAmB7e,KACtB,EAAI2e,GAAmBhD,KAAKhlB,GAASH,QAAQY,OAAQ,qBAAsB4I,GAC3EpmB,EAAQomB,EAAS,CACpB,GAET,CA9MgC8e,GAC3B,YACD,EAAIH,GAAmBjC,gBAEvB,MAAM/L,QAAqBiO,GACrBvG,QA+BV,SAA0B1H,GACtB,MAAMoO,EACFzkB,IAAa,KACb9uB,cACIqyC,OAAOmB,cAAiBjD,IAEpB,IAAIkD,GADJ,EAAIN,GAAmBhD,KAAKhlB,GAASH,QAAQ0e,KAAM,aAAc6G,GAEjE,IACIkD,EAAgBF,GAAoBG,GAAkBnD,EACzD,CACD,MAAOj0C,GAGH,YADA6D,MAAKwzC,GAAkBpD,EAAYyC,GAAWhyB,QAAQC,UAAUO,gBAAiBllB,EAAE2E,QAAS,KAE/F,CACDd,MAAK2uB,IAAYlyB,KAAK,KAAM62C,EAAc,CAEjD,CACDlE,aAAazgB,GACT3uB,MAAK2uB,GAAaA,CACrB,CACDC,YAAY9tB,GACR,MAAMsvC,EAAa1wC,KAAKC,UAAUmB,GAClCoxC,OAAOuB,iBAAiBrD,IACxB,EAAI4C,GAAmBhD,KAAKhlB,GAASH,QAAQ0e,KAAM,SAAU6G,EAChE,CACDZ,QACIxvC,MAAK2uB,GAAa,KAClBujB,OAAOmB,cAAgB,IAC1B,CACDG,IAAkBE,EAAkBC,EAAW/tC,EAAcmgB,GACzD,MAAMujB,EAAgB8J,GAAoBQ,GAAkBF,EAAkBC,EAAW/tC,GACrFmgB,EAEA/lB,KAAK4uB,YAAY,IACV0a,EACHvjB,YAIJ/lB,KAAK4uB,YAAY0a,EAExB,CACD9iC,UAAoB5L,GAChB,OAAc,OAAVA,EACO,OAEP2D,MAAMC,QAAQ5D,GACP,eAEGA,CACjB,CACD4L,UAAyB4pC,EAAYuD,EAAW/tC,GAG5C,IAAIiuC,EACJ,IACI,MAAM1D,EAAazwC,KAAK+M,MAAM2jC,GACuB,WAAjDgD,GAAoBU,GAAa3D,IACjC,OAAQA,IACR0D,EAAY1D,EAAWhvB,GAE9B,CACD,MAAS,CACT,MAAO,CACHA,GAAI0yB,EACJ3yC,MAAOyyC,EACP7yC,QAAS8E,EAGhB,CACDY,UAAyB4pC,GACrB,IAAIkD,EACJ,IACIA,EAAgB5zC,KAAK+M,MAAM2jC,EAC9B,CACD,MACI,MAAM,IAAI90C,MAAM,4BACnB,CACD,MAAMsS,EAAawlC,GAAoBU,GAAaR,GACpD,GAAmB,WAAf1lC,EACA,MAAM,IAAItS,MAAM,gCAAgCsS,KAGpD,MAAMuT,GAAEA,EAAEkO,OAAEA,EAAM9pB,OAAEA,GAAW+tC,EACzBS,EAASX,GAAoBU,GAAa3yB,GAChD,GAAe,WAAX4yB,IAAwBh3C,OAAOD,UAAUqkB,IAAOA,EAAK,EAGrD,MAAM,IAAI7lB,MAAM,qCAAqCy4C,KAEzD,MAAMC,EAAaZ,GAAoBU,GAAazkB,GACpD,GAAmB,WAAf2kB,EACA,MAAM,IAAI14C,MAAM,kCAAkC04C,KAEtD,MAAMC,EAAab,GAAoBU,GAAavuC,GACpD,GAAmB,WAAf0uC,EACA,MAAM,IAAI34C,MAAM,kCAAkC24C,KAEtD,IAAIluB,EAAUutB,EAAcvtB,QAC5B,QAAgBjoB,IAAZioB,EAAuB,CACvB,MAAMmuB,EAAcd,GAAoBU,GAAa/tB,GACrD,GAAoB,WAAhBmuB,EACA,MAAM,IAAI54C,MAAM,mCAAmC44C,KAGvC,KAAZnuB,IACAA,OAAUjoB,EAEjB,CACD,MAAO,CAAEqjB,KAAIkO,SAAQ9pB,SAAQwgB,UAChC,EAEL,OAAO+sB,GAAgBxE,WAAW6F,eAAe,IAAIf,EA5IzD,WAKI,MAAMgB,EACFzlB,IAAa,KACb9uB,cACIqyC,OAAOH,IAAIsC,UAAavzC,IACpBd,MAAK2uB,IAAYlyB,KAAK,KAAMqE,EAAQ,CAE3C,CACDsuC,aAAazgB,GACT3uB,MAAK2uB,GAAaA,CACrB,CACDC,YAAY9tB,GACRoxC,OAAOH,IAAIpB,KAAK7vC,EACnB,CACD0uC,QACIxvC,MAAK2uB,GAAa,KAClBujB,OAAOH,IAAIsC,UAAY,IAC1B,EAEL,OAAO,IAAItB,GAAWnD,cAAc,IAAIwE,GAAsB,IAAIpC,MAC9D,EAAIgB,GAAmBhD,KAAKhlB,GAASH,QAAQknB,OAAQC,EAAS,GAEtE,CAkHgFsC,GAAuBtP,EAAc,IAAIuP,GAAkBvB,GAAmBhD,IAC9J,CAjJ6BwE,CAAiBxP,IAC1C,EAAIgO,GAAmBhD,KAAKhlB,GAASH,QAAQY,OAAQ,YACrDihB,EAAWM,oBAAoBlF,GAAyBP,oBAAoB8B,eAAe,CAAEoL,UAAU,GAAQ,MAClH,EAPI,GAsJL,MAAMF,GACFjuB,4BAA4B/gB,GACxB,OAAOqtC,GAAOryB,OAAO+F,4BAA4B/gB,EACpD,CACDkhB,+BAA+BlhB,GAC3B,OAAOqtC,GAAOryB,OAAOkG,+BAA+BlhB,EACvD,CACDuf,qBAAqBvf,GACjB,OAAOqtC,GAAOryB,OAAOuE,qBAAqBvf,EAC7C,CACDqhB,wBAAwBrhB,GACpB,OAAOqtC,GAAOryB,OAAOqG,wBAAwBrhB,EAChD,CACDkgB,oBAAoBlgB,GAChB,OAAOqtC,GAAOryB,OAAOkF,oBAAoBlgB,EAC5C,CACDqgB,kBAAkBrgB,GACd,OAAOqtC,GAAOryB,OAAOqF,kBAAkBrgB,EAC1C,CACD8jB,uBAAuB9jB,GACnB,OAAOqtC,GAAOhyB,IAAIyI,uBAAuB9jB,EAC5C,CACDgkB,sBAAsBhkB,GAClB,OAAOqtC,GAAOhyB,IAAI2I,sBAAsBhkB,EAC3C,CACDqkB,qBAAqBrkB,GACjB,OAAOqtC,GAAOjwB,QAAQiH,qBAAqBrkB,EAC9C,CACD4hB,oBAAoB5hB,GAChB,OAAOqtC,GAAOpyB,gBAAgB2G,oBAAoB5hB,EACrD,CACDwhB,mBAAmBxhB,GACf,OAAOqtC,GAAOpyB,gBAAgBuG,mBAAmBxhB,EACpD,CACD+hB,kBAAkB/hB,GACd,OAAOqtC,GAAOpyB,gBAAgB8G,kBAAkB/hB,EACnD,CACDiiB,iBAAiBjiB,GACb,OAAOqtC,GAAOpyB,gBAAgBgH,iBAAiBjiB,EAClD,CACDmiB,6BAA6BniB,GACzB,OAAOqtC,GAAOpyB,gBAAgBkH,6BAA6BniB,EAC9D,CACDyjB,iBAAiBzjB,GACb,OAAOqtC,GAAOpyB,gBAAgBwI,iBAAiBzjB,EAClD","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40]}